
usb_kb.elf:     file format elf32-littlenios2
usb_kb.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000020

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x000102ec memsz 0x000102ec flags r-x
    LOAD off    0x0001130c vaddr 0x1001030c paddr 0x10010d8c align 2**12
         filesz 0x00000a80 memsz 0x00000a80 flags rw-
    LOAD off    0x0001280c vaddr 0x1001180c paddr 0x1001180c align 2**12
         filesz 0x00000000 memsz 0x00000054 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000000  10000020  10000020  00011d8c  2**0
                  CONTENTS
  2 .text         0000f89c  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000a50  1000f8bc  1000f8bc  000108bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000a80  1001030c  10010d8c  0001130c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000054  1001180c  1001180c  0001280c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00011d8c  2**0
                  CONTENTS
  7 .sdram        00000000  10011860  10011860  00011d8c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00011d8c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000a88  00000000  00000000  00011db0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00020005  00000000  00000000  00012838  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 000079bb  00000000  00000000  0003283d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00009e48  00000000  00000000  0003a1f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00001ce0  00000000  00000000  00044040  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00002c6d  00000000  00000000  00045d20  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00016c26  00000000  00000000  0004898d  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  0005f5b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001308  00000000  00000000  0005f5f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00063451  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00063454  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00063460  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00063461  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00063462  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00063466  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0006346a  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000004  00000000  00000000  0006346e  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000004  00000000  00000000  00063472  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000004  00000000  00000000  00063476  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  0006347a  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000026  00000000  00000000  00063482  2**0
                  CONTENTS, READONLY
 30 .jdi          0000401f  00000000  00000000  000634a8  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0006b6ad  00000000  00000000  000674c7  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000020 l    d  .text	00000000 .text
1000f8bc l    d  .rodata	00000000 .rodata
1001030c l    d  .rwdata	00000000 .rwdata
1001180c l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
10011860 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../usb_kb_bsp//obj/HAL/src/crt0.o
10000058 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 io_handler.c
00000000 l    df *ABS*	00000000 main.c
1001180c l     O .bss	00000002 ctl_reg.3335
1001180e l     O .bss	00000002 no_device.3336
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
1001007a l     O .rodata	00000010 zeroes.4181
1001008a l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10004388 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10005f30 l     F .text	00000008 __fp_lock
10005f38 l     F .text	00000008 __fp_unlock
10005f4c l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
1001030c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
10010750 l     O .rwdata	00000020 lc_ctype_charset
10010730 l     O .rwdata	00000020 lc_message_charset
10010770 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
100100bc l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
1000947c l     F .text	000000fc __sprint_r.part.0
100101f0 l     O .rodata	00000010 blanks.4125
100101e0 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
1000bf80 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1000e8d0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1000e9f8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1000ea24 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1000eb2c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1000ec28 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1000ed0c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1000eed4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10010d88 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
1000f188 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10008abc g     F .text	00000074 _mprec_log10
10008ba8 g     F .text	0000008c __any_on
1000aea8 g     F .text	00000054 _isatty_r
100100c8 g     O .rodata	00000028 __mprec_tinytens
1000ee38 g     F .text	0000005c alt_main
10001fd4 g     F .text	000000b8 _puts_r
1000aefc g     F .text	0000005c _lseek_r
10010d8c g       *ABS*	00000000 __flash_rwdata_start
1000d2f0 g     F .text	00000084 .hidden __eqdf2
10011860 g       *ABS*	00000000 __alt_heap_start
10001f98 g     F .text	0000003c printf
1000b124 g     F .text	0000009c _wcrtomb_r
10009374 g     F .text	0000005c __sseek
10006294 g     F .text	00000010 __sinit
1000afb4 g     F .text	00000154 __swbuf_r
10006d0c g     F .text	0000007c _setlocale_r
100060ec g     F .text	00000078 __sfmoreglue
1000eeb4 g     F .text	00000020 __malloc_unlock
10001e70 g     F .text	00000080 UsbGetRetryCnt
1000796c g     F .text	0000015c memmove
1000005c g     F .text	00000084 IO_init
1000627c g     F .text	00000018 _cleanup
10007bec g     F .text	000000a8 _Balloc
1000d374 g     F .text	000000e0 .hidden __gtdf2
1000f574 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
10000000 g     F .entry	0000000c __reset
10000020 g       *ABS*	00000000 __flash_exceptions_start
1000ae50 g     F .text	00000058 _fstat_r
10011828 g     O .bss	00000004 errno
100092f0 g     F .text	00000008 __seofread
10011830 g     O .bss	00000004 alt_argv
10018d58 g       *ABS*	00000000 _gp
1000f158 g     F .text	00000030 usleep
10010bd8 g     O .rwdata	00000180 alt_fd_list
10007834 g     F .text	00000138 memcpy
10005f40 g     F .text	0000000c _cleanup_r
1000e6f8 g     F .text	000000d0 .hidden __floatsidf
1000d454 g     F .text	000000e0 .hidden __ltdf2
1000f8bc g       *ABS*	00000000 __DTOR_END__
1000208c g     F .text	00000014 puts
100091d4 g     F .text	00000074 __fpclassifyd
10008a18 g     F .text	000000a4 __ratio
1000a9b4 g     F .text	00000024 __vfiprintf_internal
00000000  w      *UND*	00000000 malloc
10001f6c g     F .text	0000002c _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1000c09c g     F .text	00000008 .hidden __udivsi3
1000eb7c g     F .text	000000ac isatty
10010118 g     O .rodata	000000c8 __mprec_tens
10006d88 g     F .text	0000000c __locale_charset
10011824 g     O .bss	00000004 __malloc_top_pad
10001510 g     F .text	00000264 UsbGetConfigDesc2
10010d60 g     O .rwdata	00000004 __mb_cur_max
10006db8 g     F .text	0000000c _localeconv_r
10008014 g     F .text	0000003c __i2b
100066f8 g     F .text	000004a4 __sfvwrite_r
10009248 g     F .text	00000054 _sbrk_r
1000af58 g     F .text	0000005c _read_r
10010d80 g     O .rwdata	00000004 alt_max_fd
1000ab60 g     F .text	00000100 _fclose_r
10005f00 g     F .text	00000030 fflush
10011820 g     O .bss	00000004 __malloc_max_sbrked_mem
1000c0d4 g     F .text	0000089c .hidden __adddf3
100087c0 g     F .text	0000011c __b2d
1000b964 g     F .text	0000061c .hidden __umoddi3
1000ed5c g     F .text	000000dc lseek
10010d58 g     O .rwdata	00000004 _global_impure_ptr
10008c34 g     F .text	000005a0 _realloc_r
10011860 g       *ABS*	00000000 __bss_end
1000b324 g     F .text	00000640 .hidden __udivdi3
1000ac74 g     F .text	00000184 _fputwc_r
100100f0 g     O .rodata	00000028 __mprec_bigtens
10007df8 g     F .text	00000104 __s2b
1000e7c8 g     F .text	000000a4 .hidden __floatunsidf
10008568 g     F .text	00000060 __mcmp
10000f70 g     F .text	000000fc UsbSetAddress
100062b4 g     F .text	00000018 __fp_lock_all
10010bb0 g     O .rwdata	00000028 alt_dev_null
1000f484 g     F .text	0000001c alt_dcache_flush_all
10007efc g     F .text	00000068 __hi0bits
1000010c g     F .text	00000028 IO_read
1000e670 g     F .text	00000088 .hidden __fixdfsi
10010d8c g       *ABS*	00000000 __ram_rwdata_end
10010d78 g     O .rwdata	00000008 alt_dev_list
1000f1d8 g     F .text	00000100 write
1001030c g       *ABS*	00000000 __ram_rodata_end
1000ea74 g     F .text	000000b8 fstat
1000d454 g     F .text	000000e0 .hidden __ledf2
10001ef0 g     F .text	0000007c UsbPrintMem
100082e0 g     F .text	00000140 __pow5mult
10009590 g     F .text	00001424 ___vfiprintf_internal_r
10011818 g     O .bss	00000004 __nlocale_changed
1000c0a4 g     F .text	00000008 .hidden __umodsi3
10011860 g       *ABS*	00000000 end
1000f8bc g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
1000e86c g     F .text	00000064 .hidden __clzsi2
100062a4 g     F .text	00000004 __sfp_lock_acquire
1000774c g     F .text	000000e8 memchr
10002138 g     F .text	000020fc ___vfprintf_internal_r
10001870 g     F .text	000000fc UsbClassRequest
10006408 g     F .text	000002f0 _free_r
10006d94 g     F .text	00000010 __locale_mb_cur_max
1000f6f4 g     F .text	00000194 __call_exitprocs
10011814 g     O .bss	00000004 __mlocale_changed
10010d64 g     O .rwdata	00000004 __malloc_sbrk_base
10000020 g     F .text	0000003c _start
10008420 g     F .text	00000148 __lshift
1000ef24 g     F .text	00000104 read
1000f30c g     F .text	00000020 alt_sys_init
1000f5e0 g     F .text	00000114 __register_exitproc
10008050 g     F .text	00000290 __multiply
1000c0ac g     F .text	00000028 .hidden __mulsi3
1001030c g       *ABS*	00000000 __ram_rwdata_start
1000f8bc g       *ABS*	00000000 __ram_rodata_start
10011838 g     O .bss	00000028 __malloc_current_mallinfo
100088dc g     F .text	0000013c __d2b
1000106c g     F .text	00000144 UsbGetDeviceDesc1
1000f32c g     F .text	00000158 alt_busy_sleep
1000aa34 g     F .text	00000054 _close_r
10011860 g       *ABS*	00000000 __alt_stack_base
10004258 g     F .text	00000130 __swsetup_r
1000c970 g     F .text	00000980 .hidden __divdf3
10006164 g     F .text	00000118 __sfp
10008b30 g     F .text	00000078 __copybits
100107a8 g     O .rwdata	00000408 __malloc_av_
100062b0 g     F .text	00000004 __sinit_lock_release
1000d534 g     F .text	0000086c .hidden __muldf3
1000929c g     F .text	00000054 __sread
10001dec g     F .text	00000084 UsbWaitTDListDone
1000ee94 g     F .text	00000020 __malloc_lock
1000f0a8 g     F .text	000000b0 sbrk
10005cd8 g     F .text	00000228 _fflush_r
1000aa88 g     F .text	000000d8 _calloc_r
1001180c g       *ABS*	00000000 __bss_start
10007ac8 g     F .text	00000124 memset
10000134 g     F .text	00000d3c main
10011834 g     O .bss	00000004 alt_envp
1001181c g     O .bss	00000004 __malloc_max_total_mem
10001774 g     F .text	000000fc UsbSetConfig
1000b108 g     F .text	0000001c __swbuf
100093d0 g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000ac60 g     F .text	00000014 fclose
100045b0 g     F .text	00001728 _dtoa_r
10006fa4 g     F .text	000007a8 _malloc_r
1000b298 g     F .text	00000030 __ascii_wctomb
10010d84 g     O .rwdata	00000004 alt_errno
10006b9c g     F .text	000000b8 _fwalk
1000bfec g     F .text	00000054 .hidden __divsi3
100062e4 g     F .text	00000124 _malloc_trim_r
1000196c g     F .text	00000144 UsbGetHidDesc
1000f8bc g       *ABS*	00000000 __CTOR_END__
100093d8 g     F .text	000000a4 strcmp
1000f8bc g       *ABS*	00000000 __flash_rodata_start
1000f8bc g       *ABS*	00000000 __DTOR_LIST__
1000d2f0 g     F .text	00000084 .hidden __nedf2
10000e9c g     F .text	00000024 UsbRead
1000f2d8 g     F .text	00000034 alt_irq_init
1000f028 g     F .text	00000080 alt_release_fd
10010200 g     O .rodata	00000100 .hidden __clz_tab
10011810 g     O .bss	00000004 _PathLocale
1000f594 g     F .text	00000014 atexit
1000a9d8 g     F .text	0000005c _write_r
10006dc4 g     F .text	0000001c setlocale
10010d5c g     O .rwdata	00000004 _impure_ptr
1001182c g     O .bss	00000004 alt_argc
1000f4fc g     F .text	0000005c _do_dtors
10006db0 g     F .text	00000008 __locale_cjk_lang
10008760 g     F .text	00000060 __ulp
100062cc g     F .text	00000018 __fp_unlock_all
10010d70 g     O .rwdata	00000008 alt_fs_list
10001ab0 g     F .text	0000033c UsbGetReportDesc
10000020 g       *ABS*	00000000 __ram_exceptions_start
10006de0 g     F .text	0000000c localeconv
10010d8c g       *ABS*	00000000 _edata
10011860 g       *ABS*	00000000 _end
10000e70 g     F .text	0000002c UsbWrite
10000020 g       *ABS*	00000000 __ram_exceptions_end
100092f8 g     F .text	0000007c __swrite
10010d68 g     O .rwdata	00000004 __malloc_trim_threshold
10006da4 g     F .text	0000000c __locale_msgcharset
1000f5a8 g     F .text	00000038 exit
10006c54 g     F .text	000000b8 _fwalk_reent
100085c8 g     F .text	00000198 __mdiff
1000c040 g     F .text	0000005c .hidden __modsi3
18000000 g       *ABS*	00000000 __alt_data_end
100062a8 g     F .text	00000004 __sfp_lock_release
10000000 g       *ABS*	00000000 __alt_mem_sdram
100000e0 g     F .text	0000002c IO_write
1000f888 g     F .text	00000034 _exit
10006dec g     F .text	000001b8 __smakebuf_r
100020a0 g     F .text	00000098 strlen
1000d374 g     F .text	000000e0 .hidden __gedf2
10010d6c g     O .rwdata	00000004 __wctomb
10009578 g     F .text	00000018 __sprint_r
1000f558 g     F .text	0000001c alt_icache_flush_all
10004234 g     F .text	00000024 __vfprintf_internal
1000b2c8 g     F .text	0000005c _wctomb_r
1000dda0 g     F .text	000008d0 .hidden __subdf3
10007f64 g     F .text	000000b0 __lo0bits
10001384 g     F .text	0000018c UsbGetConfigDesc1
1000f4a0 g     F .text	0000005c _do_ctors
10000ec0 g     F .text	000000b0 UsbSoftReset
1000b1c0 g     F .text	000000d8 wcrtomb
1000e920 g     F .text	000000d8 close
100011b0 g     F .text	000001d4 UsbGetDeviceDesc2
1000ec8c g     F .text	00000080 alt_load
1000adf8 g     F .text	00000058 fputwc
00000000  w      *UND*	00000000 free
100062ac g     F .text	00000004 __sinit_lock_acquire
10007cbc g     F .text	0000013c __multadd
10007c94 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000000:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000004:	08400814 	ori	at,at,32
    jmp r1
10000008:	0800683a 	jmp	at
	...

Disassembly of section .text:

10000020 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000020:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
10000024:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000028:	06840074 	movhi	gp,4097
    ori gp, gp, %lo(_gp)
1000002c:	d6a35614 	ori	gp,gp,36184
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000030:	00840074 	movhi	r2,4097
    ori r2, r2, %lo(__bss_start)
10000034:	10860314 	ori	r2,r2,6156

    movhi r3, %hi(__bss_end)
10000038:	00c40074 	movhi	r3,4097
    ori r3, r3, %lo(__bss_end)
1000003c:	18c61814 	ori	r3,r3,6240

    beq r2, r3, 1f
10000040:	10c00326 	beq	r2,r3,10000050 <_start+0x30>

0:
    stw zero, (r2)
10000044:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000048:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1000004c:	10fffd36 	bltu	r2,r3,10000044 <__alt_data_end+0xf8000044>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000050:	000ec8c0 	call	1000ec8c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10000054:	000ee380 	call	1000ee38 <alt_main>

10000058 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000058:	003fff06 	br	10000058 <__alt_data_end+0xf8000058>

1000005c <IO_init>:
//io_handler.c
#include "io_handler.h"
#include <stdio.h>

void IO_init(void)
{
1000005c:	deffff04 	addi	sp,sp,-4
10000060:	df000015 	stw	fp,0(sp)
10000064:	d839883a 	mov	fp,sp
	*otg_hpi_reset = 1;
10000068:	00800804 	movi	r2,32
1000006c:	00c00044 	movi	r3,1
10000070:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 1;
10000074:	00800c04 	movi	r2,48
10000078:	00c00044 	movi	r3,1
1000007c:	10c00005 	stb	r3,0(r2)
	*otg_hpi_r = 1;
10000080:	00802004 	movi	r2,128
10000084:	00c00044 	movi	r3,1
10000088:	10c00005 	stb	r3,0(r2)
	*otg_hpi_w = 1;
1000008c:	00801004 	movi	r2,64
10000090:	00c00044 	movi	r3,1
10000094:	10c00005 	stb	r3,0(r2)
	*otg_hpi_address = 0;
10000098:	00801c04 	movi	r2,112
1000009c:	10000015 	stw	zero,0(r2)
	*otg_hpi_data = 0;
100000a0:	00801404 	movi	r2,80
100000a4:	10000015 	stw	zero,0(r2)
	// Reset OTG chip
	*otg_hpi_cs = 0;
100000a8:	00800c04 	movi	r2,48
100000ac:	10000005 	stb	zero,0(r2)
	*otg_hpi_reset = 0;
100000b0:	00800804 	movi	r2,32
100000b4:	10000005 	stb	zero,0(r2)
	*otg_hpi_reset = 1;
100000b8:	00800804 	movi	r2,32
100000bc:	00c00044 	movi	r3,1
100000c0:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 1;
100000c4:	00800c04 	movi	r2,48
100000c8:	00c00044 	movi	r3,1
100000cc:	10c00005 	stb	r3,0(r2)
}
100000d0:	e037883a 	mov	sp,fp
100000d4:	df000017 	ldw	fp,0(sp)
100000d8:	dec00104 	addi	sp,sp,4
100000dc:	f800283a 	ret

100000e0 <IO_write>:

void IO_write(alt_u8 Address, alt_u16 Data)
{
100000e0:	defffd04 	addi	sp,sp,-12
100000e4:	df000215 	stw	fp,8(sp)
100000e8:	df000204 	addi	fp,sp,8
100000ec:	2007883a 	mov	r3,r4
100000f0:	2805883a 	mov	r2,r5
100000f4:	e0fffe05 	stb	r3,-8(fp)
100000f8:	e0bfff0d 	sth	r2,-4(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
}
100000fc:	e037883a 	mov	sp,fp
10000100:	df000017 	ldw	fp,0(sp)
10000104:	dec00104 	addi	sp,sp,4
10000108:	f800283a 	ret

1000010c <IO_read>:

alt_u16 IO_read(alt_u8 Address)
{
1000010c:	defffd04 	addi	sp,sp,-12
10000110:	df000215 	stw	fp,8(sp)
10000114:	df000204 	addi	fp,sp,8
10000118:	2005883a 	mov	r2,r4
1000011c:	e0bfff05 	stb	r2,-4(fp)
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	//printf("%x\n",temp);
	return temp;
10000120:	e0bffe0b 	ldhu	r2,-8(fp)
}
10000124:	e037883a 	mov	sp,fp
10000128:	df000017 	ldw	fp,0(sp)
1000012c:	dec00104 	addi	sp,sp,4
10000130:	f800283a 	ret

10000134 <main>:
//
//                                Main function
//
//----------------------------------------------------------------------------------------//
int main(void)
{
10000134:	defff904 	addi	sp,sp,-28
10000138:	dfc00615 	stw	ra,24(sp)
1000013c:	df000515 	stw	fp,20(sp)
10000140:	df000504 	addi	fp,sp,20
	IO_init();
10000144:	000005c0 	call	1000005c <IO_init>

	alt_u16 intStat;
	alt_u16 usb_ctl_val;
	static alt_u16 ctl_reg = 0;
	static alt_u16 no_device = 0;
	alt_u16 fs_device = 0;
10000148:	e03ffc0d 	sth	zero,-16(fp)
	int keycode = 0;
1000014c:	e03ffd15 	stw	zero,-12(fp)
	alt_u8 toggle = 0;
10000150:	e03ffb85 	stb	zero,-18(fp)
	alt_u8 data_size;
	alt_u8 hot_plug_count;
	alt_u16 code;

	printf("USB keyboard setup...\n\n");
10000154:	01040074 	movhi	r4,4097
10000158:	213e2f04 	addi	r4,r4,-1860
1000015c:	000208c0 	call	1000208c <puts>

	//----------------------------------------SIE1 initial---------------------------------------------------//
	USB_HOT_PLUG:
	UsbSoftReset();
10000160:	0000ec00 	call	10000ec0 <UsbSoftReset>

	// STEP 1a:
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10000164:	01005104 	movi	r4,324
10000168:	000b883a 	mov	r5,zero
1000016c:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10000170:	01302414 	movui	r4,49296
10000174:	017fffd4 	movui	r5,65535
10000178:	0000e700 	call	10000e70 <UsbWrite>

	/* Set HUSB_pEOT time */
	UsbWrite(HUSB_pEOT, 600); // adjust the according to your USB device speed
1000017c:	01006d04 	movi	r4,436
10000180:	01409604 	movi	r5,600
10000184:	0000e700 	call	10000e70 <UsbWrite>

	usb_ctl_val = SOFEOP1_TO_CPU_EN | RESUME1_TO_HPI_EN;// | SOFEOP1_TO_HPI_EN;
10000188:	00811004 	movi	r2,1088
1000018c:	e0bffb0d 	sth	r2,-20(fp)
	UsbWrite(HPI_IRQ_ROUTING_REG, usb_ctl_val);
10000190:	e0bffb0b 	ldhu	r2,-20(fp)
10000194:	01005084 	movi	r4,322
10000198:	100b883a 	mov	r5,r2
1000019c:	0000e700 	call	10000e70 <UsbWrite>

	intStat = A_CHG_IRQ_EN | SOF_EOP_IRQ_EN ;
100001a0:	00808404 	movi	r2,528
100001a4:	e0bffe0d 	sth	r2,-8(fp)
	UsbWrite(HOST1_IRQ_EN_REG, intStat);
100001a8:	e0bffe0b 	ldhu	r2,-8(fp)
100001ac:	01302314 	movui	r4,49292
100001b0:	100b883a 	mov	r5,r2
100001b4:	0000e700 	call	10000e70 <UsbWrite>
	// STEP 1a end

	// STEP 1b begin
	UsbWrite(COMM_R0,0x0000);//reset time
100001b8:	01007104 	movi	r4,452
100001bc:	000b883a 	mov	r5,zero
100001c0:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
100001c4:	01007184 	movi	r4,454
100001c8:	000b883a 	mov	r5,zero
100001cc:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
100001d0:	01007204 	movi	r4,456
100001d4:	000b883a 	mov	r5,zero
100001d8:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
100001dc:	01007284 	movi	r4,458
100001e0:	000b883a 	mov	r5,zero
100001e4:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
100001e8:	01007304 	movi	r4,460
100001ec:	000b883a 	mov	r5,zero
100001f0:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
100001f4:	01007384 	movi	r4,462
100001f8:	000b883a 	mov	r5,zero
100001fc:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
10000200:	01007404 	movi	r4,464
10000204:	000b883a 	mov	r5,zero
10000208:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
1000020c:	01007484 	movi	r4,466
10000210:	000b883a 	mov	r5,zero
10000214:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
10000218:	01007504 	movi	r4,468
1000021c:	000b883a 	mov	r5,zero
10000220:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10000224:	01007584 	movi	r4,470
10000228:	000b883a 	mov	r5,zero
1000022c:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10000230:	01007604 	movi	r4,472
10000234:	000b883a 	mov	r5,zero
10000238:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
1000023c:	01007684 	movi	r4,474
10000240:	000b883a 	mov	r5,zero
10000244:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
10000248:	01007704 	movi	r4,476
1000024c:	000b883a 	mov	r5,zero
10000250:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10000254:	01007784 	movi	r4,478
10000258:	000b883a 	mov	r5,zero
1000025c:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_INT_NUM,HUSB_SIE1_INIT_INT); //HUSB_SIE1_INIT_INT
10000260:	01007084 	movi	r4,450
10000264:	01401c84 	movi	r5,114
10000268:	0000e700 	call	10000e70 <UsbWrite>
	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
1000026c:	01000044 	movi	r4,1
10000270:	01738054 	movui	r5,52737
10000274:	00000e00 	call	100000e0 <IO_write>

	while (!(IO_read(HPI_STATUS) & 0xFFFF) )  //read sie1 msg register
10000278:	0001883a 	nop
1000027c:	010000c4 	movi	r4,3
10000280:	000010c0 	call	1000010c <IO_read>
10000284:	10bfffcc 	andi	r2,r2,65535
10000288:	103ffc26 	beq	r2,zero,1000027c <__alt_data_end+0xf800027c>
	{
	}
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
1000028c:	0001883a 	nop
10000290:	01000044 	movi	r4,1
10000294:	000010c0 	call	1000010c <IO_read>
10000298:	10bfffcc 	andi	r2,r2,65535
1000029c:	1083fb58 	cmpnei	r2,r2,4077
100002a0:	10000826 	beq	r2,zero,100002c4 <main+0x190>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
100002a4:	01000044 	movi	r4,1
100002a8:	000010c0 	call	1000010c <IO_read>
100002ac:	10bfffcc 	andi	r2,r2,65535
100002b0:	01040074 	movhi	r4,4097
100002b4:	213e3504 	addi	r4,r4,-1836
100002b8:	100b883a 	mov	r5,r2
100002bc:	0001f980 	call	10001f98 <printf>
		goto USB_HOT_PLUG;
100002c0:	003fa706 	br	10000160 <__alt_data_end+0xf8000160>
	}
	// STEP 1b end

	printf("STEP 1 Complete");
100002c4:	01040074 	movhi	r4,4097
100002c8:	213e3e04 	addi	r4,r4,-1800
100002cc:	0001f980 	call	10001f98 <printf>
	// STEP 2 begin
	UsbWrite(COMM_INT_NUM,HUSB_RESET_INT); //husb reset
100002d0:	01007084 	movi	r4,450
100002d4:	01401d04 	movi	r5,116
100002d8:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R0,0x003c);//reset time
100002dc:	01007104 	movi	r4,452
100002e0:	01400f04 	movi	r5,60
100002e4:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
100002e8:	01007184 	movi	r4,454
100002ec:	000b883a 	mov	r5,zero
100002f0:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
100002f4:	01007204 	movi	r4,456
100002f8:	000b883a 	mov	r5,zero
100002fc:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
10000300:	01007284 	movi	r4,458
10000304:	000b883a 	mov	r5,zero
10000308:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
1000030c:	01007304 	movi	r4,460
10000310:	000b883a 	mov	r5,zero
10000314:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
10000318:	01007384 	movi	r4,462
1000031c:	000b883a 	mov	r5,zero
10000320:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
10000324:	01007404 	movi	r4,464
10000328:	000b883a 	mov	r5,zero
1000032c:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
10000330:	01007484 	movi	r4,466
10000334:	000b883a 	mov	r5,zero
10000338:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
1000033c:	01007504 	movi	r4,468
10000340:	000b883a 	mov	r5,zero
10000344:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10000348:	01007584 	movi	r4,470
1000034c:	000b883a 	mov	r5,zero
10000350:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10000354:	01007604 	movi	r4,472
10000358:	000b883a 	mov	r5,zero
1000035c:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
10000360:	01007684 	movi	r4,474
10000364:	000b883a 	mov	r5,zero
10000368:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
1000036c:	01007704 	movi	r4,476
10000370:	000b883a 	mov	r5,zero
10000374:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10000378:	01007784 	movi	r4,478
1000037c:	000b883a 	mov	r5,zero
10000380:	0000e700 	call	10000e70 <UsbWrite>

	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
10000384:	01000044 	movi	r4,1
10000388:	01738054 	movui	r5,52737
1000038c:	00000e00 	call	100000e0 <IO_write>

	while (IO_read(HPI_MAILBOX) != COMM_ACK)
10000390:	0001883a 	nop
10000394:	01000044 	movi	r4,1
10000398:	000010c0 	call	1000010c <IO_read>
1000039c:	10bfffcc 	andi	r2,r2,65535
100003a0:	1083fb58 	cmpnei	r2,r2,4077
100003a4:	10000826 	beq	r2,zero,100003c8 <main+0x294>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
100003a8:	01000044 	movi	r4,1
100003ac:	000010c0 	call	1000010c <IO_read>
100003b0:	10bfffcc 	andi	r2,r2,65535
100003b4:	01040074 	movhi	r4,4097
100003b8:	213e3504 	addi	r4,r4,-1836
100003bc:	100b883a 	mov	r5,r2
100003c0:	0001f980 	call	10001f98 <printf>
		goto USB_HOT_PLUG;
100003c4:	003f6606 	br	10000160 <__alt_data_end+0xf8000160>
	}
	// STEP 2 end

	ctl_reg = USB1_CTL_REG;
100003c8:	00b02284 	movi	r2,-16246
100003cc:	d0a2ad0d 	sth	r2,-30028(gp)
	no_device = (A_DP_STAT | A_DM_STAT);
100003d0:	008c0004 	movi	r2,12288
100003d4:	d0a2ad8d 	sth	r2,-30026(gp)
	fs_device = A_DP_STAT;
100003d8:	00880004 	movi	r2,8192
100003dc:	e0bffc0d 	sth	r2,-16(fp)
	usb_ctl_val = UsbRead(ctl_reg);
100003e0:	d0a2ad0b 	ldhu	r2,-30028(gp)
100003e4:	10bfffcc 	andi	r2,r2,65535
100003e8:	1009883a 	mov	r4,r2
100003ec:	0000e9c0 	call	10000e9c <UsbRead>
100003f0:	e0bffb0d 	sth	r2,-20(fp)

	if (!(usb_ctl_val & no_device))
100003f4:	d0a2ad8b 	ldhu	r2,-30026(gp)
100003f8:	e0fffb0b 	ldhu	r3,-20(fp)
100003fc:	1884703a 	and	r2,r3,r2
10000400:	10bfffcc 	andi	r2,r2,65535
10000404:	1000341e 	bne	r2,zero,100004d8 <main+0x3a4>
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10000408:	e03ffbc5 	stb	zero,-17(fp)
1000040c:	00001006 	br	10000450 <main+0x31c>
		{
			usleep(5*1000);
10000410:	0104e204 	movi	r4,5000
10000414:	000f1580 	call	1000f158 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10000418:	d0a2ad0b 	ldhu	r2,-30028(gp)
1000041c:	10bfffcc 	andi	r2,r2,65535
10000420:	1009883a 	mov	r4,r2
10000424:	0000e9c0 	call	10000e9c <UsbRead>
10000428:	e0bffb0d 	sth	r2,-20(fp)
			if(usb_ctl_val & no_device) break;
1000042c:	d0a2ad8b 	ldhu	r2,-30026(gp)
10000430:	e0fffb0b 	ldhu	r3,-20(fp)
10000434:	1884703a 	and	r2,r3,r2
10000438:	10bfffcc 	andi	r2,r2,65535
1000043c:	10000126 	beq	r2,zero,10000444 <main+0x310>
10000440:	00000606 	br	1000045c <main+0x328>
	fs_device = A_DP_STAT;
	usb_ctl_val = UsbRead(ctl_reg);

	if (!(usb_ctl_val & no_device))
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10000444:	e0bffbc3 	ldbu	r2,-17(fp)
10000448:	10800044 	addi	r2,r2,1
1000044c:	e0bffbc5 	stb	r2,-17(fp)
10000450:	e0bffbc3 	ldbu	r2,-17(fp)
10000454:	10800170 	cmpltui	r2,r2,5
10000458:	103fed1e 	bne	r2,zero,10000410 <__alt_data_end+0xf8000410>
		{
			usleep(5*1000);
			usb_ctl_val = UsbRead(ctl_reg);
			if(usb_ctl_val & no_device) break;
		}
		if(!(usb_ctl_val & no_device))
1000045c:	d0a2ad8b 	ldhu	r2,-30026(gp)
10000460:	e0fffb0b 	ldhu	r3,-20(fp)
10000464:	1884703a 	and	r2,r3,r2
10000468:	10bfffcc 	andi	r2,r2,65535
1000046c:	1000261e 	bne	r2,zero,10000508 <main+0x3d4>
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
10000470:	01040074 	movhi	r4,4097
10000474:	213e4204 	addi	r4,r4,-1784
10000478:	000208c0 	call	1000208c <puts>
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
1000047c:	01040074 	movhi	r4,4097
10000480:	213e4c04 	addi	r4,r4,-1744
10000484:	000208c0 	call	1000208c <puts>
			while (!(usb_ctl_val & no_device))
10000488:	00000d06 	br	100004c0 <main+0x38c>
			{
				usb_ctl_val = UsbRead(ctl_reg);
1000048c:	d0a2ad0b 	ldhu	r2,-30028(gp)
10000490:	10bfffcc 	andi	r2,r2,65535
10000494:	1009883a 	mov	r4,r2
10000498:	0000e9c0 	call	10000e9c <UsbRead>
1000049c:	e0bffb0d 	sth	r2,-20(fp)
				if(usb_ctl_val & no_device)
100004a0:	d0a2ad8b 	ldhu	r2,-30026(gp)
100004a4:	e0fffb0b 	ldhu	r3,-20(fp)
100004a8:	1884703a 	and	r2,r3,r2
100004ac:	10bfffcc 	andi	r2,r2,65535
100004b0:	10000126 	beq	r2,zero,100004b8 <main+0x384>
					goto USB_HOT_PLUG;
100004b4:	003f2a06 	br	10000160 <__alt_data_end+0xf8000160>

				usleep(2000);
100004b8:	0101f404 	movi	r4,2000
100004bc:	000f1580 	call	1000f158 <usleep>
		}
		if(!(usb_ctl_val & no_device))
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
			while (!(usb_ctl_val & no_device))
100004c0:	d0a2ad8b 	ldhu	r2,-30026(gp)
100004c4:	e0fffb0b 	ldhu	r3,-20(fp)
100004c8:	1884703a 	and	r2,r3,r2
100004cc:	10bfffcc 	andi	r2,r2,65535
100004d0:	103fee26 	beq	r2,zero,1000048c <__alt_data_end+0xf800048c>
100004d4:	00000c06 	br	10000508 <main+0x3d4>
		}
	}
	else
	{
		/* check for low speed or full speed by reading D+ and D- lines */
		if (usb_ctl_val & fs_device)
100004d8:	e0fffb0b 	ldhu	r3,-20(fp)
100004dc:	e0bffc0b 	ldhu	r2,-16(fp)
100004e0:	1884703a 	and	r2,r3,r2
100004e4:	10bfffcc 	andi	r2,r2,65535
100004e8:	10000426 	beq	r2,zero,100004fc <main+0x3c8>
		{
			printf("[INFO]: full speed device\n");
100004ec:	01040074 	movhi	r4,4097
100004f0:	213e5804 	addi	r4,r4,-1696
100004f4:	000208c0 	call	1000208c <puts>
100004f8:	00000306 	br	10000508 <main+0x3d4>
		}
		else
		{
			printf("[INFO]: low speed device\n");
100004fc:	01040074 	movhi	r4,4097
10000500:	213e5f04 	addi	r4,r4,-1668
10000504:	000208c0 	call	1000208c <puts>



	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();
10000508:	0000f700 	call	10000f70 <UsbSetAddress>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
1000050c:	00000306 	br	1000051c <main+0x3e8>
	{
		UsbSetAddress();
10000510:	0000f700 	call	10000f70 <UsbSetAddress>
		usleep(10*1000);
10000514:	0109c404 	movi	r4,10000
10000518:	000f1580 	call	1000f158 <usleep>

	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
1000051c:	010000c4 	movi	r4,3
10000520:	000010c0 	call	1000010c <IO_read>
10000524:	10bfffcc 	andi	r2,r2,65535
10000528:	1080040c 	andi	r2,r2,16
1000052c:	103ff826 	beq	r2,zero,10000510 <__alt_data_end+0xf8000510>
	{
		UsbSetAddress();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10000530:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506); // i
10000534:	01000084 	movi	r4,2
10000538:	01414184 	movi	r5,1286
1000053c:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]:step 3 TD Status Byte is %x\n",IO_read(HPI_DATA));
10000540:	0009883a 	mov	r4,zero
10000544:	000010c0 	call	1000010c <IO_read>
10000548:	10bfffcc 	andi	r2,r2,65535
1000054c:	01040074 	movhi	r4,4097
10000550:	213e6604 	addi	r4,r4,-1640
10000554:	100b883a 	mov	r5,r2
10000558:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508); // n
1000055c:	01000084 	movi	r4,2
10000560:	01414204 	movi	r5,1288
10000564:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10000568:	0009883a 	mov	r4,zero
1000056c:	000010c0 	call	1000010c <IO_read>
10000570:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 3 TD Control Byte is %x\n",usb_ctl_val);
10000574:	e0bffb0b 	ldhu	r2,-20(fp)
10000578:	01040074 	movhi	r4,4097
1000057c:	213e7104 	addi	r4,r4,-1596
10000580:	100b883a 	mov	r5,r2
10000584:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03) // retries occurred
10000588:	e0bffb0b 	ldhu	r2,-20(fp)
1000058c:	108000e0 	cmpeqi	r2,r2,3
10000590:	1000031e 	bne	r2,zero,100005a0 <main+0x46c>
	{
		usb_ctl_val = UsbGetRetryCnt();
10000594:	0001e700 	call	10001e70 <UsbGetRetryCnt>
10000598:	e0bffb0d 	sth	r2,-20(fp)

		goto USB_HOT_PLUG;
1000059c:	003ef006 	br	10000160 <__alt_data_end+0xf8000160>
	}

	printf("------------[ENUM PROCESS]:set address done!---------------\n");
100005a0:	01040074 	movhi	r4,4097
100005a4:	213e7d04 	addi	r4,r4,-1548
100005a8:	000208c0 	call	1000208c <puts>

	// STEP 4 begin
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1
100005ac:	000106c0 	call	1000106c <UsbGetDeviceDesc1>

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100005b0:	00000306 	br	100005c0 <main+0x48c>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
100005b4:	000106c0 	call	1000106c <UsbGetDeviceDesc1>
		usleep(10*1000);
100005b8:	0109c404 	movi	r4,10000
100005bc:	000f1580 	call	1000f158 <usleep>
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100005c0:	010000c4 	movi	r4,3
100005c4:	000010c0 	call	1000010c <IO_read>
100005c8:	10bfffcc 	andi	r2,r2,65535
100005cc:	1080040c 	andi	r2,r2,16
100005d0:	103ff826 	beq	r2,zero,100005b4 <__alt_data_end+0xf80005b4>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
100005d4:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100005d8:	01000084 	movi	r4,2
100005dc:	01414184 	movi	r5,1286
100005e0:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
100005e4:	0009883a 	mov	r4,zero
100005e8:	000010c0 	call	1000010c <IO_read>
100005ec:	10bfffcc 	andi	r2,r2,65535
100005f0:	01040074 	movhi	r4,4097
100005f4:	213e8c04 	addi	r4,r4,-1488
100005f8:	100b883a 	mov	r5,r2
100005fc:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508);
10000600:	01000084 	movi	r4,2
10000604:	01414204 	movi	r5,1288
10000608:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
1000060c:	0009883a 	mov	r4,zero
10000610:	000010c0 	call	1000010c <IO_read>
10000614:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
10000618:	e0bffb0b 	ldhu	r2,-20(fp)
1000061c:	01040074 	movhi	r4,4097
10000620:	213e9704 	addi	r4,r4,-1444
10000624:	100b883a 	mov	r5,r2
10000628:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03)
1000062c:	00000206 	br	10000638 <main+0x504>
	{
		usb_ctl_val = UsbGetRetryCnt();
10000630:	0001e700 	call	10001e70 <UsbGetRetryCnt>
10000634:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
10000638:	e0bffb0b 	ldhu	r2,-20(fp)
1000063c:	108000d8 	cmpnei	r2,r2,3
10000640:	103ffb1e 	bne	r2,zero,10000630 <__alt_data_end+0xf8000630>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("---------------[ENUM PROCESS]:get device descriptor-1 done!-----------------\n");
10000644:	01040074 	movhi	r4,4097
10000648:	213ea304 	addi	r4,r4,-1396
1000064c:	000208c0 	call	1000208c <puts>


	//--------------------------------get device descriptor-2---------------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2
10000650:	00011b00 	call	100011b0 <UsbGetDeviceDesc2>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000654:	00000306 	br	10000664 <main+0x530>
	{
		//resend the get device descriptor
		//get device descriptor
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
10000658:	00011b00 	call	100011b0 <UsbGetDeviceDesc2>
		usleep(10*1000);
1000065c:	0109c404 	movi	r4,10000
10000660:	000f1580 	call	1000f158 <usleep>
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000664:	010000c4 	movi	r4,3
10000668:	000010c0 	call	1000010c <IO_read>
1000066c:	10bfffcc 	andi	r2,r2,65535
10000670:	1080040c 	andi	r2,r2,16
10000674:	103ff826 	beq	r2,zero,10000658 <__alt_data_end+0xf8000658>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10000678:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
1000067c:	01000084 	movi	r4,2
10000680:	01414184 	movi	r5,1286
10000684:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
10000688:	0009883a 	mov	r4,zero
1000068c:	000010c0 	call	1000010c <IO_read>
10000690:	10bfffcc 	andi	r2,r2,65535
10000694:	01040074 	movhi	r4,4097
10000698:	213e8c04 	addi	r4,r4,-1488
1000069c:	100b883a 	mov	r5,r2
100006a0:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508);
100006a4:	01000084 	movi	r4,2
100006a8:	01414204 	movi	r5,1288
100006ac:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100006b0:	0009883a 	mov	r4,zero
100006b4:	000010c0 	call	1000010c <IO_read>
100006b8:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
100006bc:	e0bffb0b 	ldhu	r2,-20(fp)
100006c0:	01040074 	movhi	r4,4097
100006c4:	213e9704 	addi	r4,r4,-1444
100006c8:	100b883a 	mov	r5,r2
100006cc:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03)
100006d0:	00000206 	br	100006dc <main+0x5a8>
	{
		usb_ctl_val = UsbGetRetryCnt();
100006d4:	0001e700 	call	10001e70 <UsbGetRetryCnt>
100006d8:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
100006dc:	e0bffb0b 	ldhu	r2,-20(fp)
100006e0:	108000d8 	cmpnei	r2,r2,3
100006e4:	103ffb1e 	bne	r2,zero,100006d4 <__alt_data_end+0xf80006d4>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("------------[ENUM PROCESS]:get device descriptor-2 done!--------------\n");
100006e8:	01040074 	movhi	r4,4097
100006ec:	213eb704 	addi	r4,r4,-1316
100006f0:	000208c0 	call	1000208c <puts>


	// STEP 5 begin
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1
100006f4:	00013840 	call	10001384 <UsbGetConfigDesc1>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100006f8:	00000306 	br	10000708 <main+0x5d4>
	{
		//resend the get device descriptor
		//get device descriptor

		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
100006fc:	00013840 	call	10001384 <UsbGetConfigDesc1>
		usleep(10*1000);
10000700:	0109c404 	movi	r4,10000
10000704:	000f1580 	call	1000f158 <usleep>
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000708:	010000c4 	movi	r4,3
1000070c:	000010c0 	call	1000010c <IO_read>
10000710:	10bfffcc 	andi	r2,r2,65535
10000714:	1080040c 	andi	r2,r2,16
10000718:	103ff826 	beq	r2,zero,100006fc <__alt_data_end+0xf80006fc>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
1000071c:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10000720:	01000084 	movi	r4,2
10000724:	01414184 	movi	r5,1286
10000728:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]:step 5 TD Status Byte is %x\n",IO_read(HPI_DATA));
1000072c:	0009883a 	mov	r4,zero
10000730:	000010c0 	call	1000010c <IO_read>
10000734:	10bfffcc 	andi	r2,r2,65535
10000738:	01040074 	movhi	r4,4097
1000073c:	213ec904 	addi	r4,r4,-1244
10000740:	100b883a 	mov	r5,r2
10000744:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508);
10000748:	01000084 	movi	r4,2
1000074c:	01414204 	movi	r5,1288
10000750:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10000754:	0009883a 	mov	r4,zero
10000758:	000010c0 	call	1000010c <IO_read>
1000075c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 5 TD Control Byte is %x\n",usb_ctl_val);
10000760:	e0bffb0b 	ldhu	r2,-20(fp)
10000764:	01040074 	movhi	r4,4097
10000768:	213ed404 	addi	r4,r4,-1200
1000076c:	100b883a 	mov	r5,r2
10000770:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03)
10000774:	00000206 	br	10000780 <main+0x64c>
	{
		usb_ctl_val = UsbGetRetryCnt();
10000778:	0001e700 	call	10001e70 <UsbGetRetryCnt>
1000077c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 5 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 5 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
10000780:	e0bffb0b 	ldhu	r2,-20(fp)
10000784:	108000d8 	cmpnei	r2,r2,3
10000788:	103ffb1e 	bne	r2,zero,10000778 <__alt_data_end+0xf8000778>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}
	printf("------------[ENUM PROCESS]:get configuration descriptor-1 pass------------\n");
1000078c:	01040074 	movhi	r4,4097
10000790:	213ee004 	addi	r4,r4,-1152
10000794:	000208c0 	call	1000208c <puts>

	// STEP 6 begin
	//-----------------------------------get configuration descriptor-2------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2
10000798:	00015100 	call	10001510 <UsbGetConfigDesc2>

	usleep(100*1000);
1000079c:	010000b4 	movhi	r4,2
100007a0:	2121a804 	addi	r4,r4,-31072
100007a4:	000f1580 	call	1000f158 <usleep>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100007a8:	00000306 	br	100007b8 <main+0x684>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
100007ac:	00015100 	call	10001510 <UsbGetConfigDesc2>
		usleep(10*1000);
100007b0:	0109c404 	movi	r4,10000
100007b4:	000f1580 	call	1000f158 <usleep>
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2

	usleep(100*1000);
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100007b8:	010000c4 	movi	r4,3
100007bc:	000010c0 	call	1000010c <IO_read>
100007c0:	10bfffcc 	andi	r2,r2,65535
100007c4:	1080040c 	andi	r2,r2,16
100007c8:	103ff826 	beq	r2,zero,100007ac <__alt_data_end+0xf80007ac>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
100007cc:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100007d0:	01000084 	movi	r4,2
100007d4:	01414184 	movi	r5,1286
100007d8:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]:step 6 TD Status Byte is %x\n",IO_read(HPI_DATA));
100007dc:	0009883a 	mov	r4,zero
100007e0:	000010c0 	call	1000010c <IO_read>
100007e4:	10bfffcc 	andi	r2,r2,65535
100007e8:	01040074 	movhi	r4,4097
100007ec:	213ef304 	addi	r4,r4,-1076
100007f0:	100b883a 	mov	r5,r2
100007f4:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508);
100007f8:	01000084 	movi	r4,2
100007fc:	01414204 	movi	r5,1288
10000800:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10000804:	0009883a 	mov	r4,zero
10000808:	000010c0 	call	1000010c <IO_read>
1000080c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 6 TD Control Byte is %x\n",usb_ctl_val);
10000810:	e0bffb0b 	ldhu	r2,-20(fp)
10000814:	01040074 	movhi	r4,4097
10000818:	213efe04 	addi	r4,r4,-1032
1000081c:	100b883a 	mov	r5,r2
10000820:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03)
10000824:	00000206 	br	10000830 <main+0x6fc>
	{
		usb_ctl_val = UsbGetRetryCnt();
10000828:	0001e700 	call	10001e70 <UsbGetRetryCnt>
1000082c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 6 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 6 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
10000830:	e0bffb0b 	ldhu	r2,-20(fp)
10000834:	108000d8 	cmpnei	r2,r2,3
10000838:	103ffb1e 	bne	r2,zero,10000828 <__alt_data_end+0xf8000828>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}


	printf("-----------[ENUM PROCESS]:get configuration descriptor-2 done!------------\n");
1000083c:	01040074 	movhi	r4,4097
10000840:	213f0a04 	addi	r4,r4,-984
10000844:	000208c0 	call	1000208c <puts>


	// ---------------------------------get device info---------------------------------------------//

	// TASK: Write the address to read from the memory for byte 7 of the interface descriptor to HPI_ADDR.
	IO_write(HPI_ADDR,0x056c);
10000848:	01000084 	movi	r4,2
1000084c:	01415b04 	movi	r5,1388
10000850:	00000e00 	call	100000e0 <IO_write>
	code = IO_read(HPI_DATA);
10000854:	0009883a 	mov	r4,zero
10000858:	000010c0 	call	1000010c <IO_read>
1000085c:	e0bffe8d 	sth	r2,-6(fp)
	code = code & 0x003;
10000860:	e0bffe8b 	ldhu	r2,-6(fp)
10000864:	108000cc 	andi	r2,r2,3
10000868:	e0bffe8d 	sth	r2,-6(fp)
	printf("\ncode = %x\n", code);
1000086c:	e0bffe8b 	ldhu	r2,-6(fp)
10000870:	01040074 	movhi	r4,4097
10000874:	213f1d04 	addi	r4,r4,-908
10000878:	100b883a 	mov	r5,r2
1000087c:	0001f980 	call	10001f98 <printf>

	if (code == 0x01)
10000880:	e0bffe8b 	ldhu	r2,-6(fp)
10000884:	10800058 	cmpnei	r2,r2,1
10000888:	1000041e 	bne	r2,zero,1000089c <main+0x768>
	{
		printf("\n[INFO]:check TD rec data7 \n[INFO]:Keyboard Detected!!!\n\n");
1000088c:	01040074 	movhi	r4,4097
10000890:	213f2004 	addi	r4,r4,-896
10000894:	000208c0 	call	1000208c <puts>
10000898:	00000306 	br	100008a8 <main+0x774>
	}
	else
	{
		printf("\n[INFO]:Keyboard Not Detected!!! \n\n");
1000089c:	01040074 	movhi	r4,4097
100008a0:	213f2f04 	addi	r4,r4,-836
100008a4:	000208c0 	call	1000208c <puts>
	}

	// TASK: Write the address to read from the memory for the endpoint descriptor to HPI_ADDR.

	IO_write(HPI_ADDR,0x0576);
100008a8:	01000084 	movi	r4,2
100008ac:	01415d84 	movi	r5,1398
100008b0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x073F);
100008b4:	0009883a 	mov	r4,zero
100008b8:	0141cfc4 	movi	r5,1855
100008bc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x8105);
100008c0:	0009883a 	mov	r4,zero
100008c4:	01604154 	movui	r5,33029
100008c8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0003);
100008cc:	0009883a 	mov	r4,zero
100008d0:	014000c4 	movi	r5,3
100008d4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);
100008d8:	0009883a 	mov	r4,zero
100008dc:	01400204 	movi	r5,8
100008e0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0xAC0A);
100008e4:	0009883a 	mov	r4,zero
100008e8:	016b0294 	movui	r5,44042
100008ec:	00000e00 	call	100000e0 <IO_write>
	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0576); //HUSB_SIE1_pCurrentTDPtr
100008f0:	01006c04 	movi	r4,432
100008f4:	01415d84 	movi	r5,1398
100008f8:	0000e700 	call	10000e70 <UsbWrite>

	//data_size = (IO_read(HPI_DATA)>>8)&0x0ff;
	//data_size = 0x08;//(IO_read(HPI_DATA))&0x0ff;
	//UsbPrintMem();
	IO_write(HPI_ADDR,0x057c);
100008fc:	01000084 	movi	r4,2
10000900:	01415f04 	movi	r5,1404
10000904:	00000e00 	call	100000e0 <IO_write>
	data_size = (IO_read(HPI_DATA))&0x0ff;
10000908:	0009883a 	mov	r4,zero
1000090c:	000010c0 	call	1000010c <IO_read>
10000910:	e0bfff05 	stb	r2,-4(fp)
	printf("[ENUM PROCESS]:data packet size is %d\n",data_size);
10000914:	e0bfff03 	ldbu	r2,-4(fp)
10000918:	01040074 	movhi	r4,4097
1000091c:	213f3804 	addi	r4,r4,-800
10000920:	100b883a 	mov	r5,r2
10000924:	0001f980 	call	10001f98 <printf>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration
10000928:	00017740 	call	10001774 <UsbSetConfig>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
1000092c:	00000306 	br	1000093c <main+0x808>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
10000930:	00017740 	call	10001774 <UsbSetConfig>
		usleep(10*1000);
10000934:	0109c404 	movi	r4,10000
10000938:	000f1580 	call	1000f158 <usleep>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
1000093c:	010000c4 	movi	r4,3
10000940:	000010c0 	call	1000010c <IO_read>
10000944:	10bfffcc 	andi	r2,r2,65535
10000948:	1080040c 	andi	r2,r2,16
1000094c:	103ff826 	beq	r2,zero,10000930 <__alt_data_end+0xf8000930>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10000950:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10000954:	01000084 	movi	r4,2
10000958:	01414184 	movi	r5,1286
1000095c:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]:step 7 TD Status Byte is %x\n",IO_read(HPI_DATA));
10000960:	0009883a 	mov	r4,zero
10000964:	000010c0 	call	1000010c <IO_read>
10000968:	10bfffcc 	andi	r2,r2,65535
1000096c:	01040074 	movhi	r4,4097
10000970:	213f4204 	addi	r4,r4,-760
10000974:	100b883a 	mov	r5,r2
10000978:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508);
1000097c:	01000084 	movi	r4,2
10000980:	01414204 	movi	r5,1288
10000984:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10000988:	0009883a 	mov	r4,zero
1000098c:	000010c0 	call	1000010c <IO_read>
10000990:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 7 TD Control Byte is %x\n",usb_ctl_val);
10000994:	e0bffb0b 	ldhu	r2,-20(fp)
10000998:	01040074 	movhi	r4,4097
1000099c:	213f4d04 	addi	r4,r4,-716
100009a0:	100b883a 	mov	r5,r2
100009a4:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03)
100009a8:	00000206 	br	100009b4 <main+0x880>
	{
		usb_ctl_val = UsbGetRetryCnt();
100009ac:	0001e700 	call	10001e70 <UsbGetRetryCnt>
100009b0:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 7 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 7 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
100009b4:	e0bffb0b 	ldhu	r2,-20(fp)
100009b8:	108000d8 	cmpnei	r2,r2,3
100009bc:	103ffb1e 	bne	r2,zero,100009ac <__alt_data_end+0xf80009ac>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("------------[ENUM PROCESS]:set configuration done!-------------------\n");
100009c0:	01040074 	movhi	r4,4097
100009c4:	213f5904 	addi	r4,r4,-668
100009c8:	000208c0 	call	1000208c <puts>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();
100009cc:	00018700 	call	10001870 <UsbClassRequest>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100009d0:	00000306 	br	100009e0 <main+0x8ac>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
100009d4:	00018700 	call	10001870 <UsbClassRequest>
		usleep(10*1000);
100009d8:	0109c404 	movi	r4,10000
100009dc:	000f1580 	call	1000f158 <usleep>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100009e0:	010000c4 	movi	r4,3
100009e4:	000010c0 	call	1000010c <IO_read>
100009e8:	10bfffcc 	andi	r2,r2,65535
100009ec:	1080040c 	andi	r2,r2,16
100009f0:	103ff826 	beq	r2,zero,100009d4 <__alt_data_end+0xf80009d4>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
100009f4:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100009f8:	01000084 	movi	r4,2
100009fc:	01414184 	movi	r5,1286
10000a00:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
10000a04:	0009883a 	mov	r4,zero
10000a08:	000010c0 	call	1000010c <IO_read>
10000a0c:	10bfffcc 	andi	r2,r2,65535
10000a10:	01040074 	movhi	r4,4097
10000a14:	213f6b04 	addi	r4,r4,-596
10000a18:	100b883a 	mov	r5,r2
10000a1c:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508);
10000a20:	01000084 	movi	r4,2
10000a24:	01414204 	movi	r5,1288
10000a28:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10000a2c:	0009883a 	mov	r4,zero
10000a30:	000010c0 	call	1000010c <IO_read>
10000a34:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10000a38:	e0bffb0b 	ldhu	r2,-20(fp)
10000a3c:	01040074 	movhi	r4,4097
10000a40:	213f7604 	addi	r4,r4,-552
10000a44:	100b883a 	mov	r5,r2
10000a48:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03)
10000a4c:	00000206 	br	10000a58 <main+0x924>
	{
		usb_ctl_val = UsbGetRetryCnt();
10000a50:	0001e700 	call	10001e70 <UsbGetRetryCnt>
10000a54:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
10000a58:	e0bffb0b 	ldhu	r2,-20(fp)
10000a5c:	108000d8 	cmpnei	r2,r2,3
10000a60:	103ffb1e 	bne	r2,zero,10000a50 <__alt_data_end+0xf8000a50>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}


	printf("------------[ENUM PROCESS]:class request out done!-------------------\n");
10000a64:	01040074 	movhi	r4,4097
10000a68:	213f8204 	addi	r4,r4,-504
10000a6c:	000208c0 	call	1000208c <puts>

	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();
10000a70:	000196c0 	call	1000196c <UsbGetHidDesc>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000a74:	00000306 	br	10000a84 <main+0x950>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
10000a78:	000196c0 	call	1000196c <UsbGetHidDesc>
		usleep(10*1000);
10000a7c:	0109c404 	movi	r4,10000
10000a80:	000f1580 	call	1000f158 <usleep>
	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000a84:	010000c4 	movi	r4,3
10000a88:	000010c0 	call	1000010c <IO_read>
10000a8c:	10bfffcc 	andi	r2,r2,65535
10000a90:	1080040c 	andi	r2,r2,16
10000a94:	103ff826 	beq	r2,zero,10000a78 <__alt_data_end+0xf8000a78>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10000a98:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10000a9c:	01000084 	movi	r4,2
10000aa0:	01414184 	movi	r5,1286
10000aa4:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
10000aa8:	0009883a 	mov	r4,zero
10000aac:	000010c0 	call	1000010c <IO_read>
10000ab0:	10bfffcc 	andi	r2,r2,65535
10000ab4:	01040074 	movhi	r4,4097
10000ab8:	213f6b04 	addi	r4,r4,-596
10000abc:	100b883a 	mov	r5,r2
10000ac0:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508);
10000ac4:	01000084 	movi	r4,2
10000ac8:	01414204 	movi	r5,1288
10000acc:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10000ad0:	0009883a 	mov	r4,zero
10000ad4:	000010c0 	call	1000010c <IO_read>
10000ad8:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10000adc:	e0bffb0b 	ldhu	r2,-20(fp)
10000ae0:	01040074 	movhi	r4,4097
10000ae4:	213f7604 	addi	r4,r4,-552
10000ae8:	100b883a 	mov	r5,r2
10000aec:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03)
10000af0:	00000206 	br	10000afc <main+0x9c8>
	{
		usb_ctl_val = UsbGetRetryCnt();
10000af4:	0001e700 	call	10001e70 <UsbGetRetryCnt>
10000af8:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
10000afc:	e0bffb0b 	ldhu	r2,-20(fp)
10000b00:	108000d8 	cmpnei	r2,r2,3
10000b04:	103ffb1e 	bne	r2,zero,10000af4 <__alt_data_end+0xf8000af4>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("------------[ENUM PROCESS]:get descriptor (class 0x21) done!-------------------\n");
10000b08:	01040074 	movhi	r4,4097
10000b0c:	213f9404 	addi	r4,r4,-432
10000b10:	000208c0 	call	1000208c <puts>

	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
10000b14:	0001ab00 	call	10001ab0 <UsbGetReportDesc>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000b18:	00000306 	br	10000b28 <main+0x9f4>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
10000b1c:	0001ab00 	call	10001ab0 <UsbGetReportDesc>
		usleep(10*1000);
10000b20:	0109c404 	movi	r4,10000
10000b24:	000f1580 	call	1000f158 <usleep>
	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000b28:	010000c4 	movi	r4,3
10000b2c:	000010c0 	call	1000010c <IO_read>
10000b30:	10bfffcc 	andi	r2,r2,65535
10000b34:	1080040c 	andi	r2,r2,16
10000b38:	103ff826 	beq	r2,zero,10000b1c <__alt_data_end+0xf8000b1c>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10000b3c:	0001dec0 	call	10001dec <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10000b40:	01000084 	movi	r4,2
10000b44:	01414184 	movi	r5,1286
10000b48:	00000e00 	call	100000e0 <IO_write>
	printf("[ENUM PROCESS]: step 9 TD Status Byte is %x\n",IO_read(HPI_DATA));
10000b4c:	0009883a 	mov	r4,zero
10000b50:	000010c0 	call	1000010c <IO_read>
10000b54:	10bfffcc 	andi	r2,r2,65535
10000b58:	01040074 	movhi	r4,4097
10000b5c:	213fa804 	addi	r4,r4,-352
10000b60:	100b883a 	mov	r5,r2
10000b64:	0001f980 	call	10001f98 <printf>

	IO_write(HPI_ADDR,0x0508);
10000b68:	01000084 	movi	r4,2
10000b6c:	01414204 	movi	r5,1288
10000b70:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10000b74:	0009883a 	mov	r4,zero
10000b78:	000010c0 	call	1000010c <IO_read>
10000b7c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]: step 9 TD Control Byte is %x\n",usb_ctl_val);
10000b80:	e0bffb0b 	ldhu	r2,-20(fp)
10000b84:	01040074 	movhi	r4,4097
10000b88:	213fb404 	addi	r4,r4,-304
10000b8c:	100b883a 	mov	r5,r2
10000b90:	0001f980 	call	10001f98 <printf>
	while (usb_ctl_val != 0x03)
10000b94:	00000206 	br	10000ba0 <main+0xa6c>
	{
		usb_ctl_val = UsbGetRetryCnt();
10000b98:	0001e700 	call	10001e70 <UsbGetRetryCnt>
10000b9c:	e0bffb0d 	sth	r2,-20(fp)
	printf("[ENUM PROCESS]: step 9 TD Status Byte is %x\n",IO_read(HPI_DATA));

	IO_write(HPI_ADDR,0x0508);
	usb_ctl_val = IO_read(HPI_DATA);
	printf("[ENUM PROCESS]: step 9 TD Control Byte is %x\n",usb_ctl_val);
	while (usb_ctl_val != 0x03)
10000ba0:	e0bffb0b 	ldhu	r2,-20(fp)
10000ba4:	108000d8 	cmpnei	r2,r2,3
10000ba8:	103ffb1e 	bne	r2,zero,10000b98 <__alt_data_end+0xf8000b98>
	{
		usb_ctl_val = UsbGetRetryCnt();
	}

	printf("---------------[ENUM PROCESS]:get descriptor (class 0x22) done!----------------\n");
10000bac:	01040074 	movhi	r4,4097
10000bb0:	213fc004 	addi	r4,r4,-256
10000bb4:	000208c0 	call	1000208c <puts>



	//-----------------------------------get keycode value------------------------------------------------//
	usleep(10000);
10000bb8:	0109c404 	movi	r4,10000
10000bbc:	000f1580 	call	1000f158 <usleep>
	while(1)
	{
		toggle++;
10000bc0:	e0bffb83 	ldbu	r2,-18(fp)
10000bc4:	10800044 	addi	r2,r2,1
10000bc8:	e0bffb85 	stb	r2,-18(fp)
		IO_write(HPI_ADDR,0x0500); //the start address
10000bcc:	01000084 	movi	r4,2
10000bd0:	01414004 	movi	r5,1280
10000bd4:	00000e00 	call	100000e0 <IO_write>
		//data phase IN-1
		IO_write(HPI_DATA,0x051c); //500
10000bd8:	0009883a 	mov	r4,zero
10000bdc:	01414704 	movi	r5,1308
10000be0:	00000e00 	call	100000e0 <IO_write>

		IO_write(HPI_DATA,0x000f & data_size);//2 data length
10000be4:	e0bfff03 	ldbu	r2,-4(fp)
10000be8:	108003cc 	andi	r2,r2,15
10000bec:	0009883a 	mov	r4,zero
10000bf0:	100b883a 	mov	r5,r2
10000bf4:	00000e00 	call	100000e0 <IO_write>

		IO_write(HPI_DATA,0x0291);//4 //endpoint 1
10000bf8:	0009883a 	mov	r4,zero
10000bfc:	0140a444 	movi	r5,657
10000c00:	00000e00 	call	100000e0 <IO_write>
		if(toggle%2)
10000c04:	e0bffb83 	ldbu	r2,-18(fp)
10000c08:	1080004c 	andi	r2,r2,1
10000c0c:	10803fcc 	andi	r2,r2,255
10000c10:	10000426 	beq	r2,zero,10000c24 <main+0xaf0>
		{
			IO_write(HPI_DATA,0x0001);//6 //data 1
10000c14:	0009883a 	mov	r4,zero
10000c18:	01400044 	movi	r5,1
10000c1c:	00000e00 	call	100000e0 <IO_write>
10000c20:	00000306 	br	10000c30 <main+0xafc>
		}
		else
		{
			IO_write(HPI_DATA,0x0041);//6 //data 1
10000c24:	0009883a 	mov	r4,zero
10000c28:	01401044 	movi	r5,65
10000c2c:	00000e00 	call	100000e0 <IO_write>
		}
		IO_write(HPI_DATA,0x0013);//8
10000c30:	0009883a 	mov	r4,zero
10000c34:	014004c4 	movi	r5,19
10000c38:	00000e00 	call	100000e0 <IO_write>
		IO_write(HPI_DATA,0x0000);//a
10000c3c:	0009883a 	mov	r4,zero
10000c40:	000b883a 	mov	r5,zero
10000c44:	00000e00 	call	100000e0 <IO_write>
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10000c48:	01006c04 	movi	r4,432
10000c4c:	01414004 	movi	r5,1280
10000c50:	0000e700 	call	10000e70 <UsbWrite>
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000c54:	00002406 	br	10000ce8 <main+0xbb4>
		{
			IO_write(HPI_ADDR,0x0500); //the start address
10000c58:	01000084 	movi	r4,2
10000c5c:	01414004 	movi	r5,1280
10000c60:	00000e00 	call	100000e0 <IO_write>
			//data phase IN-1
			IO_write(HPI_DATA,0x051c); //500
10000c64:	0009883a 	mov	r4,zero
10000c68:	01414704 	movi	r5,1308
10000c6c:	00000e00 	call	100000e0 <IO_write>

			IO_write(HPI_DATA,0x000f & data_size);//2 data length
10000c70:	e0bfff03 	ldbu	r2,-4(fp)
10000c74:	108003cc 	andi	r2,r2,15
10000c78:	0009883a 	mov	r4,zero
10000c7c:	100b883a 	mov	r5,r2
10000c80:	00000e00 	call	100000e0 <IO_write>

			IO_write(HPI_DATA,0x0291);//4 //endpoint 1
10000c84:	0009883a 	mov	r4,zero
10000c88:	0140a444 	movi	r5,657
10000c8c:	00000e00 	call	100000e0 <IO_write>
			if(toggle%2)
10000c90:	e0bffb83 	ldbu	r2,-18(fp)
10000c94:	1080004c 	andi	r2,r2,1
10000c98:	10803fcc 	andi	r2,r2,255
10000c9c:	10000426 	beq	r2,zero,10000cb0 <main+0xb7c>
			{
				IO_write(HPI_DATA,0x0001);//6 //data 1
10000ca0:	0009883a 	mov	r4,zero
10000ca4:	01400044 	movi	r5,1
10000ca8:	00000e00 	call	100000e0 <IO_write>
10000cac:	00000306 	br	10000cbc <main+0xb88>
			}
			else
			{
				IO_write(HPI_DATA,0x0041);//6 //data 1
10000cb0:	0009883a 	mov	r4,zero
10000cb4:	01401044 	movi	r5,65
10000cb8:	00000e00 	call	100000e0 <IO_write>
			}
			IO_write(HPI_DATA,0x0013);//8
10000cbc:	0009883a 	mov	r4,zero
10000cc0:	014004c4 	movi	r5,19
10000cc4:	00000e00 	call	100000e0 <IO_write>
			IO_write(HPI_DATA,0x0000);//
10000cc8:	0009883a 	mov	r4,zero
10000ccc:	000b883a 	mov	r5,zero
10000cd0:	00000e00 	call	100000e0 <IO_write>
			UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10000cd4:	01006c04 	movi	r4,432
10000cd8:	01414004 	movi	r5,1280
10000cdc:	0000e700 	call	10000e70 <UsbWrite>
			usleep(10*1000);
10000ce0:	0109c404 	movi	r4,10000
10000ce4:	000f1580 	call	1000f158 <usleep>
		}
		IO_write(HPI_DATA,0x0013);//8
		IO_write(HPI_DATA,0x0000);//a
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10000ce8:	010000c4 	movi	r4,3
10000cec:	000010c0 	call	1000010c <IO_read>
10000cf0:	10bfffcc 	andi	r2,r2,65535
10000cf4:	1080040c 	andi	r2,r2,16
10000cf8:	103fd726 	beq	r2,zero,10000c58 <__alt_data_end+0xf8000c58>
			IO_write(HPI_DATA,0x0000);//
			UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
			usleep(10*1000);
		}//end while

		usb_ctl_val = UsbWaitTDListDone();
10000cfc:	0001dec0 	call	10001dec <UsbWaitTDListDone>
10000d00:	e0bffb0d 	sth	r2,-20(fp)

		// The first two keycodes are stored in 0x051E. Other keycodes are in 
		// subsequent addresses.
		keycode = UsbRead(0x051e);
10000d04:	01014784 	movi	r4,1310
10000d08:	0000e9c0 	call	10000e9c <UsbRead>
10000d0c:	10bfffcc 	andi	r2,r2,65535
10000d10:	e0bffd15 	stw	r2,-12(fp)
		printf("\nfirst two keycode values are %04x\n",keycode);
10000d14:	01040074 	movhi	r4,4097
10000d18:	213fd404 	addi	r4,r4,-176
10000d1c:	e17ffd17 	ldw	r5,-12(fp)
10000d20:	0001f980 	call	10001f98 <printf>
		// We only need the first keycode, which is at the lower byte of keycode.
		// Send the keycode to hardware via PIO.
		*keycode_base = keycode & 0xff; 
10000d24:	00801804 	movi	r2,96
10000d28:	e0fffd17 	ldw	r3,-12(fp)
10000d2c:	10c00005 	stb	r3,0(r2)

		usleep(200);//usleep(5000);
10000d30:	01003204 	movi	r4,200
10000d34:	000f1580 	call	1000f158 <usleep>
		usb_ctl_val = UsbRead(ctl_reg);
10000d38:	d0a2ad0b 	ldhu	r2,-30028(gp)
10000d3c:	10bfffcc 	andi	r2,r2,65535
10000d40:	1009883a 	mov	r4,r2
10000d44:	0000e9c0 	call	10000e9c <UsbRead>
10000d48:	e0bffb0d 	sth	r2,-20(fp)

		if(!(usb_ctl_val & no_device))
10000d4c:	d0a2ad8b 	ldhu	r2,-30026(gp)
10000d50:	e0fffb0b 	ldhu	r3,-20(fp)
10000d54:	1884703a 	and	r2,r3,r2
10000d58:	10bfffcc 	andi	r2,r2,65535
10000d5c:	1000201e 	bne	r2,zero,10000de0 <main+0xcac>
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
10000d60:	e03ffbc5 	stb	zero,-17(fp)
10000d64:	00001006 	br	10000da8 <main+0xc74>
			{
				usleep(5*1000);
10000d68:	0104e204 	movi	r4,5000
10000d6c:	000f1580 	call	1000f158 <usleep>
				usb_ctl_val = UsbRead(ctl_reg);
10000d70:	d0a2ad0b 	ldhu	r2,-30028(gp)
10000d74:	10bfffcc 	andi	r2,r2,65535
10000d78:	1009883a 	mov	r4,r2
10000d7c:	0000e9c0 	call	10000e9c <UsbRead>
10000d80:	e0bffb0d 	sth	r2,-20(fp)
				if(usb_ctl_val & no_device) break;
10000d84:	d0a2ad8b 	ldhu	r2,-30026(gp)
10000d88:	e0fffb0b 	ldhu	r3,-20(fp)
10000d8c:	1884703a 	and	r2,r3,r2
10000d90:	10bfffcc 	andi	r2,r2,65535
10000d94:	10000126 	beq	r2,zero,10000d9c <main+0xc68>
10000d98:	00000606 	br	10000db4 <main+0xc80>
		usb_ctl_val = UsbRead(ctl_reg);

		if(!(usb_ctl_val & no_device))
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
10000d9c:	e0bffbc3 	ldbu	r2,-17(fp)
10000da0:	10800044 	addi	r2,r2,1
10000da4:	e0bffbc5 	stb	r2,-17(fp)
10000da8:	e0bffbc3 	ldbu	r2,-17(fp)
10000dac:	108001f0 	cmpltui	r2,r2,7
10000db0:	103fed1e 	bne	r2,zero,10000d68 <__alt_data_end+0xf8000d68>
			{
				usleep(5*1000);
				usb_ctl_val = UsbRead(ctl_reg);
				if(usb_ctl_val & no_device) break;
			}
			if(!(usb_ctl_val & no_device))
10000db4:	d0a2ad8b 	ldhu	r2,-30026(gp)
10000db8:	e0fffb0b 	ldhu	r3,-20(fp)
10000dbc:	1884703a 	and	r2,r3,r2
10000dc0:	10bfffcc 	andi	r2,r2,65535
10000dc4:	1000061e 	bne	r2,zero,10000de0 <main+0xcac>
			{
				printf("\n[INFO]: the keyboard has been removed!!! \n");
10000dc8:	01040074 	movhi	r4,4097
10000dcc:	213fdd04 	addi	r4,r4,-140
10000dd0:	000208c0 	call	1000208c <puts>
				printf("[INFO]: please insert again!!! \n");
10000dd4:	01040074 	movhi	r4,4097
10000dd8:	213fe804 	addi	r4,r4,-96
10000ddc:	000208c0 	call	1000208c <puts>
			}
		}

		while (!(usb_ctl_val & no_device))
10000de0:	00001d06 	br	10000e58 <main+0xd24>
		{

			usb_ctl_val = UsbRead(ctl_reg);
10000de4:	d0a2ad0b 	ldhu	r2,-30028(gp)
10000de8:	10bfffcc 	andi	r2,r2,65535
10000dec:	1009883a 	mov	r4,r2
10000df0:	0000e9c0 	call	10000e9c <UsbRead>
10000df4:	e0bffb0d 	sth	r2,-20(fp)
			usleep(5*1000);
10000df8:	0104e204 	movi	r4,5000
10000dfc:	000f1580 	call	1000f158 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10000e00:	d0a2ad0b 	ldhu	r2,-30028(gp)
10000e04:	10bfffcc 	andi	r2,r2,65535
10000e08:	1009883a 	mov	r4,r2
10000e0c:	0000e9c0 	call	10000e9c <UsbRead>
10000e10:	e0bffb0d 	sth	r2,-20(fp)
			usleep(5*1000);
10000e14:	0104e204 	movi	r4,5000
10000e18:	000f1580 	call	1000f158 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10000e1c:	d0a2ad0b 	ldhu	r2,-30028(gp)
10000e20:	10bfffcc 	andi	r2,r2,65535
10000e24:	1009883a 	mov	r4,r2
10000e28:	0000e9c0 	call	10000e9c <UsbRead>
10000e2c:	e0bffb0d 	sth	r2,-20(fp)
			usleep(5*1000);
10000e30:	0104e204 	movi	r4,5000
10000e34:	000f1580 	call	1000f158 <usleep>

			if(usb_ctl_val & no_device)
10000e38:	d0a2ad8b 	ldhu	r2,-30026(gp)
10000e3c:	e0fffb0b 	ldhu	r3,-20(fp)
10000e40:	1884703a 	and	r2,r3,r2
10000e44:	10bfffcc 	andi	r2,r2,65535
10000e48:	10000126 	beq	r2,zero,10000e50 <main+0xd1c>
				goto USB_HOT_PLUG;
10000e4c:	003cc406 	br	10000160 <__alt_data_end+0xf8000160>

			usleep(200);
10000e50:	01003204 	movi	r4,200
10000e54:	000f1580 	call	1000f158 <usleep>
				printf("\n[INFO]: the keyboard has been removed!!! \n");
				printf("[INFO]: please insert again!!! \n");
			}
		}

		while (!(usb_ctl_val & no_device))
10000e58:	d0a2ad8b 	ldhu	r2,-30026(gp)
10000e5c:	e0fffb0b 	ldhu	r3,-20(fp)
10000e60:	1884703a 	and	r2,r3,r2
10000e64:	10bfffcc 	andi	r2,r2,65535
10000e68:	103fde26 	beq	r2,zero,10000de4 <__alt_data_end+0xf8000de4>
				goto USB_HOT_PLUG;

			usleep(200);
		}

	}//end while
10000e6c:	003f5406 	br	10000bc0 <__alt_data_end+0xf8000bc0>

10000e70 <UsbWrite>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbWrite(alt_u16 Address, alt_u16 Data)
{
10000e70:	defffd04 	addi	sp,sp,-12
10000e74:	df000215 	stw	fp,8(sp)
10000e78:	df000204 	addi	fp,sp,8
10000e7c:	2007883a 	mov	r3,r4
10000e80:	2805883a 	mov	r2,r5
10000e84:	e0fffe0d 	sth	r3,-8(fp)
10000e88:	e0bfff0d 	sth	r2,-4(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
}
10000e8c:	e037883a 	mov	sp,fp
10000e90:	df000017 	ldw	fp,0(sp)
10000e94:	dec00104 	addi	sp,sp,4
10000e98:	f800283a 	ret

10000e9c <UsbRead>:
 *
 * @note     None
 *
 ******************************************************************************/
alt_u16 UsbRead(alt_u16 Address)
{
10000e9c:	defffe04 	addi	sp,sp,-8
10000ea0:	df000115 	stw	fp,4(sp)
10000ea4:	df000104 	addi	fp,sp,4
10000ea8:	2005883a 	mov	r2,r4
10000eac:	e0bfff0d 	sth	r2,-4(fp)
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
}
10000eb0:	e037883a 	mov	sp,fp
10000eb4:	df000017 	ldw	fp,0(sp)
10000eb8:	dec00104 	addi	sp,sp,4
10000ebc:	f800283a 	ret

10000ec0 <UsbSoftReset>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbSoftReset()
{
10000ec0:	defffe04 	addi	sp,sp,-8
10000ec4:	dfc00115 	stw	ra,4(sp)
10000ec8:	df000015 	stw	fp,0(sp)
10000ecc:	d839883a 	mov	fp,sp
	//XIo_Out16(USB_MAILBOX, COMM_RESET);
	IO_write(HPI_MAILBOX,COMM_RESET); //COMM_JUMP2CODE
10000ed0:	01000044 	movi	r4,1
10000ed4:	017e9414 	movui	r5,64080
10000ed8:	00000e00 	call	100000e0 <IO_write>
	usleep(100000);
10000edc:	010000b4 	movhi	r4,2
10000ee0:	2121a804 	addi	r4,r4,-31072
10000ee4:	000f1580 	call	1000f158 <usleep>
	printf("[USB INIT]:reset finished!\n");
10000ee8:	01040074 	movhi	r4,4097
10000eec:	213ff004 	addi	r4,r4,-64
10000ef0:	000208c0 	call	1000208c <puts>

	usleep(500000);
10000ef4:	01000234 	movhi	r4,8
10000ef8:	21284804 	addi	r4,r4,-24288
10000efc:	000f1580 	call	1000f158 <usleep>
	printf("[USB INIT]:Clear up the interrupt\r\n");
10000f00:	01040074 	movhi	r4,4097
10000f04:	213ff704 	addi	r4,r4,-36
10000f08:	000208c0 	call	1000208c <puts>
	IO_read(HPI_MAILBOX);
10000f0c:	01000044 	movi	r4,1
10000f10:	000010c0 	call	1000010c <IO_read>
	IO_read(HPI_STATUS);
10000f14:	010000c4 	movi	r4,3
10000f18:	000010c0 	call	1000010c <IO_read>

	// Had to add the write due to a bug in BIOS where they overwrite
	// the mailbox after initialization with garbage.  The read clears
	// any pending interrupts.
	UsbRead (HPI_SIE1_MSG_ADR);
10000f1c:	01005104 	movi	r4,324
10000f20:	0000e9c0 	call	10000e9c <UsbRead>
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10000f24:	01005104 	movi	r4,324
10000f28:	000b883a 	mov	r5,zero
10000f2c:	0000e700 	call	10000e70 <UsbWrite>
	UsbRead (HPI_SIE2_MSG_ADR);
10000f30:	01005204 	movi	r4,328
10000f34:	0000e9c0 	call	10000e9c <UsbRead>
	UsbWrite (HPI_SIE2_MSG_ADR, 0);
10000f38:	01005204 	movi	r4,328
10000f3c:	000b883a 	mov	r5,zero
10000f40:	0000e700 	call	10000e70 <UsbWrite>


	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10000f44:	01302414 	movui	r4,49296
10000f48:	017fffd4 	movui	r5,65535
10000f4c:	0000e700 	call	10000e70 <UsbWrite>
	UsbWrite (HOST2_STAT_REG, 0xFFFF);
10000f50:	01302c14 	movui	r4,49328
10000f54:	017fffd4 	movui	r5,65535
10000f58:	0000e700 	call	10000e70 <UsbWrite>
}
10000f5c:	e037883a 	mov	sp,fp
10000f60:	dfc00117 	ldw	ra,4(sp)
10000f64:	df000017 	ldw	fp,0(sp)
10000f68:	dec00204 	addi	sp,sp,8
10000f6c:	f800283a 	ret

10000f70 <UsbSetAddress>:


void UsbSetAddress()
{
10000f70:	defffe04 	addi	sp,sp,-8
10000f74:	dfc00115 	stw	ra,4(sp)
10000f78:	df000015 	stw	fp,0(sp)
10000f7c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10000f80:	01000084 	movi	r4,2
10000f84:	01414004 	movi	r5,1280
10000f88:	00000e00 	call	100000e0 <IO_write>
	// TD #1: 6 writes
	IO_write(HPI_DATA,0x050C);
10000f8c:	0009883a 	mov	r4,zero
10000f90:	01414304 	movi	r5,1292
10000f94:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10000f98:	0009883a 	mov	r4,zero
10000f9c:	01400204 	movi	r5,8
10000fa0:	00000e00 	call	100000e0 <IO_write>
	// TASK: Complete with 4 more IOWR functions
	IO_write(HPI_DATA,0x00D0);
10000fa4:	0009883a 	mov	r4,zero
10000fa8:	01403404 	movi	r5,208
10000fac:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
10000fb0:	0009883a 	mov	r4,zero
10000fb4:	01400044 	movi	r5,1
10000fb8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
10000fbc:	0009883a 	mov	r4,zero
10000fc0:	014004c4 	movi	r5,19
10000fc4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
10000fc8:	0009883a 	mov	r4,zero
10000fcc:	01414504 	movi	r5,1300
10000fd0:	00000e00 	call	100000e0 <IO_write>
	// TD #2: 4 writes
	// TASK: Complete with 4 IOWR functions
	IO_write(HPI_DATA,0x0500);
10000fd4:	0009883a 	mov	r4,zero
10000fd8:	01414004 	movi	r5,1280
10000fdc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0002);
10000fe0:	0009883a 	mov	r4,zero
10000fe4:	01400084 	movi	r5,2
10000fe8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
10000fec:	0009883a 	mov	r4,zero
10000ff0:	000b883a 	mov	r5,zero
10000ff4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
10000ff8:	0009883a 	mov	r4,zero
10000ffc:	000b883a 	mov	r5,zero
10001000:	00000e00 	call	100000e0 <IO_write>
	// TD #3: 6 writes
	// TASK: Complete with 6 IOWR functions
	IO_write(HPI_DATA,0x0000); //
10001004:	0009883a 	mov	r4,zero
10001008:	000b883a 	mov	r5,zero
1000100c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//
10001010:	0009883a 	mov	r4,zero
10001014:	000b883a 	mov	r5,zero
10001018:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0090);//
1000101c:	0009883a 	mov	r4,zero
10001020:	01402404 	movi	r5,144
10001024:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);
10001028:	0009883a 	mov	r4,zero
1000102c:	01401044 	movi	r5,65
10001030:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
10001034:	0009883a 	mov	r4,zero
10001038:	014004c4 	movi	r5,19
1000103c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
10001040:	0009883a 	mov	r4,zero
10001044:	000b883a 	mov	r5,zero
10001048:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000104c:	01006c04 	movi	r4,432
10001050:	01414004 	movi	r5,1280
10001054:	0000e700 	call	10000e70 <UsbWrite>
}
10001058:	e037883a 	mov	sp,fp
1000105c:	dfc00117 	ldw	ra,4(sp)
10001060:	df000017 	ldw	fp,0(sp)
10001064:	dec00204 	addi	sp,sp,8
10001068:	f800283a 	ret

1000106c <UsbGetDeviceDesc1>:


void UsbGetDeviceDesc1()
{
1000106c:	defffe04 	addi	sp,sp,-8
10001070:	dfc00115 	stw	ra,4(sp)
10001074:	df000015 	stw	fp,0(sp)
10001078:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
1000107c:	01000084 	movi	r4,2
10001080:	01414004 	movi	r5,1280
10001084:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x050C);
10001088:	0009883a 	mov	r4,zero
1000108c:	01414304 	movi	r5,1292
10001090:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10001094:	0009883a 	mov	r4,zero
10001098:	01400204 	movi	r5,8
1000109c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100010a0:	0009883a 	mov	r4,zero
100010a4:	0140b404 	movi	r5,720
100010a8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
100010ac:	0009883a 	mov	r4,zero
100010b0:	01400044 	movi	r5,1
100010b4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
100010b8:	0009883a 	mov	r4,zero
100010bc:	014004c4 	movi	r5,19
100010c0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
100010c4:	0009883a 	mov	r4,zero
100010c8:	01414504 	movi	r5,1300
100010cc:	00000e00 	call	100000e0 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
100010d0:	0009883a 	mov	r4,zero
100010d4:	0141a004 	movi	r5,1664
100010d8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0100); //device 0x01
100010dc:	0009883a 	mov	r4,zero
100010e0:	01404004 	movi	r5,256
100010e4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
100010e8:	0009883a 	mov	r4,zero
100010ec:	000b883a 	mov	r5,zero
100010f0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);
100010f4:	0009883a 	mov	r4,zero
100010f8:	01400204 	movi	r5,8
100010fc:	00000e00 	call	100000e0 <IO_write>

	//data phase IN
	IO_write(HPI_DATA,0x052C); //
10001100:	0009883a 	mov	r4,zero
10001104:	01414b04 	movi	r5,1324
10001108:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//
1000110c:	0009883a 	mov	r4,zero
10001110:	01400204 	movi	r5,8
10001114:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//
10001118:	0009883a 	mov	r4,zero
1000111c:	0140a404 	movi	r5,656
10001120:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);
10001124:	0009883a 	mov	r4,zero
10001128:	01401044 	movi	r5,65
1000112c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
10001130:	0009883a 	mov	r4,zero
10001134:	014004c4 	movi	r5,19
10001138:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0520);
1000113c:	0009883a 	mov	r4,zero
10001140:	01414804 	movi	r5,1312
10001144:	00000e00 	call	100000e0 <IO_write>

	//    //status phase
	IO_write(HPI_DATA,0x0000); //don't care
10001148:	0009883a 	mov	r4,zero
1000114c:	000b883a 	mov	r5,zero
10001150:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
10001154:	0009883a 	mov	r4,zero
10001158:	000b883a 	mov	r5,zero
1000115c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0210);//device address
10001160:	0009883a 	mov	r4,zero
10001164:	01408404 	movi	r5,528
10001168:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);
1000116c:	0009883a 	mov	r4,zero
10001170:	01401044 	movi	r5,65
10001174:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
10001178:	0009883a 	mov	r4,zero
1000117c:	014004c4 	movi	r5,19
10001180:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
10001184:	0009883a 	mov	r4,zero
10001188:	000b883a 	mov	r5,zero
1000118c:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10001190:	01006c04 	movi	r4,432
10001194:	01414004 	movi	r5,1280
10001198:	0000e700 	call	10000e70 <UsbWrite>
}
1000119c:	e037883a 	mov	sp,fp
100011a0:	dfc00117 	ldw	ra,4(sp)
100011a4:	df000017 	ldw	fp,0(sp)
100011a8:	dec00204 	addi	sp,sp,8
100011ac:	f800283a 	ret

100011b0 <UsbGetDeviceDesc2>:

void UsbGetDeviceDesc2()
{
100011b0:	defffe04 	addi	sp,sp,-8
100011b4:	dfc00115 	stw	ra,4(sp)
100011b8:	df000015 	stw	fp,0(sp)
100011bc:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
100011c0:	01000084 	movi	r4,2
100011c4:	01414004 	movi	r5,1280
100011c8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x050C);
100011cc:	0009883a 	mov	r4,zero
100011d0:	01414304 	movi	r5,1292
100011d4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100011d8:	0009883a 	mov	r4,zero
100011dc:	01400204 	movi	r5,8
100011e0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100011e4:	0009883a 	mov	r4,zero
100011e8:	0140b404 	movi	r5,720
100011ec:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
100011f0:	0009883a 	mov	r4,zero
100011f4:	01400044 	movi	r5,1
100011f8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
100011fc:	0009883a 	mov	r4,zero
10001200:	014004c4 	movi	r5,19
10001204:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
10001208:	0009883a 	mov	r4,zero
1000120c:	01414504 	movi	r5,1300
10001210:	00000e00 	call	100000e0 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10001214:	0009883a 	mov	r4,zero
10001218:	0141a004 	movi	r5,1664
1000121c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0100);//e //device 0x01
10001220:	0009883a 	mov	r4,zero
10001224:	01404004 	movi	r5,256
10001228:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
1000122c:	0009883a 	mov	r4,zero
10001230:	000b883a 	mov	r5,zero
10001234:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0012);//2
10001238:	0009883a 	mov	r4,zero
1000123c:	01400484 	movi	r5,18
10001240:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10001244:	0009883a 	mov	r4,zero
10001248:	01415104 	movi	r5,1348
1000124c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10001250:	0009883a 	mov	r4,zero
10001254:	01400204 	movi	r5,8
10001258:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
1000125c:	0009883a 	mov	r4,zero
10001260:	0140a404 	movi	r5,656
10001264:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10001268:	0009883a 	mov	r4,zero
1000126c:	01401044 	movi	r5,65
10001270:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10001274:	0009883a 	mov	r4,zero
10001278:	014004c4 	movi	r5,19
1000127c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10001280:	0009883a 	mov	r4,zero
10001284:	01414804 	movi	r5,1312
10001288:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
1000128c:	0009883a 	mov	r4,zero
10001290:	01415304 	movi	r5,1356
10001294:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10001298:	0009883a 	mov	r4,zero
1000129c:	01400204 	movi	r5,8
100012a0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
100012a4:	0009883a 	mov	r4,zero
100012a8:	0140a404 	movi	r5,656
100012ac:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//6
100012b0:	0009883a 	mov	r4,zero
100012b4:	01400044 	movi	r5,1
100012b8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100012bc:	0009883a 	mov	r4,zero
100012c0:	014004c4 	movi	r5,19
100012c4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
100012c8:	0009883a 	mov	r4,zero
100012cc:	01414b04 	movi	r5,1324
100012d0:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0554); //c
100012d4:	0009883a 	mov	r4,zero
100012d8:	01415504 	movi	r5,1364
100012dc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0002);//e
100012e0:	0009883a 	mov	r4,zero
100012e4:	01400084 	movi	r5,2
100012e8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
100012ec:	0009883a 	mov	r4,zero
100012f0:	0140a404 	movi	r5,656
100012f4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100012f8:	0009883a 	mov	r4,zero
100012fc:	01401044 	movi	r5,65
10001300:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10001304:	0009883a 	mov	r4,zero
10001308:	014004c4 	movi	r5,19
1000130c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10001310:	0009883a 	mov	r4,zero
10001314:	01414e04 	movi	r5,1336
10001318:	00000e00 	call	100000e0 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //538
1000131c:	0009883a 	mov	r4,zero
10001320:	000b883a 	mov	r5,zero
10001324:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10001328:	0009883a 	mov	r4,zero
1000132c:	000b883a 	mov	r5,zero
10001330:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0210);//c
10001334:	0009883a 	mov	r4,zero
10001338:	01408404 	movi	r5,528
1000133c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//e
10001340:	0009883a 	mov	r4,zero
10001344:	01401044 	movi	r5,65
10001348:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
1000134c:	0009883a 	mov	r4,zero
10001350:	014004c4 	movi	r5,19
10001354:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
10001358:	0009883a 	mov	r4,zero
1000135c:	000b883a 	mov	r5,zero
10001360:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10001364:	01006c04 	movi	r4,432
10001368:	01414004 	movi	r5,1280
1000136c:	0000e700 	call	10000e70 <UsbWrite>
}
10001370:	e037883a 	mov	sp,fp
10001374:	dfc00117 	ldw	ra,4(sp)
10001378:	df000017 	ldw	fp,0(sp)
1000137c:	dec00204 	addi	sp,sp,8
10001380:	f800283a 	ret

10001384 <UsbGetConfigDesc1>:


void UsbGetConfigDesc1()
{
10001384:	defffe04 	addi	sp,sp,-8
10001388:	dfc00115 	stw	ra,4(sp)
1000138c:	df000015 	stw	fp,0(sp)
10001390:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10001394:	01000084 	movi	r4,2
10001398:	01414004 	movi	r5,1280
1000139c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x050C);
100013a0:	0009883a 	mov	r4,zero
100013a4:	01414304 	movi	r5,1292
100013a8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100013ac:	0009883a 	mov	r4,zero
100013b0:	01400204 	movi	r5,8
100013b4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100013b8:	0009883a 	mov	r4,zero
100013bc:	0140b404 	movi	r5,720
100013c0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
100013c4:	0009883a 	mov	r4,zero
100013c8:	01400044 	movi	r5,1
100013cc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
100013d0:	0009883a 	mov	r4,zero
100013d4:	014004c4 	movi	r5,19
100013d8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
100013dc:	0009883a 	mov	r4,zero
100013e0:	01414504 	movi	r5,1300
100013e4:	00000e00 	call	100000e0 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
100013e8:	0009883a 	mov	r4,zero
100013ec:	0141a004 	movi	r5,1664
100013f0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
100013f4:	0009883a 	mov	r4,zero
100013f8:	01408004 	movi	r5,512
100013fc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10001400:	0009883a 	mov	r4,zero
10001404:	000b883a 	mov	r5,zero
10001408:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0009);//2
1000140c:	0009883a 	mov	r4,zero
10001410:	01400244 	movi	r5,9
10001414:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10001418:	0009883a 	mov	r4,zero
1000141c:	01415104 	movi	r5,1348
10001420:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10001424:	0009883a 	mov	r4,zero
10001428:	01400204 	movi	r5,8
1000142c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10001430:	0009883a 	mov	r4,zero
10001434:	0140a404 	movi	r5,656
10001438:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
1000143c:	0009883a 	mov	r4,zero
10001440:	01401044 	movi	r5,65
10001444:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10001448:	0009883a 	mov	r4,zero
1000144c:	014004c4 	movi	r5,19
10001450:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10001454:	0009883a 	mov	r4,zero
10001458:	01414804 	movi	r5,1312
1000145c:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
10001460:	0009883a 	mov	r4,zero
10001464:	01415304 	movi	r5,1356
10001468:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//2
1000146c:	0009883a 	mov	r4,zero
10001470:	01400044 	movi	r5,1
10001474:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10001478:	0009883a 	mov	r4,zero
1000147c:	0140a404 	movi	r5,656
10001480:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10001484:	0009883a 	mov	r4,zero
10001488:	01400044 	movi	r5,1
1000148c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10001490:	0009883a 	mov	r4,zero
10001494:	014004c4 	movi	r5,19
10001498:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
1000149c:	0009883a 	mov	r4,zero
100014a0:	01414b04 	movi	r5,1324
100014a4:	00000e00 	call	100000e0 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
100014a8:	0009883a 	mov	r4,zero
100014ac:	000b883a 	mov	r5,zero
100014b0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
100014b4:	0009883a 	mov	r4,zero
100014b8:	000b883a 	mov	r5,zero
100014bc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
100014c0:	0009883a 	mov	r4,zero
100014c4:	01408404 	movi	r5,528
100014c8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100014cc:	0009883a 	mov	r4,zero
100014d0:	01401044 	movi	r5,65
100014d4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
100014d8:	0009883a 	mov	r4,zero
100014dc:	014004c4 	movi	r5,19
100014e0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
100014e4:	0009883a 	mov	r4,zero
100014e8:	000b883a 	mov	r5,zero
100014ec:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
100014f0:	01006c04 	movi	r4,432
100014f4:	01414004 	movi	r5,1280
100014f8:	0000e700 	call	10000e70 <UsbWrite>
}
100014fc:	e037883a 	mov	sp,fp
10001500:	dfc00117 	ldw	ra,4(sp)
10001504:	df000017 	ldw	fp,0(sp)
10001508:	dec00204 	addi	sp,sp,8
1000150c:	f800283a 	ret

10001510 <UsbGetConfigDesc2>:


void UsbGetConfigDesc2()
{
10001510:	defffe04 	addi	sp,sp,-8
10001514:	dfc00115 	stw	ra,4(sp)
10001518:	df000015 	stw	fp,0(sp)
1000151c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10001520:	01000084 	movi	r4,2
10001524:	01414004 	movi	r5,1280
10001528:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000152c:	0009883a 	mov	r4,zero
10001530:	01414304 	movi	r5,1292
10001534:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10001538:	0009883a 	mov	r4,zero
1000153c:	01400204 	movi	r5,8
10001540:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10001544:	0009883a 	mov	r4,zero
10001548:	0140b404 	movi	r5,720
1000154c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
10001550:	0009883a 	mov	r4,zero
10001554:	01400044 	movi	r5,1
10001558:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000155c:	0009883a 	mov	r4,zero
10001560:	014004c4 	movi	r5,19
10001564:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
10001568:	0009883a 	mov	r4,zero
1000156c:	01414504 	movi	r5,1300
10001570:	00000e00 	call	100000e0 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10001574:	0009883a 	mov	r4,zero
10001578:	0141a004 	movi	r5,1664
1000157c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
10001580:	0009883a 	mov	r4,zero
10001584:	01408004 	movi	r5,512
10001588:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
1000158c:	0009883a 	mov	r4,zero
10001590:	000b883a 	mov	r5,zero
10001594:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x00FF);//2
10001598:	0009883a 	mov	r4,zero
1000159c:	01403fc4 	movi	r5,255
100015a0:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x055c); //514
100015a4:	0009883a 	mov	r4,zero
100015a8:	01415704 	movi	r5,1372
100015ac:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
100015b0:	0009883a 	mov	r4,zero
100015b4:	01400204 	movi	r5,8
100015b8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
100015bc:	0009883a 	mov	r4,zero
100015c0:	0140a404 	movi	r5,656
100015c4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
100015c8:	0009883a 	mov	r4,zero
100015cc:	01401044 	movi	r5,65
100015d0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100015d4:	0009883a 	mov	r4,zero
100015d8:	014004c4 	movi	r5,19
100015dc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
100015e0:	0009883a 	mov	r4,zero
100015e4:	01414804 	movi	r5,1312
100015e8:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0564); //520
100015ec:	0009883a 	mov	r4,zero
100015f0:	01415904 	movi	r5,1380
100015f4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
100015f8:	0009883a 	mov	r4,zero
100015fc:	01400204 	movi	r5,8
10001600:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10001604:	0009883a 	mov	r4,zero
10001608:	0140a404 	movi	r5,656
1000160c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10001610:	0009883a 	mov	r4,zero
10001614:	01400044 	movi	r5,1
10001618:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
1000161c:	0009883a 	mov	r4,zero
10001620:	014004c4 	movi	r5,19
10001624:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10001628:	0009883a 	mov	r4,zero
1000162c:	01414b04 	movi	r5,1324
10001630:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x056c); //52c
10001634:	0009883a 	mov	r4,zero
10001638:	01415b04 	movi	r5,1388
1000163c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10001640:	0009883a 	mov	r4,zero
10001644:	01400204 	movi	r5,8
10001648:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
1000164c:	0009883a 	mov	r4,zero
10001650:	0140a404 	movi	r5,656
10001654:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10001658:	0009883a 	mov	r4,zero
1000165c:	01401044 	movi	r5,65
10001660:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10001664:	0009883a 	mov	r4,zero
10001668:	014004c4 	movi	r5,19
1000166c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10001670:	0009883a 	mov	r4,zero
10001674:	01414e04 	movi	r5,1336
10001678:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0574); //538
1000167c:	0009883a 	mov	r4,zero
10001680:	01415d04 	movi	r5,1396
10001684:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10001688:	0009883a 	mov	r4,zero
1000168c:	01400204 	movi	r5,8
10001690:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10001694:	0009883a 	mov	r4,zero
10001698:	0140a404 	movi	r5,656
1000169c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
100016a0:	0009883a 	mov	r4,zero
100016a4:	01400044 	movi	r5,1
100016a8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
100016ac:	0009883a 	mov	r4,zero
100016b0:	014004c4 	movi	r5,19
100016b4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
100016b8:	0009883a 	mov	r4,zero
100016bc:	01415104 	movi	r5,1348
100016c0:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x057c); //544
100016c4:	0009883a 	mov	r4,zero
100016c8:	01415f04 	movi	r5,1404
100016cc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0002);//6
100016d0:	0009883a 	mov	r4,zero
100016d4:	01400084 	movi	r5,2
100016d8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
100016dc:	0009883a 	mov	r4,zero
100016e0:	0140a404 	movi	r5,656
100016e4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
100016e8:	0009883a 	mov	r4,zero
100016ec:	01401044 	movi	r5,65
100016f0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100016f4:	0009883a 	mov	r4,zero
100016f8:	014004c4 	movi	r5,19
100016fc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
10001700:	0009883a 	mov	r4,zero
10001704:	01415404 	movi	r5,1360
10001708:	00000e00 	call	100000e0 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //550
1000170c:	0009883a 	mov	r4,zero
10001710:	000b883a 	mov	r5,zero
10001714:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
10001718:	0009883a 	mov	r4,zero
1000171c:	000b883a 	mov	r5,zero
10001720:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0210);//4
10001724:	0009883a 	mov	r4,zero
10001728:	01408404 	movi	r5,528
1000172c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//6
10001730:	0009883a 	mov	r4,zero
10001734:	01401044 	movi	r5,65
10001738:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
1000173c:	0009883a 	mov	r4,zero
10001740:	014004c4 	movi	r5,19
10001744:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10001748:	0009883a 	mov	r4,zero
1000174c:	000b883a 	mov	r5,zero
10001750:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10001754:	01006c04 	movi	r4,432
10001758:	01414004 	movi	r5,1280
1000175c:	0000e700 	call	10000e70 <UsbWrite>
}
10001760:	e037883a 	mov	sp,fp
10001764:	dfc00117 	ldw	ra,4(sp)
10001768:	df000017 	ldw	fp,0(sp)
1000176c:	dec00204 	addi	sp,sp,8
10001770:	f800283a 	ret

10001774 <UsbSetConfig>:

void UsbSetConfig()
{
10001774:	defffe04 	addi	sp,sp,-8
10001778:	dfc00115 	stw	ra,4(sp)
1000177c:	df000015 	stw	fp,0(sp)
10001780:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10001784:	01000084 	movi	r4,2
10001788:	01414004 	movi	r5,1280
1000178c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x050C);
10001790:	0009883a 	mov	r4,zero
10001794:	01414304 	movi	r5,1292
10001798:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
1000179c:	0009883a 	mov	r4,zero
100017a0:	01400204 	movi	r5,8
100017a4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
100017a8:	0009883a 	mov	r4,zero
100017ac:	0140b404 	movi	r5,720
100017b0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
100017b4:	0009883a 	mov	r4,zero
100017b8:	01400044 	movi	r5,1
100017bc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
100017c0:	0009883a 	mov	r4,zero
100017c4:	014004c4 	movi	r5,19
100017c8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
100017cc:	0009883a 	mov	r4,zero
100017d0:	01414504 	movi	r5,1300
100017d4:	00000e00 	call	100000e0 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0900);
100017d8:	0009883a 	mov	r4,zero
100017dc:	01424004 	movi	r5,2304
100017e0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//device address
100017e4:	0009883a 	mov	r4,zero
100017e8:	01400044 	movi	r5,1
100017ec:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
100017f0:	0009883a 	mov	r4,zero
100017f4:	000b883a 	mov	r5,zero
100017f8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
100017fc:	0009883a 	mov	r4,zero
10001800:	000b883a 	mov	r5,zero
10001804:	00000e00 	call	100000e0 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
10001808:	0009883a 	mov	r4,zero
1000180c:	000b883a 	mov	r5,zero
10001810:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
10001814:	0009883a 	mov	r4,zero
10001818:	000b883a 	mov	r5,zero
1000181c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
10001820:	0009883a 	mov	r4,zero
10001824:	0140a404 	movi	r5,656
10001828:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
1000182c:	0009883a 	mov	r4,zero
10001830:	01401044 	movi	r5,65
10001834:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
10001838:	0009883a 	mov	r4,zero
1000183c:	014004c4 	movi	r5,19
10001840:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
10001844:	0009883a 	mov	r4,zero
10001848:	000b883a 	mov	r5,zero
1000184c:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10001850:	01006c04 	movi	r4,432
10001854:	01414004 	movi	r5,1280
10001858:	0000e700 	call	10000e70 <UsbWrite>

}
1000185c:	e037883a 	mov	sp,fp
10001860:	dfc00117 	ldw	ra,4(sp)
10001864:	df000017 	ldw	fp,0(sp)
10001868:	dec00204 	addi	sp,sp,8
1000186c:	f800283a 	ret

10001870 <UsbClassRequest>:

void UsbClassRequest()
{
10001870:	defffe04 	addi	sp,sp,-8
10001874:	dfc00115 	stw	ra,4(sp)
10001878:	df000015 	stw	fp,0(sp)
1000187c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10001880:	01000084 	movi	r4,2
10001884:	01414004 	movi	r5,1280
10001888:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000188c:	0009883a 	mov	r4,zero
10001890:	01414304 	movi	r5,1292
10001894:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10001898:	0009883a 	mov	r4,zero
1000189c:	01400204 	movi	r5,8
100018a0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
100018a4:	0009883a 	mov	r4,zero
100018a8:	0140b404 	movi	r5,720
100018ac:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
100018b0:	0009883a 	mov	r4,zero
100018b4:	01400044 	movi	r5,1
100018b8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
100018bc:	0009883a 	mov	r4,zero
100018c0:	014004c4 	movi	r5,19
100018c4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
100018c8:	0009883a 	mov	r4,zero
100018cc:	01414504 	movi	r5,1300
100018d0:	00000e00 	call	100000e0 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0A21);
100018d4:	0009883a 	mov	r4,zero
100018d8:	01428844 	movi	r5,2593
100018dc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//device address
100018e0:	0009883a 	mov	r4,zero
100018e4:	000b883a 	mov	r5,zero
100018e8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
100018ec:	0009883a 	mov	r4,zero
100018f0:	000b883a 	mov	r5,zero
100018f4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
100018f8:	0009883a 	mov	r4,zero
100018fc:	000b883a 	mov	r5,zero
10001900:	00000e00 	call	100000e0 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
10001904:	0009883a 	mov	r4,zero
10001908:	000b883a 	mov	r5,zero
1000190c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number /data length
10001910:	0009883a 	mov	r4,zero
10001914:	000b883a 	mov	r5,zero
10001918:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
1000191c:	0009883a 	mov	r4,zero
10001920:	0140a404 	movi	r5,656
10001924:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10001928:	0009883a 	mov	r4,zero
1000192c:	01401044 	movi	r5,65
10001930:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
10001934:	0009883a 	mov	r4,zero
10001938:	014004c4 	movi	r5,19
1000193c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);
10001940:	0009883a 	mov	r4,zero
10001944:	000b883a 	mov	r5,zero
10001948:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000194c:	01006c04 	movi	r4,432
10001950:	01414004 	movi	r5,1280
10001954:	0000e700 	call	10000e70 <UsbWrite>
}
10001958:	e037883a 	mov	sp,fp
1000195c:	dfc00117 	ldw	ra,4(sp)
10001960:	df000017 	ldw	fp,0(sp)
10001964:	dec00204 	addi	sp,sp,8
10001968:	f800283a 	ret

1000196c <UsbGetHidDesc>:


void UsbGetHidDesc()
{
1000196c:	defffe04 	addi	sp,sp,-8
10001970:	dfc00115 	stw	ra,4(sp)
10001974:	df000015 	stw	fp,0(sp)
10001978:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
1000197c:	01000084 	movi	r4,2
10001980:	01414004 	movi	r5,1280
10001984:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x050C);
10001988:	0009883a 	mov	r4,zero
1000198c:	01414304 	movi	r5,1292
10001990:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10001994:	0009883a 	mov	r4,zero
10001998:	01400204 	movi	r5,8
1000199c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
100019a0:	0009883a 	mov	r4,zero
100019a4:	0140b404 	movi	r5,720
100019a8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
100019ac:	0009883a 	mov	r4,zero
100019b0:	01400044 	movi	r5,1
100019b4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
100019b8:	0009883a 	mov	r4,zero
100019bc:	014004c4 	movi	r5,19
100019c0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
100019c4:	0009883a 	mov	r4,zero
100019c8:	01414504 	movi	r5,1300
100019cc:	00000e00 	call	100000e0 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
100019d0:	0009883a 	mov	r4,zero
100019d4:	0141a044 	movi	r5,1665
100019d8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x2100);//e //HID 0x21
100019dc:	0009883a 	mov	r4,zero
100019e0:	01484004 	movi	r5,8448
100019e4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
100019e8:	0009883a 	mov	r4,zero
100019ec:	000b883a 	mov	r5,zero
100019f0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
100019f4:	0009883a 	mov	r4,zero
100019f8:	01401ec4 	movi	r5,123
100019fc:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10001a00:	0009883a 	mov	r4,zero
10001a04:	01415104 	movi	r5,1348
10001a08:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10001a0c:	0009883a 	mov	r4,zero
10001a10:	01400204 	movi	r5,8
10001a14:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10001a18:	0009883a 	mov	r4,zero
10001a1c:	0140a404 	movi	r5,656
10001a20:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10001a24:	0009883a 	mov	r4,zero
10001a28:	01401044 	movi	r5,65
10001a2c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10001a30:	0009883a 	mov	r4,zero
10001a34:	014004c4 	movi	r5,19
10001a38:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10001a3c:	0009883a 	mov	r4,zero
10001a40:	01414804 	movi	r5,1312
10001a44:	00000e00 	call	100000e0 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
10001a48:	0009883a 	mov	r4,zero
10001a4c:	000b883a 	mov	r5,zero
10001a50:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10001a54:	0009883a 	mov	r4,zero
10001a58:	000b883a 	mov	r5,zero
10001a5c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
10001a60:	0009883a 	mov	r4,zero
10001a64:	01408404 	movi	r5,528
10001a68:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10001a6c:	0009883a 	mov	r4,zero
10001a70:	01401044 	movi	r5,65
10001a74:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10001a78:	0009883a 	mov	r4,zero
10001a7c:	014004c4 	movi	r5,19
10001a80:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
10001a84:	0009883a 	mov	r4,zero
10001a88:	000b883a 	mov	r5,zero
10001a8c:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10001a90:	01006c04 	movi	r4,432
10001a94:	01414004 	movi	r5,1280
10001a98:	0000e700 	call	10000e70 <UsbWrite>

}
10001a9c:	e037883a 	mov	sp,fp
10001aa0:	dfc00117 	ldw	ra,4(sp)
10001aa4:	df000017 	ldw	fp,0(sp)
10001aa8:	dec00204 	addi	sp,sp,8
10001aac:	f800283a 	ret

10001ab0 <UsbGetReportDesc>:


void UsbGetReportDesc()
{
10001ab0:	defffe04 	addi	sp,sp,-8
10001ab4:	dfc00115 	stw	ra,4(sp)
10001ab8:	df000015 	stw	fp,0(sp)
10001abc:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10001ac0:	01000084 	movi	r4,2
10001ac4:	01414004 	movi	r5,1280
10001ac8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x050C);
10001acc:	0009883a 	mov	r4,zero
10001ad0:	01414304 	movi	r5,1292
10001ad4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10001ad8:	0009883a 	mov	r4,zero
10001adc:	01400204 	movi	r5,8
10001ae0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10001ae4:	0009883a 	mov	r4,zero
10001ae8:	0140b404 	movi	r5,720
10001aec:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);
10001af0:	0009883a 	mov	r4,zero
10001af4:	01400044 	movi	r5,1
10001af8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);
10001afc:	0009883a 	mov	r4,zero
10001b00:	014004c4 	movi	r5,19
10001b04:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0514);
10001b08:	0009883a 	mov	r4,zero
10001b0c:	01414504 	movi	r5,1300
10001b10:	00000e00 	call	100000e0 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
10001b14:	0009883a 	mov	r4,zero
10001b18:	0141a044 	movi	r5,1665
10001b1c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x2200);//e //report 0x22
10001b20:	0009883a 	mov	r4,zero
10001b24:	01488004 	movi	r5,8704
10001b28:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10001b2c:	0009883a 	mov	r4,zero
10001b30:	000b883a 	mov	r5,zero
10001b34:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
10001b38:	0009883a 	mov	r4,zero
10001b3c:	01401ec4 	movi	r5,123
10001b40:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0580); //514
10001b44:	0009883a 	mov	r4,zero
10001b48:	01416004 	movi	r5,1408
10001b4c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10001b50:	0009883a 	mov	r4,zero
10001b54:	01400204 	movi	r5,8
10001b58:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10001b5c:	0009883a 	mov	r4,zero
10001b60:	0140a404 	movi	r5,656
10001b64:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10001b68:	0009883a 	mov	r4,zero
10001b6c:	01401044 	movi	r5,65
10001b70:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10001b74:	0009883a 	mov	r4,zero
10001b78:	014004c4 	movi	r5,19
10001b7c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10001b80:	0009883a 	mov	r4,zero
10001b84:	01414804 	movi	r5,1312
10001b88:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0588); //520
10001b8c:	0009883a 	mov	r4,zero
10001b90:	01416204 	movi	r5,1416
10001b94:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10001b98:	0009883a 	mov	r4,zero
10001b9c:	01400204 	movi	r5,8
10001ba0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10001ba4:	0009883a 	mov	r4,zero
10001ba8:	0140a404 	movi	r5,656
10001bac:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10001bb0:	0009883a 	mov	r4,zero
10001bb4:	01400044 	movi	r5,1
10001bb8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10001bbc:	0009883a 	mov	r4,zero
10001bc0:	014004c4 	movi	r5,19
10001bc4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10001bc8:	0009883a 	mov	r4,zero
10001bcc:	01414b04 	movi	r5,1324
10001bd0:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0590); //52c
10001bd4:	0009883a 	mov	r4,zero
10001bd8:	01416404 	movi	r5,1424
10001bdc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10001be0:	0009883a 	mov	r4,zero
10001be4:	01400204 	movi	r5,8
10001be8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
10001bec:	0009883a 	mov	r4,zero
10001bf0:	0140a404 	movi	r5,656
10001bf4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10001bf8:	0009883a 	mov	r4,zero
10001bfc:	01401044 	movi	r5,65
10001c00:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10001c04:	0009883a 	mov	r4,zero
10001c08:	014004c4 	movi	r5,19
10001c0c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10001c10:	0009883a 	mov	r4,zero
10001c14:	01414e04 	movi	r5,1336
10001c18:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0598); //538
10001c1c:	0009883a 	mov	r4,zero
10001c20:	01416604 	movi	r5,1432
10001c24:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10001c28:	0009883a 	mov	r4,zero
10001c2c:	01400204 	movi	r5,8
10001c30:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10001c34:	0009883a 	mov	r4,zero
10001c38:	0140a404 	movi	r5,656
10001c3c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10001c40:	0009883a 	mov	r4,zero
10001c44:	01400044 	movi	r5,1
10001c48:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10001c4c:	0009883a 	mov	r4,zero
10001c50:	014004c4 	movi	r5,19
10001c54:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
10001c58:	0009883a 	mov	r4,zero
10001c5c:	01415104 	movi	r5,1348
10001c60:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x05a0); //544
10001c64:	0009883a 	mov	r4,zero
10001c68:	01416804 	movi	r5,1440
10001c6c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10001c70:	0009883a 	mov	r4,zero
10001c74:	01400204 	movi	r5,8
10001c78:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10001c7c:	0009883a 	mov	r4,zero
10001c80:	0140a404 	movi	r5,656
10001c84:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
10001c88:	0009883a 	mov	r4,zero
10001c8c:	01401044 	movi	r5,65
10001c90:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10001c94:	0009883a 	mov	r4,zero
10001c98:	014004c4 	movi	r5,19
10001c9c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
10001ca0:	0009883a 	mov	r4,zero
10001ca4:	01415404 	movi	r5,1360
10001ca8:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-6
	IO_write(HPI_DATA,0x05a8); //550
10001cac:	0009883a 	mov	r4,zero
10001cb0:	01416a04 	movi	r5,1448
10001cb4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10001cb8:	0009883a 	mov	r4,zero
10001cbc:	01400204 	movi	r5,8
10001cc0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10001cc4:	0009883a 	mov	r4,zero
10001cc8:	0140a404 	movi	r5,656
10001ccc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10001cd0:	0009883a 	mov	r4,zero
10001cd4:	01400044 	movi	r5,1
10001cd8:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10001cdc:	0009883a 	mov	r4,zero
10001ce0:	014004c4 	movi	r5,19
10001ce4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x055c);//a
10001ce8:	0009883a 	mov	r4,zero
10001cec:	01415704 	movi	r5,1372
10001cf0:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-7
	IO_write(HPI_DATA,0x05b0); //c
10001cf4:	0009883a 	mov	r4,zero
10001cf8:	01416c04 	movi	r5,1456
10001cfc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10001d00:	0009883a 	mov	r4,zero
10001d04:	01400204 	movi	r5,8
10001d08:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//560
10001d0c:	0009883a 	mov	r4,zero
10001d10:	0140a404 	movi	r5,656
10001d14:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//2 //data1
10001d18:	0009883a 	mov	r4,zero
10001d1c:	01401044 	movi	r5,65
10001d20:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10001d24:	0009883a 	mov	r4,zero
10001d28:	014004c4 	movi	r5,19
10001d2c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0568);//6
10001d30:	0009883a 	mov	r4,zero
10001d34:	01415a04 	movi	r5,1384
10001d38:	00000e00 	call	100000e0 <IO_write>

	//data phase IN-8
	IO_write(HPI_DATA,0x05b8); //8
10001d3c:	0009883a 	mov	r4,zero
10001d40:	01416e04 	movi	r5,1464
10001d44:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0003);//a
10001d48:	0009883a 	mov	r4,zero
10001d4c:	014000c4 	movi	r5,3
10001d50:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10001d54:	0009883a 	mov	r4,zero
10001d58:	0140a404 	movi	r5,656
10001d5c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10001d60:	0009883a 	mov	r4,zero
10001d64:	01400044 	movi	r5,1
10001d68:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//570
10001d6c:	0009883a 	mov	r4,zero
10001d70:	014004c4 	movi	r5,19
10001d74:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0574);//2
10001d78:	0009883a 	mov	r4,zero
10001d7c:	01415d04 	movi	r5,1396
10001d80:	00000e00 	call	100000e0 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //574
10001d84:	0009883a 	mov	r4,zero
10001d88:	000b883a 	mov	r5,zero
10001d8c:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
10001d90:	0009883a 	mov	r4,zero
10001d94:	000b883a 	mov	r5,zero
10001d98:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0210);//8
10001d9c:	0009883a 	mov	r4,zero
10001da0:	01408404 	movi	r5,528
10001da4:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10001da8:	0009883a 	mov	r4,zero
10001dac:	01401044 	movi	r5,65
10001db0:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10001db4:	0009883a 	mov	r4,zero
10001db8:	014004c4 	movi	r5,19
10001dbc:	00000e00 	call	100000e0 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10001dc0:	0009883a 	mov	r4,zero
10001dc4:	000b883a 	mov	r5,zero
10001dc8:	00000e00 	call	100000e0 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10001dcc:	01006c04 	movi	r4,432
10001dd0:	01414004 	movi	r5,1280
10001dd4:	0000e700 	call	10000e70 <UsbWrite>

}
10001dd8:	e037883a 	mov	sp,fp
10001ddc:	dfc00117 	ldw	ra,4(sp)
10001de0:	df000017 	ldw	fp,0(sp)
10001de4:	dec00204 	addi	sp,sp,8
10001de8:	f800283a 	ret

10001dec <UsbWaitTDListDone>:


alt_u16 UsbWaitTDListDone()
{
10001dec:	defffd04 	addi	sp,sp,-12
10001df0:	dfc00215 	stw	ra,8(sp)
10001df4:	df000115 	stw	fp,4(sp)
10001df8:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
10001dfc:	01005104 	movi	r4,324
10001e00:	0000e9c0 	call	10000e9c <UsbRead>
10001e04:	e0bfff0d 	sth	r2,-4(fp)
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
10001e08:	01005104 	movi	r4,324
10001e0c:	000b883a 	mov	r5,zero
10001e10:	0000e700 	call	10000e70 <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10001e14:	00000d06 	br	10001e4c <UsbWaitTDListDone+0x60>
	{
		if(usb_ctl_val == 0x0000)
10001e18:	e0bfff0b 	ldhu	r2,-4(fp)
10001e1c:	10000526 	beq	r2,zero,10001e34 <UsbWaitTDListDone+0x48>
		{
		}
		else
		{
			printf("[SIE1 MSG]:SIE1 msg reg is %x\n",usb_ctl_val);
10001e20:	e0bfff0b 	ldhu	r2,-4(fp)
10001e24:	01040074 	movhi	r4,4097
10001e28:	21000004 	addi	r4,r4,0
10001e2c:	100b883a 	mov	r5,r2
10001e30:	0001f980 	call	10001f98 <printf>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
10001e34:	01005104 	movi	r4,324
10001e38:	0000e9c0 	call	10000e9c <UsbRead>
10001e3c:	e0bfff0d 	sth	r2,-4(fp)
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
10001e40:	01005104 	movi	r4,324
10001e44:	000b883a 	mov	r5,zero
10001e48:	0000e700 	call	10000e70 <UsbWrite>
{
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10001e4c:	e0bfff0b 	ldhu	r2,-4(fp)
10001e50:	10840018 	cmpnei	r2,r2,4096
10001e54:	103ff01e 	bne	r2,zero,10001e18 <__alt_data_end+0xf8001e18>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
	}

	return usb_ctl_val;
10001e58:	e0bfff0b 	ldhu	r2,-4(fp)
}
10001e5c:	e037883a 	mov	sp,fp
10001e60:	dfc00117 	ldw	ra,4(sp)
10001e64:	df000017 	ldw	fp,0(sp)
10001e68:	dec00204 	addi	sp,sp,8
10001e6c:	f800283a 	ret

10001e70 <UsbGetRetryCnt>:


alt_u16 UsbGetRetryCnt()
{
10001e70:	defffd04 	addi	sp,sp,-12
10001e74:	dfc00215 	stw	ra,8(sp)
10001e78:	df000115 	stw	fp,4(sp)
10001e7c:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	IO_read(HPI_STATUS);
10001e80:	010000c4 	movi	r4,3
10001e84:	000010c0 	call	1000010c <IO_read>
	if(UsbRead(HPI_SIE1_MSG_ADR) == HUSB_TDListDone)
10001e88:	01005104 	movi	r4,324
10001e8c:	0000e9c0 	call	10000e9c <UsbRead>
10001e90:	10bfffcc 	andi	r2,r2,65535
10001e94:	10840018 	cmpnei	r2,r2,4096
10001e98:	1000091e 	bne	r2,zero,10001ec0 <UsbGetRetryCnt+0x50>
	{
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
10001e9c:	01005104 	movi	r4,324
10001ea0:	000b883a 	mov	r5,zero
10001ea4:	0000e700 	call	10000e70 <UsbWrite>

		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001ea8:	0001883a 	nop
10001eac:	010000c4 	movi	r4,3
10001eb0:	000010c0 	call	1000010c <IO_read>
10001eb4:	10bfffcc 	andi	r2,r2,65535
10001eb8:	1080040c 	andi	r2,r2,16
10001ebc:	103ffb26 	beq	r2,zero,10001eac <__alt_data_end+0xf8001eac>
		{
		}
	}
	//usleep(1000);
	IO_write(HPI_ADDR,0x0508);
10001ec0:	01000084 	movi	r4,2
10001ec4:	01414204 	movi	r5,1288
10001ec8:	00000e00 	call	100000e0 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10001ecc:	0009883a 	mov	r4,zero
10001ed0:	000010c0 	call	1000010c <IO_read>
10001ed4:	e0bfff0d 	sth	r2,-4(fp)

	return usb_ctl_val;
10001ed8:	e0bfff0b 	ldhu	r2,-4(fp)
}
10001edc:	e037883a 	mov	sp,fp
10001ee0:	dfc00117 	ldw	ra,4(sp)
10001ee4:	df000017 	ldw	fp,0(sp)
10001ee8:	dec00204 	addi	sp,sp,8
10001eec:	f800283a 	ret

10001ef0 <UsbPrintMem>:


void UsbPrintMem()
{
10001ef0:	defffc04 	addi	sp,sp,-16
10001ef4:	dfc00315 	stw	ra,12(sp)
10001ef8:	df000215 	stw	fp,8(sp)
10001efc:	df000204 	addi	fp,sp,8
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
10001f00:	01000084 	movi	r4,2
10001f04:	01414004 	movi	r5,1280
10001f08:	00000e00 	call	100000e0 <IO_write>
	for (i = 0; i <= 200; i += 2)
10001f0c:	e03ffe15 	stw	zero,-8(fp)
10001f10:	00000e06 	br	10001f4c <UsbPrintMem+0x5c>
	{
		code = IO_read(HPI_DATA);
10001f14:	0009883a 	mov	r4,zero
10001f18:	000010c0 	call	1000010c <IO_read>
10001f1c:	10bfffcc 	andi	r2,r2,65535
10001f20:	e0bfff15 	stw	r2,-4(fp)
		printf("\naddr %x = %04x\n", 0x0500+i, code);
10001f24:	e0bffe17 	ldw	r2,-8(fp)
10001f28:	10814004 	addi	r2,r2,1280
10001f2c:	01040074 	movhi	r4,4097
10001f30:	21000804 	addi	r4,r4,32
10001f34:	100b883a 	mov	r5,r2
10001f38:	e1bfff17 	ldw	r6,-4(fp)
10001f3c:	0001f980 	call	10001f98 <printf>

void UsbPrintMem()
{
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
	for (i = 0; i <= 200; i += 2)
10001f40:	e0bffe17 	ldw	r2,-8(fp)
10001f44:	10800084 	addi	r2,r2,2
10001f48:	e0bffe15 	stw	r2,-8(fp)
10001f4c:	e0bffe17 	ldw	r2,-8(fp)
10001f50:	10803250 	cmplti	r2,r2,201
10001f54:	103fef1e 	bne	r2,zero,10001f14 <__alt_data_end+0xf8001f14>
	{
		code = IO_read(HPI_DATA);
		printf("\naddr %x = %04x\n", 0x0500+i, code);
	}
}
10001f58:	e037883a 	mov	sp,fp
10001f5c:	dfc00117 	ldw	ra,4(sp)
10001f60:	df000017 	ldw	fp,0(sp)
10001f64:	dec00204 	addi	sp,sp,8
10001f68:	f800283a 	ret

10001f6c <_printf_r>:
10001f6c:	defffd04 	addi	sp,sp,-12
10001f70:	dfc00015 	stw	ra,0(sp)
10001f74:	d9800115 	stw	r6,4(sp)
10001f78:	d9c00215 	stw	r7,8(sp)
10001f7c:	280d883a 	mov	r6,r5
10001f80:	21400217 	ldw	r5,8(r4)
10001f84:	d9c00104 	addi	r7,sp,4
10001f88:	00021380 	call	10002138 <___vfprintf_internal_r>
10001f8c:	dfc00017 	ldw	ra,0(sp)
10001f90:	dec00304 	addi	sp,sp,12
10001f94:	f800283a 	ret

10001f98 <printf>:
10001f98:	defffc04 	addi	sp,sp,-16
10001f9c:	dfc00015 	stw	ra,0(sp)
10001fa0:	d9400115 	stw	r5,4(sp)
10001fa4:	d9800215 	stw	r6,8(sp)
10001fa8:	d9c00315 	stw	r7,12(sp)
10001fac:	00840074 	movhi	r2,4097
10001fb0:	10835704 	addi	r2,r2,3420
10001fb4:	10800017 	ldw	r2,0(r2)
10001fb8:	200b883a 	mov	r5,r4
10001fbc:	d9800104 	addi	r6,sp,4
10001fc0:	11000217 	ldw	r4,8(r2)
10001fc4:	00042340 	call	10004234 <__vfprintf_internal>
10001fc8:	dfc00017 	ldw	ra,0(sp)
10001fcc:	dec00404 	addi	sp,sp,16
10001fd0:	f800283a 	ret

10001fd4 <_puts_r>:
10001fd4:	defff604 	addi	sp,sp,-40
10001fd8:	dc000715 	stw	r16,28(sp)
10001fdc:	2021883a 	mov	r16,r4
10001fe0:	2809883a 	mov	r4,r5
10001fe4:	dc400815 	stw	r17,32(sp)
10001fe8:	dfc00915 	stw	ra,36(sp)
10001fec:	2823883a 	mov	r17,r5
10001ff0:	00020a00 	call	100020a0 <strlen>
10001ff4:	00c40074 	movhi	r3,4097
10001ff8:	18c35704 	addi	r3,r3,3420
10001ffc:	18c00017 	ldw	r3,0(r3)
10002000:	11000044 	addi	r4,r2,1
10002004:	d8800115 	stw	r2,4(sp)
10002008:	18c00217 	ldw	r3,8(r3)
1000200c:	01440074 	movhi	r5,4097
10002010:	29400d04 	addi	r5,r5,52
10002014:	1880030b 	ldhu	r2,12(r3)
10002018:	d9400215 	stw	r5,8(sp)
1000201c:	d9000615 	stw	r4,24(sp)
10002020:	01400044 	movi	r5,1
10002024:	01000084 	movi	r4,2
10002028:	d9000515 	stw	r4,20(sp)
1000202c:	dc400015 	stw	r17,0(sp)
10002030:	d9400315 	stw	r5,12(sp)
10002034:	dec00415 	stw	sp,16(sp)
10002038:	1108000c 	andi	r4,r2,8192
1000203c:	2000061e 	bne	r4,zero,10002058 <_puts_r+0x84>
10002040:	19401917 	ldw	r5,100(r3)
10002044:	0137ffc4 	movi	r4,-8193
10002048:	10880014 	ori	r2,r2,8192
1000204c:	2908703a 	and	r4,r5,r4
10002050:	1880030d 	sth	r2,12(r3)
10002054:	19001915 	stw	r4,100(r3)
10002058:	81400217 	ldw	r5,8(r16)
1000205c:	8009883a 	mov	r4,r16
10002060:	d9800404 	addi	r6,sp,16
10002064:	00066f80 	call	100066f8 <__sfvwrite_r>
10002068:	1000061e 	bne	r2,zero,10002084 <_puts_r+0xb0>
1000206c:	00800284 	movi	r2,10
10002070:	dfc00917 	ldw	ra,36(sp)
10002074:	dc400817 	ldw	r17,32(sp)
10002078:	dc000717 	ldw	r16,28(sp)
1000207c:	dec00a04 	addi	sp,sp,40
10002080:	f800283a 	ret
10002084:	00bfffc4 	movi	r2,-1
10002088:	003ff906 	br	10002070 <__alt_data_end+0xf8002070>

1000208c <puts>:
1000208c:	00840074 	movhi	r2,4097
10002090:	10835704 	addi	r2,r2,3420
10002094:	200b883a 	mov	r5,r4
10002098:	11000017 	ldw	r4,0(r2)
1000209c:	0001fd41 	jmpi	10001fd4 <_puts_r>

100020a0 <strlen>:
100020a0:	208000cc 	andi	r2,r4,3
100020a4:	10002026 	beq	r2,zero,10002128 <strlen+0x88>
100020a8:	20800007 	ldb	r2,0(r4)
100020ac:	10002026 	beq	r2,zero,10002130 <strlen+0x90>
100020b0:	2005883a 	mov	r2,r4
100020b4:	00000206 	br	100020c0 <strlen+0x20>
100020b8:	10c00007 	ldb	r3,0(r2)
100020bc:	18001826 	beq	r3,zero,10002120 <strlen+0x80>
100020c0:	10800044 	addi	r2,r2,1
100020c4:	10c000cc 	andi	r3,r2,3
100020c8:	183ffb1e 	bne	r3,zero,100020b8 <__alt_data_end+0xf80020b8>
100020cc:	10c00017 	ldw	r3,0(r2)
100020d0:	01ffbff4 	movhi	r7,65279
100020d4:	39ffbfc4 	addi	r7,r7,-257
100020d8:	00ca303a 	nor	r5,zero,r3
100020dc:	01a02074 	movhi	r6,32897
100020e0:	19c7883a 	add	r3,r3,r7
100020e4:	31a02004 	addi	r6,r6,-32640
100020e8:	1946703a 	and	r3,r3,r5
100020ec:	1986703a 	and	r3,r3,r6
100020f0:	1800091e 	bne	r3,zero,10002118 <strlen+0x78>
100020f4:	10800104 	addi	r2,r2,4
100020f8:	10c00017 	ldw	r3,0(r2)
100020fc:	19cb883a 	add	r5,r3,r7
10002100:	00c6303a 	nor	r3,zero,r3
10002104:	28c6703a 	and	r3,r5,r3
10002108:	1986703a 	and	r3,r3,r6
1000210c:	183ff926 	beq	r3,zero,100020f4 <__alt_data_end+0xf80020f4>
10002110:	00000106 	br	10002118 <strlen+0x78>
10002114:	10800044 	addi	r2,r2,1
10002118:	10c00007 	ldb	r3,0(r2)
1000211c:	183ffd1e 	bne	r3,zero,10002114 <__alt_data_end+0xf8002114>
10002120:	1105c83a 	sub	r2,r2,r4
10002124:	f800283a 	ret
10002128:	2005883a 	mov	r2,r4
1000212c:	003fe706 	br	100020cc <__alt_data_end+0xf80020cc>
10002130:	0005883a 	mov	r2,zero
10002134:	f800283a 	ret

10002138 <___vfprintf_internal_r>:
10002138:	defeb604 	addi	sp,sp,-1320
1000213c:	dfc14915 	stw	ra,1316(sp)
10002140:	ddc14715 	stw	r23,1308(sp)
10002144:	dd814615 	stw	r22,1304(sp)
10002148:	202f883a 	mov	r23,r4
1000214c:	282d883a 	mov	r22,r5
10002150:	d9812a15 	stw	r6,1192(sp)
10002154:	d9c12d15 	stw	r7,1204(sp)
10002158:	df014815 	stw	fp,1312(sp)
1000215c:	dd414515 	stw	r21,1300(sp)
10002160:	dd014415 	stw	r20,1296(sp)
10002164:	dcc14315 	stw	r19,1292(sp)
10002168:	dc814215 	stw	r18,1288(sp)
1000216c:	dc414115 	stw	r17,1284(sp)
10002170:	dc014015 	stw	r16,1280(sp)
10002174:	0006db80 	call	10006db8 <_localeconv_r>
10002178:	10800017 	ldw	r2,0(r2)
1000217c:	1009883a 	mov	r4,r2
10002180:	d8813515 	stw	r2,1236(sp)
10002184:	00020a00 	call	100020a0 <strlen>
10002188:	d8813815 	stw	r2,1248(sp)
1000218c:	b8000226 	beq	r23,zero,10002198 <___vfprintf_internal_r+0x60>
10002190:	b8800e17 	ldw	r2,56(r23)
10002194:	10010526 	beq	r2,zero,100025ac <___vfprintf_internal_r+0x474>
10002198:	b0c0030b 	ldhu	r3,12(r22)
1000219c:	1908000c 	andi	r4,r3,8192
100021a0:	1805883a 	mov	r2,r3
100021a4:	2000071e 	bne	r4,zero,100021c4 <___vfprintf_internal_r+0x8c>
100021a8:	b1001917 	ldw	r4,100(r22)
100021ac:	18880014 	ori	r2,r3,8192
100021b0:	00f7ffc4 	movi	r3,-8193
100021b4:	20c8703a 	and	r4,r4,r3
100021b8:	b080030d 	sth	r2,12(r22)
100021bc:	1007883a 	mov	r3,r2
100021c0:	b1001915 	stw	r4,100(r22)
100021c4:	1100020c 	andi	r4,r2,8
100021c8:	2000a826 	beq	r4,zero,1000246c <___vfprintf_internal_r+0x334>
100021cc:	b1000417 	ldw	r4,16(r22)
100021d0:	2000a626 	beq	r4,zero,1000246c <___vfprintf_internal_r+0x334>
100021d4:	1080068c 	andi	r2,r2,26
100021d8:	01000284 	movi	r4,10
100021dc:	1100ac26 	beq	r2,r4,10002490 <___vfprintf_internal_r+0x358>
100021e0:	d8c10e04 	addi	r3,sp,1080
100021e4:	d9010dc4 	addi	r4,sp,1079
100021e8:	d9400404 	addi	r5,sp,16
100021ec:	05040074 	movhi	r20,4097
100021f0:	1905c83a 	sub	r2,r3,r4
100021f4:	a5001e84 	addi	r20,r20,122
100021f8:	d8c12815 	stw	r3,1184(sp)
100021fc:	d9012915 	stw	r4,1188(sp)
10002200:	d9411e15 	stw	r5,1144(sp)
10002204:	d8012015 	stw	zero,1152(sp)
10002208:	d8011f15 	stw	zero,1148(sp)
1000220c:	d8013315 	stw	zero,1228(sp)
10002210:	d8013715 	stw	zero,1244(sp)
10002214:	d8013915 	stw	zero,1252(sp)
10002218:	d8013b15 	stw	zero,1260(sp)
1000221c:	d8013a15 	stw	zero,1256(sp)
10002220:	d8012f15 	stw	zero,1212(sp)
10002224:	2811883a 	mov	r8,r5
10002228:	d8813c15 	stw	r2,1264(sp)
1000222c:	d8c12a17 	ldw	r3,1192(sp)
10002230:	18800007 	ldb	r2,0(r3)
10002234:	10021326 	beq	r2,zero,10002a84 <___vfprintf_internal_r+0x94c>
10002238:	00c00944 	movi	r3,37
1000223c:	dc012a17 	ldw	r16,1192(sp)
10002240:	10c0021e 	bne	r2,r3,1000224c <___vfprintf_internal_r+0x114>
10002244:	00001606 	br	100022a0 <___vfprintf_internal_r+0x168>
10002248:	10c08526 	beq	r2,r3,10002460 <___vfprintf_internal_r+0x328>
1000224c:	84000044 	addi	r16,r16,1
10002250:	80800007 	ldb	r2,0(r16)
10002254:	103ffc1e 	bne	r2,zero,10002248 <__alt_data_end+0xf8002248>
10002258:	d9012a17 	ldw	r4,1192(sp)
1000225c:	8123c83a 	sub	r17,r16,r4
10002260:	88000f26 	beq	r17,zero,100022a0 <___vfprintf_internal_r+0x168>
10002264:	d8812a17 	ldw	r2,1192(sp)
10002268:	d8c12017 	ldw	r3,1152(sp)
1000226c:	44400115 	stw	r17,4(r8)
10002270:	40800015 	stw	r2,0(r8)
10002274:	d8811f17 	ldw	r2,1148(sp)
10002278:	1c47883a 	add	r3,r3,r17
1000227c:	d8c12015 	stw	r3,1152(sp)
10002280:	10800044 	addi	r2,r2,1
10002284:	d8811f15 	stw	r2,1148(sp)
10002288:	00c001c4 	movi	r3,7
1000228c:	1880b516 	blt	r3,r2,10002564 <___vfprintf_internal_r+0x42c>
10002290:	42000204 	addi	r8,r8,8
10002294:	d8c12f17 	ldw	r3,1212(sp)
10002298:	1c47883a 	add	r3,r3,r17
1000229c:	d8c12f15 	stw	r3,1212(sp)
100022a0:	80800007 	ldb	r2,0(r16)
100022a4:	1000b626 	beq	r2,zero,10002580 <___vfprintf_internal_r+0x448>
100022a8:	80800044 	addi	r2,r16,1
100022ac:	84000047 	ldb	r16,1(r16)
100022b0:	0027883a 	mov	r19,zero
100022b4:	0039883a 	mov	fp,zero
100022b8:	dcc12b05 	stb	r19,1196(sp)
100022bc:	d8012785 	stb	zero,1182(sp)
100022c0:	027fffc4 	movi	r9,-1
100022c4:	d8012e15 	stw	zero,1208(sp)
100022c8:	04401604 	movi	r17,88
100022cc:	04800244 	movi	r18,9
100022d0:	da012a15 	stw	r8,1192(sp)
100022d4:	e027883a 	mov	r19,fp
100022d8:	17000044 	addi	fp,r2,1
100022dc:	80bff804 	addi	r2,r16,-32
100022e0:	88831236 	bltu	r17,r2,10002f2c <___vfprintf_internal_r+0xdf4>
100022e4:	100490ba 	slli	r2,r2,2
100022e8:	01040034 	movhi	r4,4096
100022ec:	2108bf04 	addi	r4,r4,8956
100022f0:	1105883a 	add	r2,r2,r4
100022f4:	10800017 	ldw	r2,0(r2)
100022f8:	1000683a 	jmp	r2
100022fc:	10002e48 	cmpgei	zero,r2,185
10002300:	10002f2c 	andhi	zero,r2,188
10002304:	10002f2c 	andhi	zero,r2,188
10002308:	10002e64 	muli	zero,r2,185
1000230c:	10002f2c 	andhi	zero,r2,188
10002310:	10002f2c 	andhi	zero,r2,188
10002314:	10002f2c 	andhi	zero,r2,188
10002318:	10002f2c 	andhi	zero,r2,188
1000231c:	10002f2c 	andhi	zero,r2,188
10002320:	10002f2c 	andhi	zero,r2,188
10002324:	10002e74 	orhi	zero,r2,185
10002328:	10002e9c 	xori	zero,r2,186
1000232c:	10002f2c 	andhi	zero,r2,188
10002330:	100025b8 	rdprs	zero,r2,150
10002334:	100025c8 	cmpgei	zero,r2,151
10002338:	10002f2c 	andhi	zero,r2,188
1000233c:	10002618 	cmpnei	zero,r2,152
10002340:	10002628 	cmpgeui	zero,r2,152
10002344:	10002628 	cmpgeui	zero,r2,152
10002348:	10002628 	cmpgeui	zero,r2,152
1000234c:	10002628 	cmpgeui	zero,r2,152
10002350:	10002628 	cmpgeui	zero,r2,152
10002354:	10002628 	cmpgeui	zero,r2,152
10002358:	10002628 	cmpgeui	zero,r2,152
1000235c:	10002628 	cmpgeui	zero,r2,152
10002360:	10002628 	cmpgeui	zero,r2,152
10002364:	10002f2c 	andhi	zero,r2,188
10002368:	10002f2c 	andhi	zero,r2,188
1000236c:	10002f2c 	andhi	zero,r2,188
10002370:	10002f2c 	andhi	zero,r2,188
10002374:	10002f2c 	andhi	zero,r2,188
10002378:	10002f2c 	andhi	zero,r2,188
1000237c:	10002f2c 	andhi	zero,r2,188
10002380:	10002f2c 	andhi	zero,r2,188
10002384:	10002f2c 	andhi	zero,r2,188
10002388:	10002f2c 	andhi	zero,r2,188
1000238c:	1000266c 	andhi	zero,r2,153
10002390:	10002a8c 	andi	zero,r2,170
10002394:	10002f2c 	andhi	zero,r2,188
10002398:	10002a8c 	andi	zero,r2,170
1000239c:	10002f2c 	andhi	zero,r2,188
100023a0:	10002f2c 	andhi	zero,r2,188
100023a4:	10002f2c 	andhi	zero,r2,188
100023a8:	10002f2c 	andhi	zero,r2,188
100023ac:	10002b34 	orhi	zero,r2,172
100023b0:	10002f2c 	andhi	zero,r2,188
100023b4:	10002f2c 	andhi	zero,r2,188
100023b8:	10002b44 	addi	zero,r2,173
100023bc:	10002f2c 	andhi	zero,r2,188
100023c0:	10002f2c 	andhi	zero,r2,188
100023c4:	10002f2c 	andhi	zero,r2,188
100023c8:	10002f2c 	andhi	zero,r2,188
100023cc:	10002f2c 	andhi	zero,r2,188
100023d0:	10002b88 	cmpgei	zero,r2,174
100023d4:	10002f2c 	andhi	zero,r2,188
100023d8:	10002f2c 	andhi	zero,r2,188
100023dc:	10002bc0 	call	110002bc <_gp+0xfe7564>
100023e0:	10002f2c 	andhi	zero,r2,188
100023e4:	10002f2c 	andhi	zero,r2,188
100023e8:	10002f2c 	andhi	zero,r2,188
100023ec:	10002f2c 	andhi	zero,r2,188
100023f0:	10002f2c 	andhi	zero,r2,188
100023f4:	10002f2c 	andhi	zero,r2,188
100023f8:	10002f2c 	andhi	zero,r2,188
100023fc:	10002f2c 	andhi	zero,r2,188
10002400:	10002f2c 	andhi	zero,r2,188
10002404:	10002f2c 	andhi	zero,r2,188
10002408:	10002dfc 	xorhi	zero,r2,183
1000240c:	10002da8 	cmpgeui	zero,r2,182
10002410:	10002a8c 	andi	zero,r2,170
10002414:	10002a8c 	andi	zero,r2,170
10002418:	10002a8c 	andi	zero,r2,170
1000241c:	10002dec 	andhi	zero,r2,183
10002420:	10002da8 	cmpgeui	zero,r2,182
10002424:	10002f2c 	andhi	zero,r2,188
10002428:	10002f2c 	andhi	zero,r2,188
1000242c:	10002cc4 	addi	zero,r2,179
10002430:	10002f2c 	andhi	zero,r2,188
10002434:	10002cdc 	xori	zero,r2,179
10002438:	10002d1c 	xori	zero,r2,180
1000243c:	10002d5c 	xori	zero,r2,181
10002440:	10002c28 	cmpgeui	zero,r2,176
10002444:	10002f2c 	andhi	zero,r2,188
10002448:	10002eb0 	cmpltui	zero,r2,186
1000244c:	10002f2c 	andhi	zero,r2,188
10002450:	10002c38 	rdprs	zero,r2,176
10002454:	10002f2c 	andhi	zero,r2,188
10002458:	10002f2c 	andhi	zero,r2,188
1000245c:	10002c78 	rdprs	zero,r2,177
10002460:	d9412a17 	ldw	r5,1192(sp)
10002464:	8163c83a 	sub	r17,r16,r5
10002468:	003f7d06 	br	10002260 <__alt_data_end+0xf8002260>
1000246c:	b809883a 	mov	r4,r23
10002470:	b00b883a 	mov	r5,r22
10002474:	00042580 	call	10004258 <__swsetup_r>
10002478:	10002d1e 	bne	r2,zero,10002530 <___vfprintf_internal_r+0x3f8>
1000247c:	b0c0030b 	ldhu	r3,12(r22)
10002480:	01000284 	movi	r4,10
10002484:	1805883a 	mov	r2,r3
10002488:	1080068c 	andi	r2,r2,26
1000248c:	113f541e 	bne	r2,r4,100021e0 <__alt_data_end+0xf80021e0>
10002490:	b080038b 	ldhu	r2,14(r22)
10002494:	113fffcc 	andi	r4,r2,65535
10002498:	2120001c 	xori	r4,r4,32768
1000249c:	21200004 	addi	r4,r4,-32768
100024a0:	203f4f16 	blt	r4,zero,100021e0 <__alt_data_end+0xf80021e0>
100024a4:	b2c01917 	ldw	r11,100(r22)
100024a8:	b2800717 	ldw	r10,28(r22)
100024ac:	b2400917 	ldw	r9,36(r22)
100024b0:	d9812a17 	ldw	r6,1192(sp)
100024b4:	d9c12d17 	ldw	r7,1204(sp)
100024b8:	02010004 	movi	r8,1024
100024bc:	18ffff4c 	andi	r3,r3,65533
100024c0:	d881078d 	sth	r2,1054(sp)
100024c4:	b809883a 	mov	r4,r23
100024c8:	d8800404 	addi	r2,sp,16
100024cc:	d9410404 	addi	r5,sp,1040
100024d0:	d8c1070d 	sth	r3,1052(sp)
100024d4:	dac11d15 	stw	r11,1140(sp)
100024d8:	da810b15 	stw	r10,1068(sp)
100024dc:	da410d15 	stw	r9,1076(sp)
100024e0:	d8810415 	stw	r2,1040(sp)
100024e4:	d8810815 	stw	r2,1056(sp)
100024e8:	da010615 	stw	r8,1048(sp)
100024ec:	da010915 	stw	r8,1060(sp)
100024f0:	d8010a15 	stw	zero,1064(sp)
100024f4:	00021380 	call	10002138 <___vfprintf_internal_r>
100024f8:	1021883a 	mov	r16,r2
100024fc:	10000416 	blt	r2,zero,10002510 <___vfprintf_internal_r+0x3d8>
10002500:	b809883a 	mov	r4,r23
10002504:	d9410404 	addi	r5,sp,1040
10002508:	0005cd80 	call	10005cd8 <_fflush_r>
1000250c:	1007301e 	bne	r2,zero,100041d0 <___vfprintf_internal_r+0x2098>
10002510:	d881070b 	ldhu	r2,1052(sp)
10002514:	1080100c 	andi	r2,r2,64
10002518:	10000326 	beq	r2,zero,10002528 <___vfprintf_internal_r+0x3f0>
1000251c:	b080030b 	ldhu	r2,12(r22)
10002520:	10801014 	ori	r2,r2,64
10002524:	b080030d 	sth	r2,12(r22)
10002528:	8005883a 	mov	r2,r16
1000252c:	00000106 	br	10002534 <___vfprintf_internal_r+0x3fc>
10002530:	00bfffc4 	movi	r2,-1
10002534:	dfc14917 	ldw	ra,1316(sp)
10002538:	df014817 	ldw	fp,1312(sp)
1000253c:	ddc14717 	ldw	r23,1308(sp)
10002540:	dd814617 	ldw	r22,1304(sp)
10002544:	dd414517 	ldw	r21,1300(sp)
10002548:	dd014417 	ldw	r20,1296(sp)
1000254c:	dcc14317 	ldw	r19,1292(sp)
10002550:	dc814217 	ldw	r18,1288(sp)
10002554:	dc414117 	ldw	r17,1284(sp)
10002558:	dc014017 	ldw	r16,1280(sp)
1000255c:	dec14a04 	addi	sp,sp,1320
10002560:	f800283a 	ret
10002564:	b809883a 	mov	r4,r23
10002568:	b00b883a 	mov	r5,r22
1000256c:	d9811e04 	addi	r6,sp,1144
10002570:	00095780 	call	10009578 <__sprint_r>
10002574:	1000081e 	bne	r2,zero,10002598 <___vfprintf_internal_r+0x460>
10002578:	da000404 	addi	r8,sp,16
1000257c:	003f4506 	br	10002294 <__alt_data_end+0xf8002294>
10002580:	d8812017 	ldw	r2,1152(sp)
10002584:	10000426 	beq	r2,zero,10002598 <___vfprintf_internal_r+0x460>
10002588:	b809883a 	mov	r4,r23
1000258c:	b00b883a 	mov	r5,r22
10002590:	d9811e04 	addi	r6,sp,1144
10002594:	00095780 	call	10009578 <__sprint_r>
10002598:	b080030b 	ldhu	r2,12(r22)
1000259c:	1080100c 	andi	r2,r2,64
100025a0:	103fe31e 	bne	r2,zero,10002530 <__alt_data_end+0xf8002530>
100025a4:	d8812f17 	ldw	r2,1212(sp)
100025a8:	003fe206 	br	10002534 <__alt_data_end+0xf8002534>
100025ac:	b809883a 	mov	r4,r23
100025b0:	00062940 	call	10006294 <__sinit>
100025b4:	003ef806 	br	10002198 <__alt_data_end+0xf8002198>
100025b8:	e005883a 	mov	r2,fp
100025bc:	9cc00114 	ori	r19,r19,4
100025c0:	e4000007 	ldb	r16,0(fp)
100025c4:	003f4406 	br	100022d8 <__alt_data_end+0xf80022d8>
100025c8:	e4000007 	ldb	r16,0(fp)
100025cc:	01000a84 	movi	r4,42
100025d0:	e0800044 	addi	r2,fp,1
100025d4:	8106f626 	beq	r16,r4,100041b0 <___vfprintf_internal_r+0x2078>
100025d8:	857ff404 	addi	r21,r16,-48
100025dc:	1039883a 	mov	fp,r2
100025e0:	0013883a 	mov	r9,zero
100025e4:	957f3d36 	bltu	r18,r21,100022dc <__alt_data_end+0xf80022dc>
100025e8:	0009883a 	mov	r4,zero
100025ec:	01400284 	movi	r5,10
100025f0:	000c0ac0 	call	1000c0ac <__mulsi3>
100025f4:	e4000007 	ldb	r16,0(fp)
100025f8:	a889883a 	add	r4,r21,r2
100025fc:	e7000044 	addi	fp,fp,1
10002600:	857ff404 	addi	r21,r16,-48
10002604:	957ff92e 	bgeu	r18,r21,100025ec <__alt_data_end+0xf80025ec>
10002608:	2013883a 	mov	r9,r4
1000260c:	203f330e 	bge	r4,zero,100022dc <__alt_data_end+0xf80022dc>
10002610:	027fffc4 	movi	r9,-1
10002614:	003f3106 	br	100022dc <__alt_data_end+0xf80022dc>
10002618:	9cc02014 	ori	r19,r19,128
1000261c:	e005883a 	mov	r2,fp
10002620:	e4000007 	ldb	r16,0(fp)
10002624:	003f2c06 	br	100022d8 <__alt_data_end+0xf80022d8>
10002628:	857ff404 	addi	r21,r16,-48
1000262c:	d8012e15 	stw	zero,1208(sp)
10002630:	e021883a 	mov	r16,fp
10002634:	0009883a 	mov	r4,zero
10002638:	da412c15 	stw	r9,1200(sp)
1000263c:	01400284 	movi	r5,10
10002640:	000c0ac0 	call	1000c0ac <__mulsi3>
10002644:	81400007 	ldb	r5,0(r16)
10002648:	1549883a 	add	r4,r2,r21
1000264c:	e7000044 	addi	fp,fp,1
10002650:	2d7ff404 	addi	r21,r5,-48
10002654:	e021883a 	mov	r16,fp
10002658:	957ff82e 	bgeu	r18,r21,1000263c <__alt_data_end+0xf800263c>
1000265c:	2821883a 	mov	r16,r5
10002660:	d9012e15 	stw	r4,1208(sp)
10002664:	da412c17 	ldw	r9,1200(sp)
10002668:	003f1c06 	br	100022dc <__alt_data_end+0xf80022dc>
1000266c:	da012a17 	ldw	r8,1192(sp)
10002670:	df012a15 	stw	fp,1192(sp)
10002674:	9839883a 	mov	fp,r19
10002678:	dcc12b03 	ldbu	r19,1196(sp)
1000267c:	e7000414 	ori	fp,fp,16
10002680:	e080080c 	andi	r2,fp,32
10002684:	dcc12785 	stb	r19,1182(sp)
10002688:	d8c12d17 	ldw	r3,1204(sp)
1000268c:	1001ce26 	beq	r2,zero,10002dc8 <___vfprintf_internal_r+0xc90>
10002690:	d9012d17 	ldw	r4,1204(sp)
10002694:	18800117 	ldw	r2,4(r3)
10002698:	1c800017 	ldw	r18,0(r3)
1000269c:	21000204 	addi	r4,r4,8
100026a0:	d9012d15 	stw	r4,1204(sp)
100026a4:	102b883a 	mov	r21,r2
100026a8:	10044916 	blt	r2,zero,100037d0 <___vfprintf_internal_r+0x1698>
100026ac:	dcc12783 	ldbu	r19,1182(sp)
100026b0:	da413215 	stw	r9,1224(sp)
100026b4:	00800044 	movi	r2,1
100026b8:	9546b03a 	or	r3,r18,r21
100026bc:	48000216 	blt	r9,zero,100026c8 <___vfprintf_internal_r+0x590>
100026c0:	013fdfc4 	movi	r4,-129
100026c4:	e138703a 	and	fp,fp,r4
100026c8:	1802251e 	bne	r3,zero,10002f60 <___vfprintf_internal_r+0xe28>
100026cc:	48031726 	beq	r9,zero,1000332c <___vfprintf_internal_r+0x11f4>
100026d0:	10803fcc 	andi	r2,r2,255
100026d4:	00c00044 	movi	r3,1
100026d8:	10c24526 	beq	r2,r3,10002ff0 <___vfprintf_internal_r+0xeb8>
100026dc:	00c00084 	movi	r3,2
100026e0:	10c33426 	beq	r2,r3,100033b4 <___vfprintf_internal_r+0x127c>
100026e4:	d8c10e04 	addi	r3,sp,1080
100026e8:	9008d0fa 	srli	r4,r18,3
100026ec:	a80a977a 	slli	r5,r21,29
100026f0:	a82ad0fa 	srli	r21,r21,3
100026f4:	948001cc 	andi	r18,r18,7
100026f8:	90800c04 	addi	r2,r18,48
100026fc:	18ffffc4 	addi	r3,r3,-1
10002700:	2924b03a 	or	r18,r5,r4
10002704:	18800005 	stb	r2,0(r3)
10002708:	9548b03a 	or	r4,r18,r21
1000270c:	203ff61e 	bne	r4,zero,100026e8 <__alt_data_end+0xf80026e8>
10002710:	e100004c 	andi	r4,fp,1
10002714:	d8c13115 	stw	r3,1220(sp)
10002718:	20039a1e 	bne	r4,zero,10003584 <___vfprintf_internal_r+0x144c>
1000271c:	d8812817 	ldw	r2,1184(sp)
10002720:	10e3c83a 	sub	r17,r2,r3
10002724:	8805883a 	mov	r2,r17
10002728:	8a40010e 	bge	r17,r9,10002730 <___vfprintf_internal_r+0x5f8>
1000272c:	4805883a 	mov	r2,r9
10002730:	d8812b15 	stw	r2,1196(sp)
10002734:	d8013415 	stw	zero,1232(sp)
10002738:	98803fcc 	andi	r2,r19,255
1000273c:	1080201c 	xori	r2,r2,128
10002740:	10bfe004 	addi	r2,r2,-128
10002744:	10000326 	beq	r2,zero,10002754 <___vfprintf_internal_r+0x61c>
10002748:	d8c12b17 	ldw	r3,1196(sp)
1000274c:	18c00044 	addi	r3,r3,1
10002750:	d8c12b15 	stw	r3,1196(sp)
10002754:	e0c0008c 	andi	r3,fp,2
10002758:	d8c12c15 	stw	r3,1200(sp)
1000275c:	18000326 	beq	r3,zero,1000276c <___vfprintf_internal_r+0x634>
10002760:	d8c12b17 	ldw	r3,1196(sp)
10002764:	18c00084 	addi	r3,r3,2
10002768:	d8c12b15 	stw	r3,1196(sp)
1000276c:	e0c0210c 	andi	r3,fp,132
10002770:	d8c13015 	stw	r3,1216(sp)
10002774:	1801f81e 	bne	r3,zero,10002f58 <___vfprintf_internal_r+0xe20>
10002778:	d9012e17 	ldw	r4,1208(sp)
1000277c:	d8c12b17 	ldw	r3,1196(sp)
10002780:	20ebc83a 	sub	r21,r4,r3
10002784:	0541f40e 	bge	zero,r21,10002f58 <___vfprintf_internal_r+0xe20>
10002788:	02400404 	movi	r9,16
1000278c:	d8c12017 	ldw	r3,1152(sp)
10002790:	d8811f17 	ldw	r2,1148(sp)
10002794:	4d45750e 	bge	r9,r21,10003d6c <___vfprintf_internal_r+0x1c34>
10002798:	01440074 	movhi	r5,4097
1000279c:	29402284 	addi	r5,r5,138
100027a0:	d9413615 	stw	r5,1240(sp)
100027a4:	4827883a 	mov	r19,r9
100027a8:	048001c4 	movi	r18,7
100027ac:	00000306 	br	100027bc <___vfprintf_internal_r+0x684>
100027b0:	ad7ffc04 	addi	r21,r21,-16
100027b4:	42000204 	addi	r8,r8,8
100027b8:	9d40130e 	bge	r19,r21,10002808 <___vfprintf_internal_r+0x6d0>
100027bc:	01040074 	movhi	r4,4097
100027c0:	18c00404 	addi	r3,r3,16
100027c4:	10800044 	addi	r2,r2,1
100027c8:	21002284 	addi	r4,r4,138
100027cc:	41000015 	stw	r4,0(r8)
100027d0:	44c00115 	stw	r19,4(r8)
100027d4:	d8c12015 	stw	r3,1152(sp)
100027d8:	d8811f15 	stw	r2,1148(sp)
100027dc:	90bff40e 	bge	r18,r2,100027b0 <__alt_data_end+0xf80027b0>
100027e0:	b809883a 	mov	r4,r23
100027e4:	b00b883a 	mov	r5,r22
100027e8:	d9811e04 	addi	r6,sp,1144
100027ec:	00095780 	call	10009578 <__sprint_r>
100027f0:	103f691e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100027f4:	ad7ffc04 	addi	r21,r21,-16
100027f8:	d8c12017 	ldw	r3,1152(sp)
100027fc:	d8811f17 	ldw	r2,1148(sp)
10002800:	da000404 	addi	r8,sp,16
10002804:	9d7fed16 	blt	r19,r21,100027bc <__alt_data_end+0xf80027bc>
10002808:	d9413617 	ldw	r5,1240(sp)
1000280c:	a8c7883a 	add	r3,r21,r3
10002810:	10800044 	addi	r2,r2,1
10002814:	41400015 	stw	r5,0(r8)
10002818:	45400115 	stw	r21,4(r8)
1000281c:	d8c12015 	stw	r3,1152(sp)
10002820:	d8811f15 	stw	r2,1148(sp)
10002824:	010001c4 	movi	r4,7
10002828:	20832b16 	blt	r4,r2,100034d8 <___vfprintf_internal_r+0x13a0>
1000282c:	d8812787 	ldb	r2,1182(sp)
10002830:	42000204 	addi	r8,r8,8
10002834:	10000c26 	beq	r2,zero,10002868 <___vfprintf_internal_r+0x730>
10002838:	d8811f17 	ldw	r2,1148(sp)
1000283c:	d9012784 	addi	r4,sp,1182
10002840:	18c00044 	addi	r3,r3,1
10002844:	10800044 	addi	r2,r2,1
10002848:	41000015 	stw	r4,0(r8)
1000284c:	01000044 	movi	r4,1
10002850:	41000115 	stw	r4,4(r8)
10002854:	d8c12015 	stw	r3,1152(sp)
10002858:	d8811f15 	stw	r2,1148(sp)
1000285c:	010001c4 	movi	r4,7
10002860:	2082c416 	blt	r4,r2,10003374 <___vfprintf_internal_r+0x123c>
10002864:	42000204 	addi	r8,r8,8
10002868:	d8812c17 	ldw	r2,1200(sp)
1000286c:	10000c26 	beq	r2,zero,100028a0 <___vfprintf_internal_r+0x768>
10002870:	d8811f17 	ldw	r2,1148(sp)
10002874:	d9012704 	addi	r4,sp,1180
10002878:	18c00084 	addi	r3,r3,2
1000287c:	10800044 	addi	r2,r2,1
10002880:	41000015 	stw	r4,0(r8)
10002884:	01000084 	movi	r4,2
10002888:	41000115 	stw	r4,4(r8)
1000288c:	d8c12015 	stw	r3,1152(sp)
10002890:	d8811f15 	stw	r2,1148(sp)
10002894:	010001c4 	movi	r4,7
10002898:	2082be16 	blt	r4,r2,10003394 <___vfprintf_internal_r+0x125c>
1000289c:	42000204 	addi	r8,r8,8
100028a0:	d9013017 	ldw	r4,1216(sp)
100028a4:	00802004 	movi	r2,128
100028a8:	20822026 	beq	r4,r2,1000312c <___vfprintf_internal_r+0xff4>
100028ac:	d9413217 	ldw	r5,1224(sp)
100028b0:	2c67c83a 	sub	r19,r5,r17
100028b4:	04c0260e 	bge	zero,r19,10002950 <___vfprintf_internal_r+0x818>
100028b8:	05400404 	movi	r21,16
100028bc:	d8811f17 	ldw	r2,1148(sp)
100028c0:	acc4720e 	bge	r21,r19,10003a8c <___vfprintf_internal_r+0x1954>
100028c4:	01440074 	movhi	r5,4097
100028c8:	29401e84 	addi	r5,r5,122
100028cc:	d9412c15 	stw	r5,1200(sp)
100028d0:	048001c4 	movi	r18,7
100028d4:	00000306 	br	100028e4 <___vfprintf_internal_r+0x7ac>
100028d8:	9cfffc04 	addi	r19,r19,-16
100028dc:	42000204 	addi	r8,r8,8
100028e0:	acc0110e 	bge	r21,r19,10002928 <___vfprintf_internal_r+0x7f0>
100028e4:	18c00404 	addi	r3,r3,16
100028e8:	10800044 	addi	r2,r2,1
100028ec:	45000015 	stw	r20,0(r8)
100028f0:	45400115 	stw	r21,4(r8)
100028f4:	d8c12015 	stw	r3,1152(sp)
100028f8:	d8811f15 	stw	r2,1148(sp)
100028fc:	90bff60e 	bge	r18,r2,100028d8 <__alt_data_end+0xf80028d8>
10002900:	b809883a 	mov	r4,r23
10002904:	b00b883a 	mov	r5,r22
10002908:	d9811e04 	addi	r6,sp,1144
1000290c:	00095780 	call	10009578 <__sprint_r>
10002910:	103f211e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10002914:	9cfffc04 	addi	r19,r19,-16
10002918:	d8c12017 	ldw	r3,1152(sp)
1000291c:	d8811f17 	ldw	r2,1148(sp)
10002920:	da000404 	addi	r8,sp,16
10002924:	acffef16 	blt	r21,r19,100028e4 <__alt_data_end+0xf80028e4>
10002928:	d9012c17 	ldw	r4,1200(sp)
1000292c:	1cc7883a 	add	r3,r3,r19
10002930:	10800044 	addi	r2,r2,1
10002934:	41000015 	stw	r4,0(r8)
10002938:	44c00115 	stw	r19,4(r8)
1000293c:	d8c12015 	stw	r3,1152(sp)
10002940:	d8811f15 	stw	r2,1148(sp)
10002944:	010001c4 	movi	r4,7
10002948:	20828216 	blt	r4,r2,10003354 <___vfprintf_internal_r+0x121c>
1000294c:	42000204 	addi	r8,r8,8
10002950:	e080400c 	andi	r2,fp,256
10002954:	1001ac1e 	bne	r2,zero,10003008 <___vfprintf_internal_r+0xed0>
10002958:	d8811f17 	ldw	r2,1148(sp)
1000295c:	d9413117 	ldw	r5,1220(sp)
10002960:	1c47883a 	add	r3,r3,r17
10002964:	10800044 	addi	r2,r2,1
10002968:	41400015 	stw	r5,0(r8)
1000296c:	44400115 	stw	r17,4(r8)
10002970:	d8c12015 	stw	r3,1152(sp)
10002974:	d8811f15 	stw	r2,1148(sp)
10002978:	010001c4 	movi	r4,7
1000297c:	20825d16 	blt	r4,r2,100032f4 <___vfprintf_internal_r+0x11bc>
10002980:	42000204 	addi	r8,r8,8
10002984:	e080010c 	andi	r2,fp,4
10002988:	10003126 	beq	r2,zero,10002a50 <___vfprintf_internal_r+0x918>
1000298c:	d8812e17 	ldw	r2,1208(sp)
10002990:	d9012b17 	ldw	r4,1196(sp)
10002994:	1121c83a 	sub	r16,r2,r4
10002998:	04002d0e 	bge	zero,r16,10002a50 <___vfprintf_internal_r+0x918>
1000299c:	04400404 	movi	r17,16
100029a0:	d8811f17 	ldw	r2,1148(sp)
100029a4:	8c05340e 	bge	r17,r16,10003e78 <___vfprintf_internal_r+0x1d40>
100029a8:	01040074 	movhi	r4,4097
100029ac:	21002284 	addi	r4,r4,138
100029b0:	d9013615 	stw	r4,1240(sp)
100029b4:	048001c4 	movi	r18,7
100029b8:	00000306 	br	100029c8 <___vfprintf_internal_r+0x890>
100029bc:	843ffc04 	addi	r16,r16,-16
100029c0:	42000204 	addi	r8,r8,8
100029c4:	8c00130e 	bge	r17,r16,10002a14 <___vfprintf_internal_r+0x8dc>
100029c8:	01440074 	movhi	r5,4097
100029cc:	18c00404 	addi	r3,r3,16
100029d0:	10800044 	addi	r2,r2,1
100029d4:	29402284 	addi	r5,r5,138
100029d8:	41400015 	stw	r5,0(r8)
100029dc:	44400115 	stw	r17,4(r8)
100029e0:	d8c12015 	stw	r3,1152(sp)
100029e4:	d8811f15 	stw	r2,1148(sp)
100029e8:	90bff40e 	bge	r18,r2,100029bc <__alt_data_end+0xf80029bc>
100029ec:	b809883a 	mov	r4,r23
100029f0:	b00b883a 	mov	r5,r22
100029f4:	d9811e04 	addi	r6,sp,1144
100029f8:	00095780 	call	10009578 <__sprint_r>
100029fc:	103ee61e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10002a00:	843ffc04 	addi	r16,r16,-16
10002a04:	d8c12017 	ldw	r3,1152(sp)
10002a08:	d8811f17 	ldw	r2,1148(sp)
10002a0c:	da000404 	addi	r8,sp,16
10002a10:	8c3fed16 	blt	r17,r16,100029c8 <__alt_data_end+0xf80029c8>
10002a14:	d9013617 	ldw	r4,1240(sp)
10002a18:	1c07883a 	add	r3,r3,r16
10002a1c:	10800044 	addi	r2,r2,1
10002a20:	41000015 	stw	r4,0(r8)
10002a24:	44000115 	stw	r16,4(r8)
10002a28:	d8c12015 	stw	r3,1152(sp)
10002a2c:	d8811f15 	stw	r2,1148(sp)
10002a30:	010001c4 	movi	r4,7
10002a34:	2080060e 	bge	r4,r2,10002a50 <___vfprintf_internal_r+0x918>
10002a38:	b809883a 	mov	r4,r23
10002a3c:	b00b883a 	mov	r5,r22
10002a40:	d9811e04 	addi	r6,sp,1144
10002a44:	00095780 	call	10009578 <__sprint_r>
10002a48:	103ed31e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10002a4c:	d8c12017 	ldw	r3,1152(sp)
10002a50:	df012b17 	ldw	fp,1196(sp)
10002a54:	d9412e17 	ldw	r5,1208(sp)
10002a58:	e140010e 	bge	fp,r5,10002a60 <___vfprintf_internal_r+0x928>
10002a5c:	2839883a 	mov	fp,r5
10002a60:	d8812f17 	ldw	r2,1212(sp)
10002a64:	1705883a 	add	r2,r2,fp
10002a68:	d8812f15 	stw	r2,1212(sp)
10002a6c:	1802291e 	bne	r3,zero,10003314 <___vfprintf_internal_r+0x11dc>
10002a70:	d8c12a17 	ldw	r3,1192(sp)
10002a74:	d8011f15 	stw	zero,1148(sp)
10002a78:	da000404 	addi	r8,sp,16
10002a7c:	18800007 	ldb	r2,0(r3)
10002a80:	103ded1e 	bne	r2,zero,10002238 <__alt_data_end+0xf8002238>
10002a84:	dc012a17 	ldw	r16,1192(sp)
10002a88:	003e0506 	br	100022a0 <__alt_data_end+0xf80022a0>
10002a8c:	d9012d17 	ldw	r4,1204(sp)
10002a90:	d9412d17 	ldw	r5,1204(sp)
10002a94:	da012a17 	ldw	r8,1192(sp)
10002a98:	21000017 	ldw	r4,0(r4)
10002a9c:	29400117 	ldw	r5,4(r5)
10002aa0:	df012a15 	stw	fp,1192(sp)
10002aa4:	9839883a 	mov	fp,r19
10002aa8:	dcc12b03 	ldbu	r19,1196(sp)
10002aac:	d9013715 	stw	r4,1244(sp)
10002ab0:	d9413915 	stw	r5,1252(sp)
10002ab4:	da013f15 	stw	r8,1276(sp)
10002ab8:	da413e15 	stw	r9,1272(sp)
10002abc:	dcc12785 	stb	r19,1182(sp)
10002ac0:	00091d40 	call	100091d4 <__fpclassifyd>
10002ac4:	d8c12d17 	ldw	r3,1204(sp)
10002ac8:	04400044 	movi	r17,1
10002acc:	da013f17 	ldw	r8,1276(sp)
10002ad0:	1c800204 	addi	r18,r3,8
10002ad4:	da413e17 	ldw	r9,1272(sp)
10002ad8:	d9013717 	ldw	r4,1244(sp)
10002adc:	d9413917 	ldw	r5,1252(sp)
10002ae0:	1443451e 	bne	r2,r17,100037f8 <___vfprintf_internal_r+0x16c0>
10002ae4:	000d883a 	mov	r6,zero
10002ae8:	000f883a 	mov	r7,zero
10002aec:	000d4540 	call	1000d454 <__ledf2>
10002af0:	da013f17 	ldw	r8,1276(sp)
10002af4:	1004fe16 	blt	r2,zero,10003ef0 <___vfprintf_internal_r+0x1db8>
10002af8:	dcc12783 	ldbu	r19,1182(sp)
10002afc:	008011c4 	movi	r2,71
10002b00:	14045d0e 	bge	r2,r16,10003c78 <___vfprintf_internal_r+0x1b40>
10002b04:	01440074 	movhi	r5,4097
10002b08:	29400f04 	addi	r5,r5,60
10002b0c:	d9413115 	stw	r5,1220(sp)
10002b10:	00c000c4 	movi	r3,3
10002b14:	00bfdfc4 	movi	r2,-129
10002b18:	d8c12b15 	stw	r3,1196(sp)
10002b1c:	e0b8703a 	and	fp,fp,r2
10002b20:	dc812d15 	stw	r18,1204(sp)
10002b24:	1823883a 	mov	r17,r3
10002b28:	d8013215 	stw	zero,1224(sp)
10002b2c:	d8013415 	stw	zero,1232(sp)
10002b30:	003f0106 	br	10002738 <__alt_data_end+0xf8002738>
10002b34:	9cc00214 	ori	r19,r19,8
10002b38:	e005883a 	mov	r2,fp
10002b3c:	e4000007 	ldb	r16,0(fp)
10002b40:	003de506 	br	100022d8 <__alt_data_end+0xf80022d8>
10002b44:	da012a17 	ldw	r8,1192(sp)
10002b48:	df012a15 	stw	fp,1192(sp)
10002b4c:	9f000414 	ori	fp,r19,16
10002b50:	e0c0080c 	andi	r3,fp,32
10002b54:	d8812d17 	ldw	r2,1204(sp)
10002b58:	18007626 	beq	r3,zero,10002d34 <___vfprintf_internal_r+0xbfc>
10002b5c:	d9412d17 	ldw	r5,1204(sp)
10002b60:	14800017 	ldw	r18,0(r2)
10002b64:	15400117 	ldw	r21,4(r2)
10002b68:	29400204 	addi	r5,r5,8
10002b6c:	d9412d15 	stw	r5,1204(sp)
10002b70:	0005883a 	mov	r2,zero
10002b74:	9546b03a 	or	r3,r18,r21
10002b78:	d8012785 	stb	zero,1182(sp)
10002b7c:	da413215 	stw	r9,1224(sp)
10002b80:	0027883a 	mov	r19,zero
10002b84:	003ecd06 	br	100026bc <__alt_data_end+0xf80026bc>
10002b88:	da012a17 	ldw	r8,1192(sp)
10002b8c:	df012a15 	stw	fp,1192(sp)
10002b90:	9f000414 	ori	fp,r19,16
10002b94:	e0c0080c 	andi	r3,fp,32
10002b98:	d8812d17 	ldw	r2,1204(sp)
10002b9c:	18002c26 	beq	r3,zero,10002c50 <___vfprintf_internal_r+0xb18>
10002ba0:	d9012d17 	ldw	r4,1204(sp)
10002ba4:	14800017 	ldw	r18,0(r2)
10002ba8:	15400117 	ldw	r21,4(r2)
10002bac:	21000204 	addi	r4,r4,8
10002bb0:	d9012d15 	stw	r4,1204(sp)
10002bb4:	00800044 	movi	r2,1
10002bb8:	9546b03a 	or	r3,r18,r21
10002bbc:	003fee06 	br	10002b78 <__alt_data_end+0xf8002b78>
10002bc0:	da012a17 	ldw	r8,1192(sp)
10002bc4:	df012a15 	stw	fp,1192(sp)
10002bc8:	9839883a 	mov	fp,r19
10002bcc:	dcc12b03 	ldbu	r19,1196(sp)
10002bd0:	01440074 	movhi	r5,4097
10002bd4:	29401204 	addi	r5,r5,72
10002bd8:	dcc12785 	stb	r19,1182(sp)
10002bdc:	d9413b15 	stw	r5,1260(sp)
10002be0:	e0c0080c 	andi	r3,fp,32
10002be4:	d8812d17 	ldw	r2,1204(sp)
10002be8:	18002e26 	beq	r3,zero,10002ca4 <___vfprintf_internal_r+0xb6c>
10002bec:	d9412d17 	ldw	r5,1204(sp)
10002bf0:	14800017 	ldw	r18,0(r2)
10002bf4:	15400117 	ldw	r21,4(r2)
10002bf8:	29400204 	addi	r5,r5,8
10002bfc:	d9412d15 	stw	r5,1204(sp)
10002c00:	e080004c 	andi	r2,fp,1
10002c04:	10025c26 	beq	r2,zero,10003578 <___vfprintf_internal_r+0x1440>
10002c08:	9546b03a 	or	r3,r18,r21
10002c0c:	18038f26 	beq	r3,zero,10003a4c <___vfprintf_internal_r+0x1914>
10002c10:	00800c04 	movi	r2,48
10002c14:	d8812705 	stb	r2,1180(sp)
10002c18:	dc012745 	stb	r16,1181(sp)
10002c1c:	e7000094 	ori	fp,fp,2
10002c20:	00800084 	movi	r2,2
10002c24:	003fd406 	br	10002b78 <__alt_data_end+0xf8002b78>
10002c28:	9cc00814 	ori	r19,r19,32
10002c2c:	e005883a 	mov	r2,fp
10002c30:	e4000007 	ldb	r16,0(fp)
10002c34:	003da806 	br	100022d8 <__alt_data_end+0xf80022d8>
10002c38:	da012a17 	ldw	r8,1192(sp)
10002c3c:	df012a15 	stw	fp,1192(sp)
10002c40:	9839883a 	mov	fp,r19
10002c44:	e0c0080c 	andi	r3,fp,32
10002c48:	d8812d17 	ldw	r2,1204(sp)
10002c4c:	183fd41e 	bne	r3,zero,10002ba0 <__alt_data_end+0xf8002ba0>
10002c50:	e0c0040c 	andi	r3,fp,16
10002c54:	18035f26 	beq	r3,zero,100039d4 <___vfprintf_internal_r+0x189c>
10002c58:	d9412d17 	ldw	r5,1204(sp)
10002c5c:	14800017 	ldw	r18,0(r2)
10002c60:	002b883a 	mov	r21,zero
10002c64:	29400104 	addi	r5,r5,4
10002c68:	d9412d15 	stw	r5,1204(sp)
10002c6c:	00800044 	movi	r2,1
10002c70:	9007883a 	mov	r3,r18
10002c74:	003fc006 	br	10002b78 <__alt_data_end+0xf8002b78>
10002c78:	da012a17 	ldw	r8,1192(sp)
10002c7c:	df012a15 	stw	fp,1192(sp)
10002c80:	9839883a 	mov	fp,r19
10002c84:	dcc12b03 	ldbu	r19,1196(sp)
10002c88:	01040074 	movhi	r4,4097
10002c8c:	21001704 	addi	r4,r4,92
10002c90:	d9013b15 	stw	r4,1260(sp)
10002c94:	dcc12785 	stb	r19,1182(sp)
10002c98:	e0c0080c 	andi	r3,fp,32
10002c9c:	d8812d17 	ldw	r2,1204(sp)
10002ca0:	183fd21e 	bne	r3,zero,10002bec <__alt_data_end+0xf8002bec>
10002ca4:	e0c0040c 	andi	r3,fp,16
10002ca8:	18035426 	beq	r3,zero,100039fc <___vfprintf_internal_r+0x18c4>
10002cac:	d8c12d17 	ldw	r3,1204(sp)
10002cb0:	14800017 	ldw	r18,0(r2)
10002cb4:	002b883a 	mov	r21,zero
10002cb8:	18c00104 	addi	r3,r3,4
10002cbc:	d8c12d15 	stw	r3,1204(sp)
10002cc0:	003fcf06 	br	10002c00 <__alt_data_end+0xf8002c00>
10002cc4:	e4000007 	ldb	r16,0(fp)
10002cc8:	00801b04 	movi	r2,108
10002ccc:	8083f726 	beq	r16,r2,10003cac <___vfprintf_internal_r+0x1b74>
10002cd0:	9cc00414 	ori	r19,r19,16
10002cd4:	e005883a 	mov	r2,fp
10002cd8:	003d7f06 	br	100022d8 <__alt_data_end+0xf80022d8>
10002cdc:	da012a17 	ldw	r8,1192(sp)
10002ce0:	df012a15 	stw	fp,1192(sp)
10002ce4:	9839883a 	mov	fp,r19
10002ce8:	dcc12b03 	ldbu	r19,1196(sp)
10002cec:	e080080c 	andi	r2,fp,32
10002cf0:	dcc12785 	stb	r19,1182(sp)
10002cf4:	10032226 	beq	r2,zero,10003980 <___vfprintf_internal_r+0x1848>
10002cf8:	d9412d17 	ldw	r5,1204(sp)
10002cfc:	d9012f17 	ldw	r4,1212(sp)
10002d00:	28800017 	ldw	r2,0(r5)
10002d04:	2007d7fa 	srai	r3,r4,31
10002d08:	29400104 	addi	r5,r5,4
10002d0c:	d9412d15 	stw	r5,1204(sp)
10002d10:	11000015 	stw	r4,0(r2)
10002d14:	10c00115 	stw	r3,4(r2)
10002d18:	003d4406 	br	1000222c <__alt_data_end+0xf800222c>
10002d1c:	da012a17 	ldw	r8,1192(sp)
10002d20:	df012a15 	stw	fp,1192(sp)
10002d24:	9839883a 	mov	fp,r19
10002d28:	e0c0080c 	andi	r3,fp,32
10002d2c:	d8812d17 	ldw	r2,1204(sp)
10002d30:	183f8a1e 	bne	r3,zero,10002b5c <__alt_data_end+0xf8002b5c>
10002d34:	e0c0040c 	andi	r3,fp,16
10002d38:	18031c26 	beq	r3,zero,100039ac <___vfprintf_internal_r+0x1874>
10002d3c:	14800017 	ldw	r18,0(r2)
10002d40:	d8812d17 	ldw	r2,1204(sp)
10002d44:	002b883a 	mov	r21,zero
10002d48:	9007883a 	mov	r3,r18
10002d4c:	10800104 	addi	r2,r2,4
10002d50:	d8812d15 	stw	r2,1204(sp)
10002d54:	0005883a 	mov	r2,zero
10002d58:	003f8706 	br	10002b78 <__alt_data_end+0xf8002b78>
10002d5c:	d9412d17 	ldw	r5,1204(sp)
10002d60:	00800c04 	movi	r2,48
10002d64:	d8812705 	stb	r2,1180(sp)
10002d68:	2c800017 	ldw	r18,0(r5)
10002d6c:	00801e04 	movi	r2,120
10002d70:	d8812745 	stb	r2,1181(sp)
10002d74:	00840074 	movhi	r2,4097
10002d78:	10801704 	addi	r2,r2,92
10002d7c:	29400104 	addi	r5,r5,4
10002d80:	da012a17 	ldw	r8,1192(sp)
10002d84:	d8813b15 	stw	r2,1260(sp)
10002d88:	df012a15 	stw	fp,1192(sp)
10002d8c:	002b883a 	mov	r21,zero
10002d90:	9f000094 	ori	fp,r19,2
10002d94:	d9412d15 	stw	r5,1204(sp)
10002d98:	00800084 	movi	r2,2
10002d9c:	04001e04 	movi	r16,120
10002da0:	9007883a 	mov	r3,r18
10002da4:	003f7406 	br	10002b78 <__alt_data_end+0xf8002b78>
10002da8:	da012a17 	ldw	r8,1192(sp)
10002dac:	df012a15 	stw	fp,1192(sp)
10002db0:	9839883a 	mov	fp,r19
10002db4:	dcc12b03 	ldbu	r19,1196(sp)
10002db8:	e080080c 	andi	r2,fp,32
10002dbc:	d8c12d17 	ldw	r3,1204(sp)
10002dc0:	dcc12785 	stb	r19,1182(sp)
10002dc4:	103e321e 	bne	r2,zero,10002690 <__alt_data_end+0xf8002690>
10002dc8:	e080040c 	andi	r2,fp,16
10002dcc:	10031326 	beq	r2,zero,10003a1c <___vfprintf_internal_r+0x18e4>
10002dd0:	1c800017 	ldw	r18,0(r3)
10002dd4:	d9412d17 	ldw	r5,1204(sp)
10002dd8:	902bd7fa 	srai	r21,r18,31
10002ddc:	29400104 	addi	r5,r5,4
10002de0:	d9412d15 	stw	r5,1204(sp)
10002de4:	a805883a 	mov	r2,r21
10002de8:	003e2f06 	br	100026a8 <__alt_data_end+0xf80026a8>
10002dec:	9cc01014 	ori	r19,r19,64
10002df0:	e005883a 	mov	r2,fp
10002df4:	e4000007 	ldb	r16,0(fp)
10002df8:	003d3706 	br	100022d8 <__alt_data_end+0xf80022d8>
10002dfc:	d8c12d17 	ldw	r3,1204(sp)
10002e00:	d9012d17 	ldw	r4,1204(sp)
10002e04:	da012a17 	ldw	r8,1192(sp)
10002e08:	18800017 	ldw	r2,0(r3)
10002e0c:	21000104 	addi	r4,r4,4
10002e10:	00c00044 	movi	r3,1
10002e14:	df012a15 	stw	fp,1192(sp)
10002e18:	d8c12b15 	stw	r3,1196(sp)
10002e1c:	9839883a 	mov	fp,r19
10002e20:	d8012785 	stb	zero,1182(sp)
10002e24:	d8810405 	stb	r2,1040(sp)
10002e28:	d9012d15 	stw	r4,1204(sp)
10002e2c:	1823883a 	mov	r17,r3
10002e30:	d8c10404 	addi	r3,sp,1040
10002e34:	d8013215 	stw	zero,1224(sp)
10002e38:	d8013415 	stw	zero,1232(sp)
10002e3c:	d8c13115 	stw	r3,1220(sp)
10002e40:	0005883a 	mov	r2,zero
10002e44:	003e4306 	br	10002754 <__alt_data_end+0xf8002754>
10002e48:	d8812b07 	ldb	r2,1196(sp)
10002e4c:	1002fc1e 	bne	r2,zero,10003a40 <___vfprintf_internal_r+0x1908>
10002e50:	00c00804 	movi	r3,32
10002e54:	d8c12b05 	stb	r3,1196(sp)
10002e58:	e005883a 	mov	r2,fp
10002e5c:	e4000007 	ldb	r16,0(fp)
10002e60:	003d1d06 	br	100022d8 <__alt_data_end+0xf80022d8>
10002e64:	9cc00054 	ori	r19,r19,1
10002e68:	e005883a 	mov	r2,fp
10002e6c:	e4000007 	ldb	r16,0(fp)
10002e70:	003d1906 	br	100022d8 <__alt_data_end+0xf80022d8>
10002e74:	d9012d17 	ldw	r4,1204(sp)
10002e78:	d9412d17 	ldw	r5,1204(sp)
10002e7c:	21000017 	ldw	r4,0(r4)
10002e80:	28c00104 	addi	r3,r5,4
10002e84:	d9012e15 	stw	r4,1208(sp)
10002e88:	20038c16 	blt	r4,zero,10003cbc <___vfprintf_internal_r+0x1b84>
10002e8c:	d8c12d15 	stw	r3,1204(sp)
10002e90:	e005883a 	mov	r2,fp
10002e94:	e4000007 	ldb	r16,0(fp)
10002e98:	003d0f06 	br	100022d8 <__alt_data_end+0xf80022d8>
10002e9c:	00c00ac4 	movi	r3,43
10002ea0:	d8c12b05 	stb	r3,1196(sp)
10002ea4:	e005883a 	mov	r2,fp
10002ea8:	e4000007 	ldb	r16,0(fp)
10002eac:	003d0a06 	br	100022d8 <__alt_data_end+0xf80022d8>
10002eb0:	d8c12d17 	ldw	r3,1204(sp)
10002eb4:	d9012d17 	ldw	r4,1204(sp)
10002eb8:	da012a17 	ldw	r8,1192(sp)
10002ebc:	18c00017 	ldw	r3,0(r3)
10002ec0:	df012a15 	stw	fp,1192(sp)
10002ec4:	d8012785 	stb	zero,1182(sp)
10002ec8:	d8c13115 	stw	r3,1220(sp)
10002ecc:	9839883a 	mov	fp,r19
10002ed0:	24800104 	addi	r18,r4,4
10002ed4:	1803f726 	beq	r3,zero,10003eb4 <___vfprintf_internal_r+0x1d7c>
10002ed8:	d9013117 	ldw	r4,1220(sp)
10002edc:	48038916 	blt	r9,zero,10003d04 <___vfprintf_internal_r+0x1bcc>
10002ee0:	480d883a 	mov	r6,r9
10002ee4:	000b883a 	mov	r5,zero
10002ee8:	da013f15 	stw	r8,1276(sp)
10002eec:	da413e15 	stw	r9,1272(sp)
10002ef0:	000774c0 	call	1000774c <memchr>
10002ef4:	da013f17 	ldw	r8,1276(sp)
10002ef8:	da413e17 	ldw	r9,1272(sp)
10002efc:	10045926 	beq	r2,zero,10004064 <___vfprintf_internal_r+0x1f2c>
10002f00:	d8c13117 	ldw	r3,1220(sp)
10002f04:	10e3c83a 	sub	r17,r2,r3
10002f08:	4c433516 	blt	r9,r17,10003be0 <___vfprintf_internal_r+0x1aa8>
10002f0c:	8805883a 	mov	r2,r17
10002f10:	88038116 	blt	r17,zero,10003d18 <___vfprintf_internal_r+0x1be0>
10002f14:	dcc12783 	ldbu	r19,1182(sp)
10002f18:	d8812b15 	stw	r2,1196(sp)
10002f1c:	dc812d15 	stw	r18,1204(sp)
10002f20:	d8013215 	stw	zero,1224(sp)
10002f24:	d8013415 	stw	zero,1232(sp)
10002f28:	003e0306 	br	10002738 <__alt_data_end+0xf8002738>
10002f2c:	da012a17 	ldw	r8,1192(sp)
10002f30:	df012a15 	stw	fp,1192(sp)
10002f34:	9839883a 	mov	fp,r19
10002f38:	dcc12b03 	ldbu	r19,1196(sp)
10002f3c:	dcc12785 	stb	r19,1182(sp)
10002f40:	803d8f26 	beq	r16,zero,10002580 <__alt_data_end+0xf8002580>
10002f44:	00c00044 	movi	r3,1
10002f48:	d8c12b15 	stw	r3,1196(sp)
10002f4c:	dc010405 	stb	r16,1040(sp)
10002f50:	d8012785 	stb	zero,1182(sp)
10002f54:	003fb506 	br	10002e2c <__alt_data_end+0xf8002e2c>
10002f58:	d8c12017 	ldw	r3,1152(sp)
10002f5c:	003e3506 	br	10002834 <__alt_data_end+0xf8002834>
10002f60:	10803fcc 	andi	r2,r2,255
10002f64:	00c00044 	movi	r3,1
10002f68:	10fddc1e 	bne	r2,r3,100026dc <__alt_data_end+0xf80026dc>
10002f6c:	a800021e 	bne	r21,zero,10002f78 <___vfprintf_internal_r+0xe40>
10002f70:	00800244 	movi	r2,9
10002f74:	14801e2e 	bgeu	r2,r18,10002ff0 <___vfprintf_internal_r+0xeb8>
10002f78:	dc012b15 	stw	r16,1196(sp)
10002f7c:	dc410e04 	addi	r17,sp,1080
10002f80:	9021883a 	mov	r16,r18
10002f84:	da012c15 	stw	r8,1200(sp)
10002f88:	a825883a 	mov	r18,r21
10002f8c:	482b883a 	mov	r21,r9
10002f90:	8009883a 	mov	r4,r16
10002f94:	900b883a 	mov	r5,r18
10002f98:	01800284 	movi	r6,10
10002f9c:	000f883a 	mov	r7,zero
10002fa0:	000b9640 	call	1000b964 <__umoddi3>
10002fa4:	10800c04 	addi	r2,r2,48
10002fa8:	8c7fffc4 	addi	r17,r17,-1
10002fac:	8009883a 	mov	r4,r16
10002fb0:	900b883a 	mov	r5,r18
10002fb4:	01800284 	movi	r6,10
10002fb8:	000f883a 	mov	r7,zero
10002fbc:	88800005 	stb	r2,0(r17)
10002fc0:	000b3240 	call	1000b324 <__udivdi3>
10002fc4:	1021883a 	mov	r16,r2
10002fc8:	10c4b03a 	or	r2,r2,r3
10002fcc:	1825883a 	mov	r18,r3
10002fd0:	103fef1e 	bne	r2,zero,10002f90 <__alt_data_end+0xf8002f90>
10002fd4:	d9012817 	ldw	r4,1184(sp)
10002fd8:	dc413115 	stw	r17,1220(sp)
10002fdc:	dc012b17 	ldw	r16,1196(sp)
10002fe0:	da012c17 	ldw	r8,1200(sp)
10002fe4:	a813883a 	mov	r9,r21
10002fe8:	2463c83a 	sub	r17,r4,r17
10002fec:	003dcd06 	br	10002724 <__alt_data_end+0xf8002724>
10002ff0:	94800c04 	addi	r18,r18,48
10002ff4:	d8c10dc4 	addi	r3,sp,1079
10002ff8:	dc810dc5 	stb	r18,1079(sp)
10002ffc:	dc413c17 	ldw	r17,1264(sp)
10003000:	d8c13115 	stw	r3,1220(sp)
10003004:	003dc706 	br	10002724 <__alt_data_end+0xf8002724>
10003008:	00801944 	movi	r2,101
1000300c:	1400720e 	bge	r2,r16,100031d8 <___vfprintf_internal_r+0x10a0>
10003010:	d9013717 	ldw	r4,1244(sp)
10003014:	d9413917 	ldw	r5,1252(sp)
10003018:	000d883a 	mov	r6,zero
1000301c:	000f883a 	mov	r7,zero
10003020:	d8c13d15 	stw	r3,1268(sp)
10003024:	da013f15 	stw	r8,1276(sp)
10003028:	000d2f00 	call	1000d2f0 <__eqdf2>
1000302c:	d8c13d17 	ldw	r3,1268(sp)
10003030:	da013f17 	ldw	r8,1276(sp)
10003034:	1000f41e 	bne	r2,zero,10003408 <___vfprintf_internal_r+0x12d0>
10003038:	d8811f17 	ldw	r2,1148(sp)
1000303c:	01040074 	movhi	r4,4097
10003040:	21001e04 	addi	r4,r4,120
10003044:	18c00044 	addi	r3,r3,1
10003048:	10800044 	addi	r2,r2,1
1000304c:	41000015 	stw	r4,0(r8)
10003050:	01000044 	movi	r4,1
10003054:	41000115 	stw	r4,4(r8)
10003058:	d8c12015 	stw	r3,1152(sp)
1000305c:	d8811f15 	stw	r2,1148(sp)
10003060:	010001c4 	movi	r4,7
10003064:	20828d16 	blt	r4,r2,10003a9c <___vfprintf_internal_r+0x1964>
10003068:	42000204 	addi	r8,r8,8
1000306c:	d8812617 	ldw	r2,1176(sp)
10003070:	d9413317 	ldw	r5,1228(sp)
10003074:	11400216 	blt	r2,r5,10003080 <___vfprintf_internal_r+0xf48>
10003078:	e080004c 	andi	r2,fp,1
1000307c:	103e4126 	beq	r2,zero,10002984 <__alt_data_end+0xf8002984>
10003080:	d8813817 	ldw	r2,1248(sp)
10003084:	d9013517 	ldw	r4,1236(sp)
10003088:	d9413817 	ldw	r5,1248(sp)
1000308c:	1887883a 	add	r3,r3,r2
10003090:	d8811f17 	ldw	r2,1148(sp)
10003094:	41000015 	stw	r4,0(r8)
10003098:	41400115 	stw	r5,4(r8)
1000309c:	10800044 	addi	r2,r2,1
100030a0:	d8c12015 	stw	r3,1152(sp)
100030a4:	d8811f15 	stw	r2,1148(sp)
100030a8:	010001c4 	movi	r4,7
100030ac:	20830916 	blt	r4,r2,10003cd4 <___vfprintf_internal_r+0x1b9c>
100030b0:	42000204 	addi	r8,r8,8
100030b4:	d8813317 	ldw	r2,1228(sp)
100030b8:	143fffc4 	addi	r16,r2,-1
100030bc:	043e310e 	bge	zero,r16,10002984 <__alt_data_end+0xf8002984>
100030c0:	04400404 	movi	r17,16
100030c4:	d8811f17 	ldw	r2,1148(sp)
100030c8:	8c007e0e 	bge	r17,r16,100032c4 <___vfprintf_internal_r+0x118c>
100030cc:	01440074 	movhi	r5,4097
100030d0:	29401e84 	addi	r5,r5,122
100030d4:	d9412c15 	stw	r5,1200(sp)
100030d8:	04c001c4 	movi	r19,7
100030dc:	00000306 	br	100030ec <___vfprintf_internal_r+0xfb4>
100030e0:	42000204 	addi	r8,r8,8
100030e4:	843ffc04 	addi	r16,r16,-16
100030e8:	8c00790e 	bge	r17,r16,100032d0 <___vfprintf_internal_r+0x1198>
100030ec:	18c00404 	addi	r3,r3,16
100030f0:	10800044 	addi	r2,r2,1
100030f4:	45000015 	stw	r20,0(r8)
100030f8:	44400115 	stw	r17,4(r8)
100030fc:	d8c12015 	stw	r3,1152(sp)
10003100:	d8811f15 	stw	r2,1148(sp)
10003104:	98bff60e 	bge	r19,r2,100030e0 <__alt_data_end+0xf80030e0>
10003108:	b809883a 	mov	r4,r23
1000310c:	b00b883a 	mov	r5,r22
10003110:	d9811e04 	addi	r6,sp,1144
10003114:	00095780 	call	10009578 <__sprint_r>
10003118:	103d1f1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
1000311c:	d8c12017 	ldw	r3,1152(sp)
10003120:	d8811f17 	ldw	r2,1148(sp)
10003124:	da000404 	addi	r8,sp,16
10003128:	003fee06 	br	100030e4 <__alt_data_end+0xf80030e4>
1000312c:	d9412e17 	ldw	r5,1208(sp)
10003130:	d8812b17 	ldw	r2,1196(sp)
10003134:	28a7c83a 	sub	r19,r5,r2
10003138:	04fddc0e 	bge	zero,r19,100028ac <__alt_data_end+0xf80028ac>
1000313c:	05400404 	movi	r21,16
10003140:	d8811f17 	ldw	r2,1148(sp)
10003144:	acc3870e 	bge	r21,r19,10003f64 <___vfprintf_internal_r+0x1e2c>
10003148:	01440074 	movhi	r5,4097
1000314c:	29401e84 	addi	r5,r5,122
10003150:	d9412c15 	stw	r5,1200(sp)
10003154:	048001c4 	movi	r18,7
10003158:	00000306 	br	10003168 <___vfprintf_internal_r+0x1030>
1000315c:	9cfffc04 	addi	r19,r19,-16
10003160:	42000204 	addi	r8,r8,8
10003164:	acc0110e 	bge	r21,r19,100031ac <___vfprintf_internal_r+0x1074>
10003168:	18c00404 	addi	r3,r3,16
1000316c:	10800044 	addi	r2,r2,1
10003170:	45000015 	stw	r20,0(r8)
10003174:	45400115 	stw	r21,4(r8)
10003178:	d8c12015 	stw	r3,1152(sp)
1000317c:	d8811f15 	stw	r2,1148(sp)
10003180:	90bff60e 	bge	r18,r2,1000315c <__alt_data_end+0xf800315c>
10003184:	b809883a 	mov	r4,r23
10003188:	b00b883a 	mov	r5,r22
1000318c:	d9811e04 	addi	r6,sp,1144
10003190:	00095780 	call	10009578 <__sprint_r>
10003194:	103d001e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003198:	9cfffc04 	addi	r19,r19,-16
1000319c:	d8c12017 	ldw	r3,1152(sp)
100031a0:	d8811f17 	ldw	r2,1148(sp)
100031a4:	da000404 	addi	r8,sp,16
100031a8:	acffef16 	blt	r21,r19,10003168 <__alt_data_end+0xf8003168>
100031ac:	d9012c17 	ldw	r4,1200(sp)
100031b0:	1cc7883a 	add	r3,r3,r19
100031b4:	10800044 	addi	r2,r2,1
100031b8:	41000015 	stw	r4,0(r8)
100031bc:	44c00115 	stw	r19,4(r8)
100031c0:	d8c12015 	stw	r3,1152(sp)
100031c4:	d8811f15 	stw	r2,1148(sp)
100031c8:	010001c4 	movi	r4,7
100031cc:	20817816 	blt	r4,r2,100037b0 <___vfprintf_internal_r+0x1678>
100031d0:	42000204 	addi	r8,r8,8
100031d4:	003db506 	br	100028ac <__alt_data_end+0xf80028ac>
100031d8:	d9413317 	ldw	r5,1228(sp)
100031dc:	00800044 	movi	r2,1
100031e0:	18c00044 	addi	r3,r3,1
100031e4:	11413e0e 	bge	r2,r5,100036e0 <___vfprintf_internal_r+0x15a8>
100031e8:	dc011f17 	ldw	r16,1148(sp)
100031ec:	d8813117 	ldw	r2,1220(sp)
100031f0:	d8c12015 	stw	r3,1152(sp)
100031f4:	84000044 	addi	r16,r16,1
100031f8:	40800015 	stw	r2,0(r8)
100031fc:	00800044 	movi	r2,1
10003200:	40800115 	stw	r2,4(r8)
10003204:	dc011f15 	stw	r16,1148(sp)
10003208:	008001c4 	movi	r2,7
1000320c:	14015616 	blt	r2,r16,10003768 <___vfprintf_internal_r+0x1630>
10003210:	42000204 	addi	r8,r8,8
10003214:	d9013817 	ldw	r4,1248(sp)
10003218:	d9413517 	ldw	r5,1236(sp)
1000321c:	84000044 	addi	r16,r16,1
10003220:	1907883a 	add	r3,r3,r4
10003224:	41400015 	stw	r5,0(r8)
10003228:	41000115 	stw	r4,4(r8)
1000322c:	d8c12015 	stw	r3,1152(sp)
10003230:	dc011f15 	stw	r16,1148(sp)
10003234:	008001c4 	movi	r2,7
10003238:	14015416 	blt	r2,r16,1000378c <___vfprintf_internal_r+0x1654>
1000323c:	44400204 	addi	r17,r8,8
10003240:	d9013717 	ldw	r4,1244(sp)
10003244:	d9413917 	ldw	r5,1252(sp)
10003248:	000d883a 	mov	r6,zero
1000324c:	000f883a 	mov	r7,zero
10003250:	d8c13d15 	stw	r3,1268(sp)
10003254:	000d2f00 	call	1000d2f0 <__eqdf2>
10003258:	d8c13d17 	ldw	r3,1268(sp)
1000325c:	1000a726 	beq	r2,zero,100034fc <___vfprintf_internal_r+0x13c4>
10003260:	d9013317 	ldw	r4,1228(sp)
10003264:	d9413117 	ldw	r5,1220(sp)
10003268:	84000044 	addi	r16,r16,1
1000326c:	20bfffc4 	addi	r2,r4,-1
10003270:	1887883a 	add	r3,r3,r2
10003274:	29000044 	addi	r4,r5,1
10003278:	88800115 	stw	r2,4(r17)
1000327c:	89000015 	stw	r4,0(r17)
10003280:	d8c12015 	stw	r3,1152(sp)
10003284:	dc011f15 	stw	r16,1148(sp)
10003288:	008001c4 	movi	r2,7
1000328c:	14012d16 	blt	r2,r16,10003744 <___vfprintf_internal_r+0x160c>
10003290:	8c400204 	addi	r17,r17,8
10003294:	d9413a17 	ldw	r5,1256(sp)
10003298:	dcc122c4 	addi	r19,sp,1163
1000329c:	84000044 	addi	r16,r16,1
100032a0:	28c7883a 	add	r3,r5,r3
100032a4:	8cc00015 	stw	r19,0(r17)
100032a8:	89400115 	stw	r5,4(r17)
100032ac:	d8c12015 	stw	r3,1152(sp)
100032b0:	dc011f15 	stw	r16,1148(sp)
100032b4:	008001c4 	movi	r2,7
100032b8:	14000e16 	blt	r2,r16,100032f4 <___vfprintf_internal_r+0x11bc>
100032bc:	8a000204 	addi	r8,r17,8
100032c0:	003db006 	br	10002984 <__alt_data_end+0xf8002984>
100032c4:	01040074 	movhi	r4,4097
100032c8:	21001e84 	addi	r4,r4,122
100032cc:	d9012c15 	stw	r4,1200(sp)
100032d0:	d9012c17 	ldw	r4,1200(sp)
100032d4:	1c07883a 	add	r3,r3,r16
100032d8:	44000115 	stw	r16,4(r8)
100032dc:	41000015 	stw	r4,0(r8)
100032e0:	10800044 	addi	r2,r2,1
100032e4:	d8c12015 	stw	r3,1152(sp)
100032e8:	d8811f15 	stw	r2,1148(sp)
100032ec:	010001c4 	movi	r4,7
100032f0:	20bda30e 	bge	r4,r2,10002980 <__alt_data_end+0xf8002980>
100032f4:	b809883a 	mov	r4,r23
100032f8:	b00b883a 	mov	r5,r22
100032fc:	d9811e04 	addi	r6,sp,1144
10003300:	00095780 	call	10009578 <__sprint_r>
10003304:	103ca41e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003308:	d8c12017 	ldw	r3,1152(sp)
1000330c:	da000404 	addi	r8,sp,16
10003310:	003d9c06 	br	10002984 <__alt_data_end+0xf8002984>
10003314:	b809883a 	mov	r4,r23
10003318:	b00b883a 	mov	r5,r22
1000331c:	d9811e04 	addi	r6,sp,1144
10003320:	00095780 	call	10009578 <__sprint_r>
10003324:	103dd226 	beq	r2,zero,10002a70 <__alt_data_end+0xf8002a70>
10003328:	003c9b06 	br	10002598 <__alt_data_end+0xf8002598>
1000332c:	10803fcc 	andi	r2,r2,255
10003330:	1000311e 	bne	r2,zero,100033f8 <___vfprintf_internal_r+0x12c0>
10003334:	e080004c 	andi	r2,fp,1
10003338:	10002f26 	beq	r2,zero,100033f8 <___vfprintf_internal_r+0x12c0>
1000333c:	00800c04 	movi	r2,48
10003340:	d8c10dc4 	addi	r3,sp,1079
10003344:	d8810dc5 	stb	r2,1079(sp)
10003348:	dc413c17 	ldw	r17,1264(sp)
1000334c:	d8c13115 	stw	r3,1220(sp)
10003350:	003cf406 	br	10002724 <__alt_data_end+0xf8002724>
10003354:	b809883a 	mov	r4,r23
10003358:	b00b883a 	mov	r5,r22
1000335c:	d9811e04 	addi	r6,sp,1144
10003360:	00095780 	call	10009578 <__sprint_r>
10003364:	103c8c1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003368:	d8c12017 	ldw	r3,1152(sp)
1000336c:	da000404 	addi	r8,sp,16
10003370:	003d7706 	br	10002950 <__alt_data_end+0xf8002950>
10003374:	b809883a 	mov	r4,r23
10003378:	b00b883a 	mov	r5,r22
1000337c:	d9811e04 	addi	r6,sp,1144
10003380:	00095780 	call	10009578 <__sprint_r>
10003384:	103c841e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003388:	d8c12017 	ldw	r3,1152(sp)
1000338c:	da000404 	addi	r8,sp,16
10003390:	003d3506 	br	10002868 <__alt_data_end+0xf8002868>
10003394:	b809883a 	mov	r4,r23
10003398:	b00b883a 	mov	r5,r22
1000339c:	d9811e04 	addi	r6,sp,1144
100033a0:	00095780 	call	10009578 <__sprint_r>
100033a4:	103c7c1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100033a8:	d8c12017 	ldw	r3,1152(sp)
100033ac:	da000404 	addi	r8,sp,16
100033b0:	003d3b06 	br	100028a0 <__alt_data_end+0xf80028a0>
100033b4:	d9413b17 	ldw	r5,1260(sp)
100033b8:	d8c10e04 	addi	r3,sp,1080
100033bc:	908003cc 	andi	r2,r18,15
100033c0:	a808973a 	slli	r4,r21,28
100033c4:	2885883a 	add	r2,r5,r2
100033c8:	9024d13a 	srli	r18,r18,4
100033cc:	10800003 	ldbu	r2,0(r2)
100033d0:	a82ad13a 	srli	r21,r21,4
100033d4:	18ffffc4 	addi	r3,r3,-1
100033d8:	24a4b03a 	or	r18,r4,r18
100033dc:	18800005 	stb	r2,0(r3)
100033e0:	9544b03a 	or	r2,r18,r21
100033e4:	103ff51e 	bne	r2,zero,100033bc <__alt_data_end+0xf80033bc>
100033e8:	d9412817 	ldw	r5,1184(sp)
100033ec:	d8c13115 	stw	r3,1220(sp)
100033f0:	28e3c83a 	sub	r17,r5,r3
100033f4:	003ccb06 	br	10002724 <__alt_data_end+0xf8002724>
100033f8:	d8c10e04 	addi	r3,sp,1080
100033fc:	0023883a 	mov	r17,zero
10003400:	d8c13115 	stw	r3,1220(sp)
10003404:	003cc706 	br	10002724 <__alt_data_end+0xf8002724>
10003408:	dc012617 	ldw	r16,1176(sp)
1000340c:	0401ab0e 	bge	zero,r16,10003abc <___vfprintf_internal_r+0x1984>
10003410:	d8813317 	ldw	r2,1228(sp)
10003414:	d9413117 	ldw	r5,1220(sp)
10003418:	d9013417 	ldw	r4,1232(sp)
1000341c:	1023883a 	mov	r17,r2
10003420:	28a1883a 	add	r16,r5,r2
10003424:	2080010e 	bge	r4,r2,1000342c <___vfprintf_internal_r+0x12f4>
10003428:	2023883a 	mov	r17,r4
1000342c:	04400b0e 	bge	zero,r17,1000345c <___vfprintf_internal_r+0x1324>
10003430:	d8811f17 	ldw	r2,1148(sp)
10003434:	d9413117 	ldw	r5,1220(sp)
10003438:	1c47883a 	add	r3,r3,r17
1000343c:	10800044 	addi	r2,r2,1
10003440:	41400015 	stw	r5,0(r8)
10003444:	44400115 	stw	r17,4(r8)
10003448:	d8c12015 	stw	r3,1152(sp)
1000344c:	d8811f15 	stw	r2,1148(sp)
10003450:	010001c4 	movi	r4,7
10003454:	20826716 	blt	r4,r2,10003df4 <___vfprintf_internal_r+0x1cbc>
10003458:	42000204 	addi	r8,r8,8
1000345c:	88026316 	blt	r17,zero,10003dec <___vfprintf_internal_r+0x1cb4>
10003460:	d8813417 	ldw	r2,1232(sp)
10003464:	1463c83a 	sub	r17,r2,r17
10003468:	0440590e 	bge	zero,r17,100035d0 <___vfprintf_internal_r+0x1498>
1000346c:	04c00404 	movi	r19,16
10003470:	d8811f17 	ldw	r2,1148(sp)
10003474:	9c41770e 	bge	r19,r17,10003a54 <___vfprintf_internal_r+0x191c>
10003478:	01440074 	movhi	r5,4097
1000347c:	29401e84 	addi	r5,r5,122
10003480:	d9412c15 	stw	r5,1200(sp)
10003484:	054001c4 	movi	r21,7
10003488:	00000306 	br	10003498 <___vfprintf_internal_r+0x1360>
1000348c:	42000204 	addi	r8,r8,8
10003490:	8c7ffc04 	addi	r17,r17,-16
10003494:	9c41720e 	bge	r19,r17,10003a60 <___vfprintf_internal_r+0x1928>
10003498:	18c00404 	addi	r3,r3,16
1000349c:	10800044 	addi	r2,r2,1
100034a0:	45000015 	stw	r20,0(r8)
100034a4:	44c00115 	stw	r19,4(r8)
100034a8:	d8c12015 	stw	r3,1152(sp)
100034ac:	d8811f15 	stw	r2,1148(sp)
100034b0:	a8bff60e 	bge	r21,r2,1000348c <__alt_data_end+0xf800348c>
100034b4:	b809883a 	mov	r4,r23
100034b8:	b00b883a 	mov	r5,r22
100034bc:	d9811e04 	addi	r6,sp,1144
100034c0:	00095780 	call	10009578 <__sprint_r>
100034c4:	103c341e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100034c8:	d8c12017 	ldw	r3,1152(sp)
100034cc:	d8811f17 	ldw	r2,1148(sp)
100034d0:	da000404 	addi	r8,sp,16
100034d4:	003fee06 	br	10003490 <__alt_data_end+0xf8003490>
100034d8:	b809883a 	mov	r4,r23
100034dc:	b00b883a 	mov	r5,r22
100034e0:	d9811e04 	addi	r6,sp,1144
100034e4:	00095780 	call	10009578 <__sprint_r>
100034e8:	103c2b1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100034ec:	d8c12017 	ldw	r3,1152(sp)
100034f0:	d8812787 	ldb	r2,1182(sp)
100034f4:	da000404 	addi	r8,sp,16
100034f8:	003cce06 	br	10002834 <__alt_data_end+0xf8002834>
100034fc:	d8813317 	ldw	r2,1228(sp)
10003500:	14ffffc4 	addi	r19,r2,-1
10003504:	04ff630e 	bge	zero,r19,10003294 <__alt_data_end+0xf8003294>
10003508:	05400404 	movi	r21,16
1000350c:	acc0810e 	bge	r21,r19,10003714 <___vfprintf_internal_r+0x15dc>
10003510:	01440074 	movhi	r5,4097
10003514:	29401e84 	addi	r5,r5,122
10003518:	d9412c15 	stw	r5,1200(sp)
1000351c:	01c001c4 	movi	r7,7
10003520:	00000306 	br	10003530 <___vfprintf_internal_r+0x13f8>
10003524:	8c400204 	addi	r17,r17,8
10003528:	9cfffc04 	addi	r19,r19,-16
1000352c:	acc07c0e 	bge	r21,r19,10003720 <___vfprintf_internal_r+0x15e8>
10003530:	18c00404 	addi	r3,r3,16
10003534:	84000044 	addi	r16,r16,1
10003538:	8d000015 	stw	r20,0(r17)
1000353c:	8d400115 	stw	r21,4(r17)
10003540:	d8c12015 	stw	r3,1152(sp)
10003544:	dc011f15 	stw	r16,1148(sp)
10003548:	3c3ff60e 	bge	r7,r16,10003524 <__alt_data_end+0xf8003524>
1000354c:	b809883a 	mov	r4,r23
10003550:	b00b883a 	mov	r5,r22
10003554:	d9811e04 	addi	r6,sp,1144
10003558:	d9c13d15 	stw	r7,1268(sp)
1000355c:	00095780 	call	10009578 <__sprint_r>
10003560:	d9c13d17 	ldw	r7,1268(sp)
10003564:	103c0c1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003568:	d8c12017 	ldw	r3,1152(sp)
1000356c:	dc011f17 	ldw	r16,1148(sp)
10003570:	dc400404 	addi	r17,sp,16
10003574:	003fec06 	br	10003528 <__alt_data_end+0xf8003528>
10003578:	00800084 	movi	r2,2
1000357c:	9546b03a 	or	r3,r18,r21
10003580:	003d7d06 	br	10002b78 <__alt_data_end+0xf8002b78>
10003584:	10803fcc 	andi	r2,r2,255
10003588:	1080201c 	xori	r2,r2,128
1000358c:	10bfe004 	addi	r2,r2,-128
10003590:	01000c04 	movi	r4,48
10003594:	1101d726 	beq	r2,r4,10003cf4 <___vfprintf_internal_r+0x1bbc>
10003598:	d9413117 	ldw	r5,1220(sp)
1000359c:	d8812817 	ldw	r2,1184(sp)
100035a0:	193fffc5 	stb	r4,-1(r3)
100035a4:	297fffc4 	addi	r5,r5,-1
100035a8:	d9413115 	stw	r5,1220(sp)
100035ac:	1163c83a 	sub	r17,r2,r5
100035b0:	003c5c06 	br	10002724 <__alt_data_end+0xf8002724>
100035b4:	b809883a 	mov	r4,r23
100035b8:	b00b883a 	mov	r5,r22
100035bc:	d9811e04 	addi	r6,sp,1144
100035c0:	00095780 	call	10009578 <__sprint_r>
100035c4:	103bf41e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100035c8:	d8c12017 	ldw	r3,1152(sp)
100035cc:	da000404 	addi	r8,sp,16
100035d0:	d9413117 	ldw	r5,1220(sp)
100035d4:	d9013417 	ldw	r4,1232(sp)
100035d8:	d8812617 	ldw	r2,1176(sp)
100035dc:	2923883a 	add	r17,r5,r4
100035e0:	d9413317 	ldw	r5,1228(sp)
100035e4:	11400216 	blt	r2,r5,100035f0 <___vfprintf_internal_r+0x14b8>
100035e8:	e100004c 	andi	r4,fp,1
100035ec:	20000d26 	beq	r4,zero,10003624 <___vfprintf_internal_r+0x14ec>
100035f0:	d9013817 	ldw	r4,1248(sp)
100035f4:	d9413517 	ldw	r5,1236(sp)
100035f8:	1907883a 	add	r3,r3,r4
100035fc:	d9011f17 	ldw	r4,1148(sp)
10003600:	41400015 	stw	r5,0(r8)
10003604:	d9413817 	ldw	r5,1248(sp)
10003608:	21000044 	addi	r4,r4,1
1000360c:	d8c12015 	stw	r3,1152(sp)
10003610:	41400115 	stw	r5,4(r8)
10003614:	d9011f15 	stw	r4,1148(sp)
10003618:	014001c4 	movi	r5,7
1000361c:	2901fd16 	blt	r5,r4,10003e14 <___vfprintf_internal_r+0x1cdc>
10003620:	42000204 	addi	r8,r8,8
10003624:	d9013317 	ldw	r4,1228(sp)
10003628:	2085c83a 	sub	r2,r4,r2
1000362c:	8449c83a 	sub	r4,r16,r17
10003630:	1021883a 	mov	r16,r2
10003634:	2080010e 	bge	r4,r2,1000363c <___vfprintf_internal_r+0x1504>
10003638:	2021883a 	mov	r16,r4
1000363c:	04000a0e 	bge	zero,r16,10003668 <___vfprintf_internal_r+0x1530>
10003640:	d9011f17 	ldw	r4,1148(sp)
10003644:	1c07883a 	add	r3,r3,r16
10003648:	44400015 	stw	r17,0(r8)
1000364c:	21000044 	addi	r4,r4,1
10003650:	44000115 	stw	r16,4(r8)
10003654:	d8c12015 	stw	r3,1152(sp)
10003658:	d9011f15 	stw	r4,1148(sp)
1000365c:	014001c4 	movi	r5,7
10003660:	29020916 	blt	r5,r4,10003e88 <___vfprintf_internal_r+0x1d50>
10003664:	42000204 	addi	r8,r8,8
10003668:	80020116 	blt	r16,zero,10003e70 <___vfprintf_internal_r+0x1d38>
1000366c:	1421c83a 	sub	r16,r2,r16
10003670:	043cc40e 	bge	zero,r16,10002984 <__alt_data_end+0xf8002984>
10003674:	04400404 	movi	r17,16
10003678:	d8811f17 	ldw	r2,1148(sp)
1000367c:	8c3f110e 	bge	r17,r16,100032c4 <__alt_data_end+0xf80032c4>
10003680:	01440074 	movhi	r5,4097
10003684:	29401e84 	addi	r5,r5,122
10003688:	d9412c15 	stw	r5,1200(sp)
1000368c:	04c001c4 	movi	r19,7
10003690:	00000306 	br	100036a0 <___vfprintf_internal_r+0x1568>
10003694:	42000204 	addi	r8,r8,8
10003698:	843ffc04 	addi	r16,r16,-16
1000369c:	8c3f0c0e 	bge	r17,r16,100032d0 <__alt_data_end+0xf80032d0>
100036a0:	18c00404 	addi	r3,r3,16
100036a4:	10800044 	addi	r2,r2,1
100036a8:	45000015 	stw	r20,0(r8)
100036ac:	44400115 	stw	r17,4(r8)
100036b0:	d8c12015 	stw	r3,1152(sp)
100036b4:	d8811f15 	stw	r2,1148(sp)
100036b8:	98bff60e 	bge	r19,r2,10003694 <__alt_data_end+0xf8003694>
100036bc:	b809883a 	mov	r4,r23
100036c0:	b00b883a 	mov	r5,r22
100036c4:	d9811e04 	addi	r6,sp,1144
100036c8:	00095780 	call	10009578 <__sprint_r>
100036cc:	103bb21e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100036d0:	d8c12017 	ldw	r3,1152(sp)
100036d4:	d8811f17 	ldw	r2,1148(sp)
100036d8:	da000404 	addi	r8,sp,16
100036dc:	003fee06 	br	10003698 <__alt_data_end+0xf8003698>
100036e0:	e088703a 	and	r4,fp,r2
100036e4:	203ec01e 	bne	r4,zero,100031e8 <__alt_data_end+0xf80031e8>
100036e8:	dc011f17 	ldw	r16,1148(sp)
100036ec:	d9013117 	ldw	r4,1220(sp)
100036f0:	40800115 	stw	r2,4(r8)
100036f4:	84000044 	addi	r16,r16,1
100036f8:	41000015 	stw	r4,0(r8)
100036fc:	d8c12015 	stw	r3,1152(sp)
10003700:	dc011f15 	stw	r16,1148(sp)
10003704:	008001c4 	movi	r2,7
10003708:	14000e16 	blt	r2,r16,10003744 <___vfprintf_internal_r+0x160c>
1000370c:	44400204 	addi	r17,r8,8
10003710:	003ee006 	br	10003294 <__alt_data_end+0xf8003294>
10003714:	01040074 	movhi	r4,4097
10003718:	21001e84 	addi	r4,r4,122
1000371c:	d9012c15 	stw	r4,1200(sp)
10003720:	d8812c17 	ldw	r2,1200(sp)
10003724:	1cc7883a 	add	r3,r3,r19
10003728:	84000044 	addi	r16,r16,1
1000372c:	88800015 	stw	r2,0(r17)
10003730:	8cc00115 	stw	r19,4(r17)
10003734:	d8c12015 	stw	r3,1152(sp)
10003738:	dc011f15 	stw	r16,1148(sp)
1000373c:	008001c4 	movi	r2,7
10003740:	143ed30e 	bge	r2,r16,10003290 <__alt_data_end+0xf8003290>
10003744:	b809883a 	mov	r4,r23
10003748:	b00b883a 	mov	r5,r22
1000374c:	d9811e04 	addi	r6,sp,1144
10003750:	00095780 	call	10009578 <__sprint_r>
10003754:	103b901e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003758:	d8c12017 	ldw	r3,1152(sp)
1000375c:	dc011f17 	ldw	r16,1148(sp)
10003760:	dc400404 	addi	r17,sp,16
10003764:	003ecb06 	br	10003294 <__alt_data_end+0xf8003294>
10003768:	b809883a 	mov	r4,r23
1000376c:	b00b883a 	mov	r5,r22
10003770:	d9811e04 	addi	r6,sp,1144
10003774:	00095780 	call	10009578 <__sprint_r>
10003778:	103b871e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
1000377c:	d8c12017 	ldw	r3,1152(sp)
10003780:	dc011f17 	ldw	r16,1148(sp)
10003784:	da000404 	addi	r8,sp,16
10003788:	003ea206 	br	10003214 <__alt_data_end+0xf8003214>
1000378c:	b809883a 	mov	r4,r23
10003790:	b00b883a 	mov	r5,r22
10003794:	d9811e04 	addi	r6,sp,1144
10003798:	00095780 	call	10009578 <__sprint_r>
1000379c:	103b7e1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100037a0:	d8c12017 	ldw	r3,1152(sp)
100037a4:	dc011f17 	ldw	r16,1148(sp)
100037a8:	dc400404 	addi	r17,sp,16
100037ac:	003ea406 	br	10003240 <__alt_data_end+0xf8003240>
100037b0:	b809883a 	mov	r4,r23
100037b4:	b00b883a 	mov	r5,r22
100037b8:	d9811e04 	addi	r6,sp,1144
100037bc:	00095780 	call	10009578 <__sprint_r>
100037c0:	103b751e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100037c4:	d8c12017 	ldw	r3,1152(sp)
100037c8:	da000404 	addi	r8,sp,16
100037cc:	003c3706 	br	100028ac <__alt_data_end+0xf80028ac>
100037d0:	04a5c83a 	sub	r18,zero,r18
100037d4:	9004c03a 	cmpne	r2,r18,zero
100037d8:	056bc83a 	sub	r21,zero,r21
100037dc:	a8abc83a 	sub	r21,r21,r2
100037e0:	04c00b44 	movi	r19,45
100037e4:	dcc12785 	stb	r19,1182(sp)
100037e8:	da413215 	stw	r9,1224(sp)
100037ec:	00800044 	movi	r2,1
100037f0:	9546b03a 	or	r3,r18,r21
100037f4:	003bb106 	br	100026bc <__alt_data_end+0xf80026bc>
100037f8:	da013f15 	stw	r8,1276(sp)
100037fc:	da413e15 	stw	r9,1272(sp)
10003800:	00091d40 	call	100091d4 <__fpclassifyd>
10003804:	da013f17 	ldw	r8,1276(sp)
10003808:	da413e17 	ldw	r9,1272(sp)
1000380c:	1000e526 	beq	r2,zero,10003ba4 <___vfprintf_internal_r+0x1a6c>
10003810:	04fff7c4 	movi	r19,-33
10003814:	00bfffc4 	movi	r2,-1
10003818:	84e6703a 	and	r19,r16,r19
1000381c:	48822926 	beq	r9,r2,100040c4 <___vfprintf_internal_r+0x1f8c>
10003820:	008011c4 	movi	r2,71
10003824:	98821626 	beq	r19,r2,10004080 <___vfprintf_internal_r+0x1f48>
10003828:	d9013917 	ldw	r4,1252(sp)
1000382c:	e0c04014 	ori	r3,fp,256
10003830:	d8c12d15 	stw	r3,1204(sp)
10003834:	20021f16 	blt	r4,zero,100040b4 <___vfprintf_internal_r+0x1f7c>
10003838:	dc413917 	ldw	r17,1252(sp)
1000383c:	d8012b05 	stb	zero,1196(sp)
10003840:	00801984 	movi	r2,102
10003844:	80814d26 	beq	r16,r2,10003d7c <___vfprintf_internal_r+0x1c44>
10003848:	00801184 	movi	r2,70
1000384c:	80814b26 	beq	r16,r2,10003d7c <___vfprintf_internal_r+0x1c44>
10003850:	00801144 	movi	r2,69
10003854:	98821d26 	beq	r19,r2,100040cc <___vfprintf_internal_r+0x1f94>
10003858:	482b883a 	mov	r21,r9
1000385c:	d8812604 	addi	r2,sp,1176
10003860:	d8800115 	stw	r2,4(sp)
10003864:	d9413717 	ldw	r5,1244(sp)
10003868:	d8812504 	addi	r2,sp,1172
1000386c:	d8800215 	stw	r2,8(sp)
10003870:	d8812104 	addi	r2,sp,1156
10003874:	dd400015 	stw	r21,0(sp)
10003878:	d8800315 	stw	r2,12(sp)
1000387c:	b809883a 	mov	r4,r23
10003880:	880d883a 	mov	r6,r17
10003884:	01c00084 	movi	r7,2
10003888:	da013f15 	stw	r8,1276(sp)
1000388c:	da413e15 	stw	r9,1272(sp)
10003890:	00045b00 	call	100045b0 <_dtoa_r>
10003894:	d8813115 	stw	r2,1220(sp)
10003898:	008019c4 	movi	r2,103
1000389c:	da013f17 	ldw	r8,1276(sp)
100038a0:	da413e17 	ldw	r9,1272(sp)
100038a4:	80800226 	beq	r16,r2,100038b0 <___vfprintf_internal_r+0x1778>
100038a8:	008011c4 	movi	r2,71
100038ac:	8081451e 	bne	r16,r2,10003dc4 <___vfprintf_internal_r+0x1c8c>
100038b0:	e080004c 	andi	r2,fp,1
100038b4:	10021e26 	beq	r2,zero,10004130 <___vfprintf_internal_r+0x1ff8>
100038b8:	d8c13117 	ldw	r3,1220(sp)
100038bc:	1d55883a 	add	r10,r3,r21
100038c0:	d9013717 	ldw	r4,1244(sp)
100038c4:	880b883a 	mov	r5,r17
100038c8:	000d883a 	mov	r6,zero
100038cc:	000f883a 	mov	r7,zero
100038d0:	da013f15 	stw	r8,1276(sp)
100038d4:	da413e15 	stw	r9,1272(sp)
100038d8:	da813d15 	stw	r10,1268(sp)
100038dc:	000d2f00 	call	1000d2f0 <__eqdf2>
100038e0:	da013f17 	ldw	r8,1276(sp)
100038e4:	da413e17 	ldw	r9,1272(sp)
100038e8:	da813d17 	ldw	r10,1268(sp)
100038ec:	1001a126 	beq	r2,zero,10003f74 <___vfprintf_internal_r+0x1e3c>
100038f0:	d8812117 	ldw	r2,1156(sp)
100038f4:	1280062e 	bgeu	r2,r10,10003910 <___vfprintf_internal_r+0x17d8>
100038f8:	01000c04 	movi	r4,48
100038fc:	10c00044 	addi	r3,r2,1
10003900:	d8c12115 	stw	r3,1156(sp)
10003904:	11000005 	stb	r4,0(r2)
10003908:	d8812117 	ldw	r2,1156(sp)
1000390c:	12bffb36 	bltu	r2,r10,100038fc <__alt_data_end+0xf80038fc>
10003910:	d8c13117 	ldw	r3,1220(sp)
10003914:	10c5c83a 	sub	r2,r2,r3
10003918:	d8813315 	stw	r2,1228(sp)
1000391c:	008011c4 	movi	r2,71
10003920:	98818926 	beq	r19,r2,10003f48 <___vfprintf_internal_r+0x1e10>
10003924:	00801944 	movi	r2,101
10003928:	14023c0e 	bge	r2,r16,1000421c <___vfprintf_internal_r+0x20e4>
1000392c:	d8c12617 	ldw	r3,1176(sp)
10003930:	00801984 	movi	r2,102
10003934:	d8c13415 	stw	r3,1232(sp)
10003938:	8081ef26 	beq	r16,r2,100040f8 <___vfprintf_internal_r+0x1fc0>
1000393c:	d8c13417 	ldw	r3,1232(sp)
10003940:	d9013317 	ldw	r4,1228(sp)
10003944:	1901e316 	blt	r3,r4,100040d4 <___vfprintf_internal_r+0x1f9c>
10003948:	e080004c 	andi	r2,fp,1
1000394c:	1001f426 	beq	r2,zero,10004120 <___vfprintf_internal_r+0x1fe8>
10003950:	d8c13417 	ldw	r3,1232(sp)
10003954:	1c400044 	addi	r17,r3,1
10003958:	8839883a 	mov	fp,r17
1000395c:	8801e416 	blt	r17,zero,100040f0 <___vfprintf_internal_r+0x1fb8>
10003960:	dd412b07 	ldb	r21,1196(sp)
10003964:	a801701e 	bne	r21,zero,10003f28 <___vfprintf_internal_r+0x1df0>
10003968:	df012b15 	stw	fp,1196(sp)
1000396c:	dcc12783 	ldbu	r19,1182(sp)
10003970:	df012d17 	ldw	fp,1204(sp)
10003974:	d8013215 	stw	zero,1224(sp)
10003978:	dc812d15 	stw	r18,1204(sp)
1000397c:	003b6e06 	br	10002738 <__alt_data_end+0xf8002738>
10003980:	e080040c 	andi	r2,fp,16
10003984:	1000b51e 	bne	r2,zero,10003c5c <___vfprintf_internal_r+0x1b24>
10003988:	e080100c 	andi	r2,fp,64
1000398c:	10015b26 	beq	r2,zero,10003efc <___vfprintf_internal_r+0x1dc4>
10003990:	d9012d17 	ldw	r4,1204(sp)
10003994:	d9412f17 	ldw	r5,1212(sp)
10003998:	20800017 	ldw	r2,0(r4)
1000399c:	21000104 	addi	r4,r4,4
100039a0:	d9012d15 	stw	r4,1204(sp)
100039a4:	1140000d 	sth	r5,0(r2)
100039a8:	003a2006 	br	1000222c <__alt_data_end+0xf800222c>
100039ac:	e0c0100c 	andi	r3,fp,64
100039b0:	1800a226 	beq	r3,zero,10003c3c <___vfprintf_internal_r+0x1b04>
100039b4:	d8c12d17 	ldw	r3,1204(sp)
100039b8:	1480000b 	ldhu	r18,0(r2)
100039bc:	002b883a 	mov	r21,zero
100039c0:	18c00104 	addi	r3,r3,4
100039c4:	d8c12d15 	stw	r3,1204(sp)
100039c8:	0005883a 	mov	r2,zero
100039cc:	9007883a 	mov	r3,r18
100039d0:	003c6906 	br	10002b78 <__alt_data_end+0xf8002b78>
100039d4:	e0c0100c 	andi	r3,fp,64
100039d8:	18009026 	beq	r3,zero,10003c1c <___vfprintf_internal_r+0x1ae4>
100039dc:	1480000b 	ldhu	r18,0(r2)
100039e0:	d8812d17 	ldw	r2,1204(sp)
100039e4:	002b883a 	mov	r21,zero
100039e8:	9007883a 	mov	r3,r18
100039ec:	10800104 	addi	r2,r2,4
100039f0:	d8812d15 	stw	r2,1204(sp)
100039f4:	00800044 	movi	r2,1
100039f8:	003c5f06 	br	10002b78 <__alt_data_end+0xf8002b78>
100039fc:	e0c0100c 	andi	r3,fp,64
10003a00:	18008026 	beq	r3,zero,10003c04 <___vfprintf_internal_r+0x1acc>
10003a04:	d9012d17 	ldw	r4,1204(sp)
10003a08:	1480000b 	ldhu	r18,0(r2)
10003a0c:	002b883a 	mov	r21,zero
10003a10:	21000104 	addi	r4,r4,4
10003a14:	d9012d15 	stw	r4,1204(sp)
10003a18:	003c7906 	br	10002c00 <__alt_data_end+0xf8002c00>
10003a1c:	e080100c 	andi	r2,fp,64
10003a20:	10007126 	beq	r2,zero,10003be8 <___vfprintf_internal_r+0x1ab0>
10003a24:	1c80000f 	ldh	r18,0(r3)
10003a28:	d8812d17 	ldw	r2,1204(sp)
10003a2c:	902bd7fa 	srai	r21,r18,31
10003a30:	10800104 	addi	r2,r2,4
10003a34:	d8812d15 	stw	r2,1204(sp)
10003a38:	a805883a 	mov	r2,r21
10003a3c:	003b1a06 	br	100026a8 <__alt_data_end+0xf80026a8>
10003a40:	e4000007 	ldb	r16,0(fp)
10003a44:	e005883a 	mov	r2,fp
10003a48:	003a2306 	br	100022d8 <__alt_data_end+0xf80022d8>
10003a4c:	00800084 	movi	r2,2
10003a50:	003c4906 	br	10002b78 <__alt_data_end+0xf8002b78>
10003a54:	01040074 	movhi	r4,4097
10003a58:	21001e84 	addi	r4,r4,122
10003a5c:	d9012c15 	stw	r4,1200(sp)
10003a60:	d9012c17 	ldw	r4,1200(sp)
10003a64:	1c47883a 	add	r3,r3,r17
10003a68:	10800044 	addi	r2,r2,1
10003a6c:	41000015 	stw	r4,0(r8)
10003a70:	44400115 	stw	r17,4(r8)
10003a74:	d8c12015 	stw	r3,1152(sp)
10003a78:	d8811f15 	stw	r2,1148(sp)
10003a7c:	010001c4 	movi	r4,7
10003a80:	20becc16 	blt	r4,r2,100035b4 <__alt_data_end+0xf80035b4>
10003a84:	42000204 	addi	r8,r8,8
10003a88:	003ed106 	br	100035d0 <__alt_data_end+0xf80035d0>
10003a8c:	01040074 	movhi	r4,4097
10003a90:	21001e84 	addi	r4,r4,122
10003a94:	d9012c15 	stw	r4,1200(sp)
10003a98:	003ba306 	br	10002928 <__alt_data_end+0xf8002928>
10003a9c:	b809883a 	mov	r4,r23
10003aa0:	b00b883a 	mov	r5,r22
10003aa4:	d9811e04 	addi	r6,sp,1144
10003aa8:	00095780 	call	10009578 <__sprint_r>
10003aac:	103aba1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003ab0:	d8c12017 	ldw	r3,1152(sp)
10003ab4:	da000404 	addi	r8,sp,16
10003ab8:	003d6c06 	br	1000306c <__alt_data_end+0xf800306c>
10003abc:	d8811f17 	ldw	r2,1148(sp)
10003ac0:	01440074 	movhi	r5,4097
10003ac4:	01000044 	movi	r4,1
10003ac8:	18c00044 	addi	r3,r3,1
10003acc:	10800044 	addi	r2,r2,1
10003ad0:	29401e04 	addi	r5,r5,120
10003ad4:	41000115 	stw	r4,4(r8)
10003ad8:	41400015 	stw	r5,0(r8)
10003adc:	d8c12015 	stw	r3,1152(sp)
10003ae0:	d8811f15 	stw	r2,1148(sp)
10003ae4:	010001c4 	movi	r4,7
10003ae8:	20806716 	blt	r4,r2,10003c88 <___vfprintf_internal_r+0x1b50>
10003aec:	42000204 	addi	r8,r8,8
10003af0:	8000041e 	bne	r16,zero,10003b04 <___vfprintf_internal_r+0x19cc>
10003af4:	d8813317 	ldw	r2,1228(sp)
10003af8:	1000021e 	bne	r2,zero,10003b04 <___vfprintf_internal_r+0x19cc>
10003afc:	e080004c 	andi	r2,fp,1
10003b00:	103ba026 	beq	r2,zero,10002984 <__alt_data_end+0xf8002984>
10003b04:	d9013817 	ldw	r4,1248(sp)
10003b08:	d8811f17 	ldw	r2,1148(sp)
10003b0c:	d9413517 	ldw	r5,1236(sp)
10003b10:	1907883a 	add	r3,r3,r4
10003b14:	10800044 	addi	r2,r2,1
10003b18:	41000115 	stw	r4,4(r8)
10003b1c:	41400015 	stw	r5,0(r8)
10003b20:	d8c12015 	stw	r3,1152(sp)
10003b24:	d8811f15 	stw	r2,1148(sp)
10003b28:	010001c4 	movi	r4,7
10003b2c:	20815716 	blt	r4,r2,1000408c <___vfprintf_internal_r+0x1f54>
10003b30:	42000204 	addi	r8,r8,8
10003b34:	0421c83a 	sub	r16,zero,r16
10003b38:	0400810e 	bge	zero,r16,10003d40 <___vfprintf_internal_r+0x1c08>
10003b3c:	04400404 	movi	r17,16
10003b40:	8c00bd0e 	bge	r17,r16,10003e38 <___vfprintf_internal_r+0x1d00>
10003b44:	01440074 	movhi	r5,4097
10003b48:	29401e84 	addi	r5,r5,122
10003b4c:	d9412c15 	stw	r5,1200(sp)
10003b50:	04c001c4 	movi	r19,7
10003b54:	00000306 	br	10003b64 <___vfprintf_internal_r+0x1a2c>
10003b58:	42000204 	addi	r8,r8,8
10003b5c:	843ffc04 	addi	r16,r16,-16
10003b60:	8c00b80e 	bge	r17,r16,10003e44 <___vfprintf_internal_r+0x1d0c>
10003b64:	18c00404 	addi	r3,r3,16
10003b68:	10800044 	addi	r2,r2,1
10003b6c:	45000015 	stw	r20,0(r8)
10003b70:	44400115 	stw	r17,4(r8)
10003b74:	d8c12015 	stw	r3,1152(sp)
10003b78:	d8811f15 	stw	r2,1148(sp)
10003b7c:	98bff60e 	bge	r19,r2,10003b58 <__alt_data_end+0xf8003b58>
10003b80:	b809883a 	mov	r4,r23
10003b84:	b00b883a 	mov	r5,r22
10003b88:	d9811e04 	addi	r6,sp,1144
10003b8c:	00095780 	call	10009578 <__sprint_r>
10003b90:	103a811e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003b94:	d8c12017 	ldw	r3,1152(sp)
10003b98:	d8811f17 	ldw	r2,1148(sp)
10003b9c:	da000404 	addi	r8,sp,16
10003ba0:	003fee06 	br	10003b5c <__alt_data_end+0xf8003b5c>
10003ba4:	008011c4 	movi	r2,71
10003ba8:	1400db16 	blt	r2,r16,10003f18 <___vfprintf_internal_r+0x1de0>
10003bac:	01040074 	movhi	r4,4097
10003bb0:	21001004 	addi	r4,r4,64
10003bb4:	d9013115 	stw	r4,1220(sp)
10003bb8:	00c000c4 	movi	r3,3
10003bbc:	00bfdfc4 	movi	r2,-129
10003bc0:	d8c12b15 	stw	r3,1196(sp)
10003bc4:	e0b8703a 	and	fp,fp,r2
10003bc8:	dcc12783 	ldbu	r19,1182(sp)
10003bcc:	dc812d15 	stw	r18,1204(sp)
10003bd0:	1823883a 	mov	r17,r3
10003bd4:	d8013215 	stw	zero,1224(sp)
10003bd8:	d8013415 	stw	zero,1232(sp)
10003bdc:	003ad606 	br	10002738 <__alt_data_end+0xf8002738>
10003be0:	4823883a 	mov	r17,r9
10003be4:	003cc906 	br	10002f0c <__alt_data_end+0xf8002f0c>
10003be8:	1c800017 	ldw	r18,0(r3)
10003bec:	d8c12d17 	ldw	r3,1204(sp)
10003bf0:	902bd7fa 	srai	r21,r18,31
10003bf4:	18c00104 	addi	r3,r3,4
10003bf8:	d8c12d15 	stw	r3,1204(sp)
10003bfc:	a805883a 	mov	r2,r21
10003c00:	003aa906 	br	100026a8 <__alt_data_end+0xf80026a8>
10003c04:	d9412d17 	ldw	r5,1204(sp)
10003c08:	14800017 	ldw	r18,0(r2)
10003c0c:	002b883a 	mov	r21,zero
10003c10:	29400104 	addi	r5,r5,4
10003c14:	d9412d15 	stw	r5,1204(sp)
10003c18:	003bf906 	br	10002c00 <__alt_data_end+0xf8002c00>
10003c1c:	d8c12d17 	ldw	r3,1204(sp)
10003c20:	14800017 	ldw	r18,0(r2)
10003c24:	002b883a 	mov	r21,zero
10003c28:	18c00104 	addi	r3,r3,4
10003c2c:	d8c12d15 	stw	r3,1204(sp)
10003c30:	00800044 	movi	r2,1
10003c34:	9007883a 	mov	r3,r18
10003c38:	003bcf06 	br	10002b78 <__alt_data_end+0xf8002b78>
10003c3c:	d9012d17 	ldw	r4,1204(sp)
10003c40:	14800017 	ldw	r18,0(r2)
10003c44:	002b883a 	mov	r21,zero
10003c48:	21000104 	addi	r4,r4,4
10003c4c:	d9012d15 	stw	r4,1204(sp)
10003c50:	0005883a 	mov	r2,zero
10003c54:	9007883a 	mov	r3,r18
10003c58:	003bc706 	br	10002b78 <__alt_data_end+0xf8002b78>
10003c5c:	d9412d17 	ldw	r5,1204(sp)
10003c60:	d8c12f17 	ldw	r3,1212(sp)
10003c64:	28800017 	ldw	r2,0(r5)
10003c68:	29400104 	addi	r5,r5,4
10003c6c:	d9412d15 	stw	r5,1204(sp)
10003c70:	10c00015 	stw	r3,0(r2)
10003c74:	00396d06 	br	1000222c <__alt_data_end+0xf800222c>
10003c78:	01040074 	movhi	r4,4097
10003c7c:	21000e04 	addi	r4,r4,56
10003c80:	d9013115 	stw	r4,1220(sp)
10003c84:	003ba206 	br	10002b10 <__alt_data_end+0xf8002b10>
10003c88:	b809883a 	mov	r4,r23
10003c8c:	b00b883a 	mov	r5,r22
10003c90:	d9811e04 	addi	r6,sp,1144
10003c94:	00095780 	call	10009578 <__sprint_r>
10003c98:	103a3f1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003c9c:	dc012617 	ldw	r16,1176(sp)
10003ca0:	d8c12017 	ldw	r3,1152(sp)
10003ca4:	da000404 	addi	r8,sp,16
10003ca8:	003f9106 	br	10003af0 <__alt_data_end+0xf8003af0>
10003cac:	e0800044 	addi	r2,fp,1
10003cb0:	9cc00814 	ori	r19,r19,32
10003cb4:	e4000047 	ldb	r16,1(fp)
10003cb8:	00398706 	br	100022d8 <__alt_data_end+0xf80022d8>
10003cbc:	d8812e17 	ldw	r2,1208(sp)
10003cc0:	d8c12d15 	stw	r3,1204(sp)
10003cc4:	0085c83a 	sub	r2,zero,r2
10003cc8:	d8812e15 	stw	r2,1208(sp)
10003ccc:	e005883a 	mov	r2,fp
10003cd0:	003a3a06 	br	100025bc <__alt_data_end+0xf80025bc>
10003cd4:	b809883a 	mov	r4,r23
10003cd8:	b00b883a 	mov	r5,r22
10003cdc:	d9811e04 	addi	r6,sp,1144
10003ce0:	00095780 	call	10009578 <__sprint_r>
10003ce4:	103a2c1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003ce8:	d8c12017 	ldw	r3,1152(sp)
10003cec:	da000404 	addi	r8,sp,16
10003cf0:	003cf006 	br	100030b4 <__alt_data_end+0xf80030b4>
10003cf4:	d8c12817 	ldw	r3,1184(sp)
10003cf8:	d9013117 	ldw	r4,1220(sp)
10003cfc:	1923c83a 	sub	r17,r3,r4
10003d00:	003a8806 	br	10002724 <__alt_data_end+0xf8002724>
10003d04:	da013f15 	stw	r8,1276(sp)
10003d08:	00020a00 	call	100020a0 <strlen>
10003d0c:	1023883a 	mov	r17,r2
10003d10:	da013f17 	ldw	r8,1276(sp)
10003d14:	883c7f0e 	bge	r17,zero,10002f14 <__alt_data_end+0xf8002f14>
10003d18:	0005883a 	mov	r2,zero
10003d1c:	003c7d06 	br	10002f14 <__alt_data_end+0xf8002f14>
10003d20:	b809883a 	mov	r4,r23
10003d24:	b00b883a 	mov	r5,r22
10003d28:	d9811e04 	addi	r6,sp,1144
10003d2c:	00095780 	call	10009578 <__sprint_r>
10003d30:	103a191e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003d34:	d8c12017 	ldw	r3,1152(sp)
10003d38:	d8811f17 	ldw	r2,1148(sp)
10003d3c:	da000404 	addi	r8,sp,16
10003d40:	d9413317 	ldw	r5,1228(sp)
10003d44:	d9013117 	ldw	r4,1220(sp)
10003d48:	10800044 	addi	r2,r2,1
10003d4c:	28c7883a 	add	r3,r5,r3
10003d50:	41000015 	stw	r4,0(r8)
10003d54:	41400115 	stw	r5,4(r8)
10003d58:	d8c12015 	stw	r3,1152(sp)
10003d5c:	d8811f15 	stw	r2,1148(sp)
10003d60:	010001c4 	movi	r4,7
10003d64:	20bb060e 	bge	r4,r2,10002980 <__alt_data_end+0xf8002980>
10003d68:	003d6206 	br	100032f4 <__alt_data_end+0xf80032f4>
10003d6c:	01040074 	movhi	r4,4097
10003d70:	21002284 	addi	r4,r4,138
10003d74:	d9013615 	stw	r4,1240(sp)
10003d78:	003aa306 	br	10002808 <__alt_data_end+0xf8002808>
10003d7c:	d8812604 	addi	r2,sp,1176
10003d80:	d8800115 	stw	r2,4(sp)
10003d84:	d9413717 	ldw	r5,1244(sp)
10003d88:	d8812504 	addi	r2,sp,1172
10003d8c:	d8800215 	stw	r2,8(sp)
10003d90:	d8812104 	addi	r2,sp,1156
10003d94:	da400015 	stw	r9,0(sp)
10003d98:	d8800315 	stw	r2,12(sp)
10003d9c:	b809883a 	mov	r4,r23
10003da0:	880d883a 	mov	r6,r17
10003da4:	01c000c4 	movi	r7,3
10003da8:	da013f15 	stw	r8,1276(sp)
10003dac:	da413e15 	stw	r9,1272(sp)
10003db0:	00045b00 	call	100045b0 <_dtoa_r>
10003db4:	da413e17 	ldw	r9,1272(sp)
10003db8:	da013f17 	ldw	r8,1276(sp)
10003dbc:	d8813115 	stw	r2,1220(sp)
10003dc0:	482b883a 	mov	r21,r9
10003dc4:	d8c13117 	ldw	r3,1220(sp)
10003dc8:	00801184 	movi	r2,70
10003dcc:	1d55883a 	add	r10,r3,r21
10003dd0:	98bebb1e 	bne	r19,r2,100038c0 <__alt_data_end+0xf80038c0>
10003dd4:	19000007 	ldb	r4,0(r3)
10003dd8:	00800c04 	movi	r2,48
10003ddc:	2080dd26 	beq	r4,r2,10004154 <___vfprintf_internal_r+0x201c>
10003de0:	d8c12617 	ldw	r3,1176(sp)
10003de4:	50d5883a 	add	r10,r10,r3
10003de8:	003eb506 	br	100038c0 <__alt_data_end+0xf80038c0>
10003dec:	0023883a 	mov	r17,zero
10003df0:	003d9b06 	br	10003460 <__alt_data_end+0xf8003460>
10003df4:	b809883a 	mov	r4,r23
10003df8:	b00b883a 	mov	r5,r22
10003dfc:	d9811e04 	addi	r6,sp,1144
10003e00:	00095780 	call	10009578 <__sprint_r>
10003e04:	1039e41e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003e08:	d8c12017 	ldw	r3,1152(sp)
10003e0c:	da000404 	addi	r8,sp,16
10003e10:	003d9206 	br	1000345c <__alt_data_end+0xf800345c>
10003e14:	b809883a 	mov	r4,r23
10003e18:	b00b883a 	mov	r5,r22
10003e1c:	d9811e04 	addi	r6,sp,1144
10003e20:	00095780 	call	10009578 <__sprint_r>
10003e24:	1039dc1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003e28:	d8812617 	ldw	r2,1176(sp)
10003e2c:	d8c12017 	ldw	r3,1152(sp)
10003e30:	da000404 	addi	r8,sp,16
10003e34:	003dfb06 	br	10003624 <__alt_data_end+0xf8003624>
10003e38:	01040074 	movhi	r4,4097
10003e3c:	21001e84 	addi	r4,r4,122
10003e40:	d9012c15 	stw	r4,1200(sp)
10003e44:	d9012c17 	ldw	r4,1200(sp)
10003e48:	1c07883a 	add	r3,r3,r16
10003e4c:	10800044 	addi	r2,r2,1
10003e50:	41000015 	stw	r4,0(r8)
10003e54:	44000115 	stw	r16,4(r8)
10003e58:	d8c12015 	stw	r3,1152(sp)
10003e5c:	d8811f15 	stw	r2,1148(sp)
10003e60:	010001c4 	movi	r4,7
10003e64:	20bfae16 	blt	r4,r2,10003d20 <__alt_data_end+0xf8003d20>
10003e68:	42000204 	addi	r8,r8,8
10003e6c:	003fb406 	br	10003d40 <__alt_data_end+0xf8003d40>
10003e70:	0021883a 	mov	r16,zero
10003e74:	003dfd06 	br	1000366c <__alt_data_end+0xf800366c>
10003e78:	01440074 	movhi	r5,4097
10003e7c:	29402284 	addi	r5,r5,138
10003e80:	d9413615 	stw	r5,1240(sp)
10003e84:	003ae306 	br	10002a14 <__alt_data_end+0xf8002a14>
10003e88:	b809883a 	mov	r4,r23
10003e8c:	b00b883a 	mov	r5,r22
10003e90:	d9811e04 	addi	r6,sp,1144
10003e94:	00095780 	call	10009578 <__sprint_r>
10003e98:	1039bf1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
10003e9c:	d8812617 	ldw	r2,1176(sp)
10003ea0:	d9413317 	ldw	r5,1228(sp)
10003ea4:	d8c12017 	ldw	r3,1152(sp)
10003ea8:	da000404 	addi	r8,sp,16
10003eac:	2885c83a 	sub	r2,r5,r2
10003eb0:	003ded06 	br	10003668 <__alt_data_end+0xf8003668>
10003eb4:	00800184 	movi	r2,6
10003eb8:	1240012e 	bgeu	r2,r9,10003ec0 <___vfprintf_internal_r+0x1d88>
10003ebc:	1013883a 	mov	r9,r2
10003ec0:	4823883a 	mov	r17,r9
10003ec4:	4805883a 	mov	r2,r9
10003ec8:	4800b216 	blt	r9,zero,10004194 <___vfprintf_internal_r+0x205c>
10003ecc:	01440074 	movhi	r5,4097
10003ed0:	29401c04 	addi	r5,r5,112
10003ed4:	d8812b15 	stw	r2,1196(sp)
10003ed8:	dc812d15 	stw	r18,1204(sp)
10003edc:	d8013215 	stw	zero,1224(sp)
10003ee0:	d8013415 	stw	zero,1232(sp)
10003ee4:	d9413115 	stw	r5,1220(sp)
10003ee8:	0005883a 	mov	r2,zero
10003eec:	003a1906 	br	10002754 <__alt_data_end+0xf8002754>
10003ef0:	04c00b44 	movi	r19,45
10003ef4:	dcc12785 	stb	r19,1182(sp)
10003ef8:	003b0006 	br	10002afc <__alt_data_end+0xf8002afc>
10003efc:	d8c12d17 	ldw	r3,1204(sp)
10003f00:	d9012f17 	ldw	r4,1212(sp)
10003f04:	18800017 	ldw	r2,0(r3)
10003f08:	18c00104 	addi	r3,r3,4
10003f0c:	d8c12d15 	stw	r3,1204(sp)
10003f10:	11000015 	stw	r4,0(r2)
10003f14:	0038c506 	br	1000222c <__alt_data_end+0xf800222c>
10003f18:	01440074 	movhi	r5,4097
10003f1c:	29401104 	addi	r5,r5,68
10003f20:	d9413115 	stw	r5,1220(sp)
10003f24:	003f2406 	br	10003bb8 <__alt_data_end+0xf8003bb8>
10003f28:	00800b44 	movi	r2,45
10003f2c:	d8812785 	stb	r2,1182(sp)
10003f30:	df012b15 	stw	fp,1196(sp)
10003f34:	d8013215 	stw	zero,1224(sp)
10003f38:	df012d17 	ldw	fp,1204(sp)
10003f3c:	00800b44 	movi	r2,45
10003f40:	dc812d15 	stw	r18,1204(sp)
10003f44:	003a0006 	br	10002748 <__alt_data_end+0xf8002748>
10003f48:	d8c12617 	ldw	r3,1176(sp)
10003f4c:	00bfff44 	movi	r2,-3
10003f50:	18800a16 	blt	r3,r2,10003f7c <___vfprintf_internal_r+0x1e44>
10003f54:	48c00916 	blt	r9,r3,10003f7c <___vfprintf_internal_r+0x1e44>
10003f58:	d8c13415 	stw	r3,1232(sp)
10003f5c:	040019c4 	movi	r16,103
10003f60:	003e7606 	br	1000393c <__alt_data_end+0xf800393c>
10003f64:	01040074 	movhi	r4,4097
10003f68:	21001e84 	addi	r4,r4,122
10003f6c:	d9012c15 	stw	r4,1200(sp)
10003f70:	003c8e06 	br	100031ac <__alt_data_end+0xf80031ac>
10003f74:	5005883a 	mov	r2,r10
10003f78:	003e6506 	br	10003910 <__alt_data_end+0xf8003910>
10003f7c:	843fff84 	addi	r16,r16,-2
10003f80:	1d7fffc4 	addi	r21,r3,-1
10003f84:	dd412615 	stw	r21,1176(sp)
10003f88:	dc0122c5 	stb	r16,1163(sp)
10003f8c:	a8009216 	blt	r21,zero,100041d8 <___vfprintf_internal_r+0x20a0>
10003f90:	00800ac4 	movi	r2,43
10003f94:	d8812305 	stb	r2,1164(sp)
10003f98:	00800244 	movi	r2,9
10003f9c:	1540660e 	bge	r2,r21,10004138 <___vfprintf_internal_r+0x2000>
10003fa0:	dcc122c4 	addi	r19,sp,1163
10003fa4:	dc012c15 	stw	r16,1200(sp)
10003fa8:	4023883a 	mov	r17,r8
10003fac:	9821883a 	mov	r16,r19
10003fb0:	a809883a 	mov	r4,r21
10003fb4:	01400284 	movi	r5,10
10003fb8:	000c0400 	call	1000c040 <__modsi3>
10003fbc:	10800c04 	addi	r2,r2,48
10003fc0:	843fffc4 	addi	r16,r16,-1
10003fc4:	a809883a 	mov	r4,r21
10003fc8:	01400284 	movi	r5,10
10003fcc:	80800005 	stb	r2,0(r16)
10003fd0:	000bfec0 	call	1000bfec <__divsi3>
10003fd4:	01000244 	movi	r4,9
10003fd8:	102b883a 	mov	r21,r2
10003fdc:	20bff416 	blt	r4,r2,10003fb0 <__alt_data_end+0xf8003fb0>
10003fe0:	8811883a 	mov	r8,r17
10003fe4:	10800c04 	addi	r2,r2,48
10003fe8:	8023883a 	mov	r17,r16
10003fec:	897fffc4 	addi	r5,r17,-1
10003ff0:	88bfffc5 	stb	r2,-1(r17)
10003ff4:	dc012c17 	ldw	r16,1200(sp)
10003ff8:	2cc08a2e 	bgeu	r5,r19,10004224 <___vfprintf_internal_r+0x20ec>
10003ffc:	d9812384 	addi	r6,sp,1166
10004000:	344dc83a 	sub	r6,r6,r17
10004004:	d9012344 	addi	r4,sp,1165
10004008:	998d883a 	add	r6,r19,r6
1000400c:	00000106 	br	10004014 <___vfprintf_internal_r+0x1edc>
10004010:	28800003 	ldbu	r2,0(r5)
10004014:	20800005 	stb	r2,0(r4)
10004018:	21000044 	addi	r4,r4,1
1000401c:	29400044 	addi	r5,r5,1
10004020:	21bffb1e 	bne	r4,r6,10004010 <__alt_data_end+0xf8004010>
10004024:	d8812304 	addi	r2,sp,1164
10004028:	1445c83a 	sub	r2,r2,r17
1000402c:	d9412344 	addi	r5,sp,1165
10004030:	2885883a 	add	r2,r5,r2
10004034:	14e7c83a 	sub	r19,r2,r19
10004038:	d8813317 	ldw	r2,1228(sp)
1000403c:	d8c13317 	ldw	r3,1228(sp)
10004040:	dcc13a15 	stw	r19,1256(sp)
10004044:	14e3883a 	add	r17,r2,r19
10004048:	00800044 	movi	r2,1
1000404c:	10c0550e 	bge	r2,r3,100041a4 <___vfprintf_internal_r+0x206c>
10004050:	8c400044 	addi	r17,r17,1
10004054:	8839883a 	mov	fp,r17
10004058:	88005016 	blt	r17,zero,1000419c <___vfprintf_internal_r+0x2064>
1000405c:	d8013415 	stw	zero,1232(sp)
10004060:	003e3f06 	br	10003960 <__alt_data_end+0xf8003960>
10004064:	da412b15 	stw	r9,1196(sp)
10004068:	dcc12783 	ldbu	r19,1182(sp)
1000406c:	4823883a 	mov	r17,r9
10004070:	dc812d15 	stw	r18,1204(sp)
10004074:	d8013215 	stw	zero,1224(sp)
10004078:	d8013415 	stw	zero,1232(sp)
1000407c:	0039ae06 	br	10002738 <__alt_data_end+0xf8002738>
10004080:	483de91e 	bne	r9,zero,10003828 <__alt_data_end+0xf8003828>
10004084:	8813883a 	mov	r9,r17
10004088:	003de706 	br	10003828 <__alt_data_end+0xf8003828>
1000408c:	b809883a 	mov	r4,r23
10004090:	b00b883a 	mov	r5,r22
10004094:	d9811e04 	addi	r6,sp,1144
10004098:	00095780 	call	10009578 <__sprint_r>
1000409c:	10393e1e 	bne	r2,zero,10002598 <__alt_data_end+0xf8002598>
100040a0:	dc012617 	ldw	r16,1176(sp)
100040a4:	d8c12017 	ldw	r3,1152(sp)
100040a8:	d8811f17 	ldw	r2,1148(sp)
100040ac:	da000404 	addi	r8,sp,16
100040b0:	003ea006 	br	10003b34 <__alt_data_end+0xf8003b34>
100040b4:	00c00b44 	movi	r3,45
100040b8:	2460003c 	xorhi	r17,r4,32768
100040bc:	d8c12b05 	stb	r3,1196(sp)
100040c0:	003ddf06 	br	10003840 <__alt_data_end+0xf8003840>
100040c4:	02400184 	movi	r9,6
100040c8:	003dd706 	br	10003828 <__alt_data_end+0xf8003828>
100040cc:	4d400044 	addi	r21,r9,1
100040d0:	003de206 	br	1000385c <__alt_data_end+0xf800385c>
100040d4:	d8c13417 	ldw	r3,1232(sp)
100040d8:	00c0490e 	bge	zero,r3,10004200 <___vfprintf_internal_r+0x20c8>
100040dc:	04400044 	movi	r17,1
100040e0:	d9013317 	ldw	r4,1228(sp)
100040e4:	8923883a 	add	r17,r17,r4
100040e8:	8839883a 	mov	fp,r17
100040ec:	883e1c0e 	bge	r17,zero,10003960 <__alt_data_end+0xf8003960>
100040f0:	0039883a 	mov	fp,zero
100040f4:	003e1a06 	br	10003960 <__alt_data_end+0xf8003960>
100040f8:	00c03b0e 	bge	zero,r3,100041e8 <___vfprintf_internal_r+0x20b0>
100040fc:	4800021e 	bne	r9,zero,10004108 <___vfprintf_internal_r+0x1fd0>
10004100:	e080004c 	andi	r2,fp,1
10004104:	10000626 	beq	r2,zero,10004120 <___vfprintf_internal_r+0x1fe8>
10004108:	d8c13417 	ldw	r3,1232(sp)
1000410c:	4a400044 	addi	r9,r9,1
10004110:	1a63883a 	add	r17,r3,r9
10004114:	8839883a 	mov	fp,r17
10004118:	883e110e 	bge	r17,zero,10003960 <__alt_data_end+0xf8003960>
1000411c:	003ff406 	br	100040f0 <__alt_data_end+0xf80040f0>
10004120:	1839883a 	mov	fp,r3
10004124:	18004116 	blt	r3,zero,1000422c <___vfprintf_internal_r+0x20f4>
10004128:	dc413417 	ldw	r17,1232(sp)
1000412c:	003e0c06 	br	10003960 <__alt_data_end+0xf8003960>
10004130:	d8812117 	ldw	r2,1156(sp)
10004134:	003df606 	br	10003910 <__alt_data_end+0xf8003910>
10004138:	00800c04 	movi	r2,48
1000413c:	a8c00c04 	addi	r3,r21,48
10004140:	d8812345 	stb	r2,1165(sp)
10004144:	d8c12385 	stb	r3,1166(sp)
10004148:	d88123c4 	addi	r2,sp,1167
1000414c:	dcc122c4 	addi	r19,sp,1163
10004150:	003fb806 	br	10004034 <__alt_data_end+0xf8004034>
10004154:	d9013717 	ldw	r4,1244(sp)
10004158:	880b883a 	mov	r5,r17
1000415c:	000d883a 	mov	r6,zero
10004160:	000f883a 	mov	r7,zero
10004164:	da013f15 	stw	r8,1276(sp)
10004168:	da413e15 	stw	r9,1272(sp)
1000416c:	da813d15 	stw	r10,1268(sp)
10004170:	000d2f00 	call	1000d2f0 <__eqdf2>
10004174:	da013f17 	ldw	r8,1276(sp)
10004178:	da413e17 	ldw	r9,1272(sp)
1000417c:	da813d17 	ldw	r10,1268(sp)
10004180:	103f1726 	beq	r2,zero,10003de0 <__alt_data_end+0xf8003de0>
10004184:	00800044 	movi	r2,1
10004188:	1547c83a 	sub	r3,r2,r21
1000418c:	d8c12615 	stw	r3,1176(sp)
10004190:	003f1406 	br	10003de4 <__alt_data_end+0xf8003de4>
10004194:	0005883a 	mov	r2,zero
10004198:	003f4c06 	br	10003ecc <__alt_data_end+0xf8003ecc>
1000419c:	0039883a 	mov	fp,zero
100041a0:	003fae06 	br	1000405c <__alt_data_end+0xf800405c>
100041a4:	e084703a 	and	r2,fp,r2
100041a8:	103faa26 	beq	r2,zero,10004054 <__alt_data_end+0xf8004054>
100041ac:	003fa806 	br	10004050 <__alt_data_end+0xf8004050>
100041b0:	d9412d17 	ldw	r5,1204(sp)
100041b4:	2a400017 	ldw	r9,0(r5)
100041b8:	28c00104 	addi	r3,r5,4
100041bc:	d8c12d15 	stw	r3,1204(sp)
100041c0:	483ebc0e 	bge	r9,zero,10003cb4 <__alt_data_end+0xf8003cb4>
100041c4:	027fffc4 	movi	r9,-1
100041c8:	e4000047 	ldb	r16,1(fp)
100041cc:	00384206 	br	100022d8 <__alt_data_end+0xf80022d8>
100041d0:	043fffc4 	movi	r16,-1
100041d4:	0038ce06 	br	10002510 <__alt_data_end+0xf8002510>
100041d8:	00800b44 	movi	r2,45
100041dc:	056bc83a 	sub	r21,zero,r21
100041e0:	d8812305 	stb	r2,1164(sp)
100041e4:	003f6c06 	br	10003f98 <__alt_data_end+0xf8003f98>
100041e8:	4800081e 	bne	r9,zero,1000420c <___vfprintf_internal_r+0x20d4>
100041ec:	e080004c 	andi	r2,fp,1
100041f0:	1000061e 	bne	r2,zero,1000420c <___vfprintf_internal_r+0x20d4>
100041f4:	07000044 	movi	fp,1
100041f8:	e023883a 	mov	r17,fp
100041fc:	003dd806 	br	10003960 <__alt_data_end+0xf8003960>
10004200:	04400084 	movi	r17,2
10004204:	88e3c83a 	sub	r17,r17,r3
10004208:	003fb506 	br	100040e0 <__alt_data_end+0xf80040e0>
1000420c:	4c400084 	addi	r17,r9,2
10004210:	8839883a 	mov	fp,r17
10004214:	883dd20e 	bge	r17,zero,10003960 <__alt_data_end+0xf8003960>
10004218:	003fb506 	br	100040f0 <__alt_data_end+0xf80040f0>
1000421c:	d8c12617 	ldw	r3,1176(sp)
10004220:	003f5706 	br	10003f80 <__alt_data_end+0xf8003f80>
10004224:	d8812344 	addi	r2,sp,1165
10004228:	003f8206 	br	10004034 <__alt_data_end+0xf8004034>
1000422c:	0039883a 	mov	fp,zero
10004230:	003fbd06 	br	10004128 <__alt_data_end+0xf8004128>

10004234 <__vfprintf_internal>:
10004234:	2007883a 	mov	r3,r4
10004238:	01040074 	movhi	r4,4097
1000423c:	21035704 	addi	r4,r4,3420
10004240:	21000017 	ldw	r4,0(r4)
10004244:	2805883a 	mov	r2,r5
10004248:	300f883a 	mov	r7,r6
1000424c:	180b883a 	mov	r5,r3
10004250:	100d883a 	mov	r6,r2
10004254:	00021381 	jmpi	10002138 <___vfprintf_internal_r>

10004258 <__swsetup_r>:
10004258:	00840074 	movhi	r2,4097
1000425c:	defffd04 	addi	sp,sp,-12
10004260:	10835704 	addi	r2,r2,3420
10004264:	dc400115 	stw	r17,4(sp)
10004268:	2023883a 	mov	r17,r4
1000426c:	11000017 	ldw	r4,0(r2)
10004270:	dc000015 	stw	r16,0(sp)
10004274:	dfc00215 	stw	ra,8(sp)
10004278:	2821883a 	mov	r16,r5
1000427c:	20000226 	beq	r4,zero,10004288 <__swsetup_r+0x30>
10004280:	20c00e17 	ldw	r3,56(r4)
10004284:	18002e26 	beq	r3,zero,10004340 <__swsetup_r+0xe8>
10004288:	8080030b 	ldhu	r2,12(r16)
1000428c:	10c0020c 	andi	r3,r2,8
10004290:	100d883a 	mov	r6,r2
10004294:	18000f26 	beq	r3,zero,100042d4 <__swsetup_r+0x7c>
10004298:	80c00417 	ldw	r3,16(r16)
1000429c:	18001526 	beq	r3,zero,100042f4 <__swsetup_r+0x9c>
100042a0:	1100004c 	andi	r4,r2,1
100042a4:	20001c1e 	bne	r4,zero,10004318 <__swsetup_r+0xc0>
100042a8:	1080008c 	andi	r2,r2,2
100042ac:	1000261e 	bne	r2,zero,10004348 <__swsetup_r+0xf0>
100042b0:	80800517 	ldw	r2,20(r16)
100042b4:	80800215 	stw	r2,8(r16)
100042b8:	18001c26 	beq	r3,zero,1000432c <__swsetup_r+0xd4>
100042bc:	0005883a 	mov	r2,zero
100042c0:	dfc00217 	ldw	ra,8(sp)
100042c4:	dc400117 	ldw	r17,4(sp)
100042c8:	dc000017 	ldw	r16,0(sp)
100042cc:	dec00304 	addi	sp,sp,12
100042d0:	f800283a 	ret
100042d4:	3080040c 	andi	r2,r6,16
100042d8:	10001726 	beq	r2,zero,10004338 <__swsetup_r+0xe0>
100042dc:	3080010c 	andi	r2,r6,4
100042e0:	10001b1e 	bne	r2,zero,10004350 <__swsetup_r+0xf8>
100042e4:	80c00417 	ldw	r3,16(r16)
100042e8:	30800214 	ori	r2,r6,8
100042ec:	8080030d 	sth	r2,12(r16)
100042f0:	183feb1e 	bne	r3,zero,100042a0 <__alt_data_end+0xf80042a0>
100042f4:	1140a00c 	andi	r5,r2,640
100042f8:	01008004 	movi	r4,512
100042fc:	293fe826 	beq	r5,r4,100042a0 <__alt_data_end+0xf80042a0>
10004300:	8809883a 	mov	r4,r17
10004304:	800b883a 	mov	r5,r16
10004308:	0006dec0 	call	10006dec <__smakebuf_r>
1000430c:	8080030b 	ldhu	r2,12(r16)
10004310:	80c00417 	ldw	r3,16(r16)
10004314:	003fe206 	br	100042a0 <__alt_data_end+0xf80042a0>
10004318:	80800517 	ldw	r2,20(r16)
1000431c:	80000215 	stw	zero,8(r16)
10004320:	0085c83a 	sub	r2,zero,r2
10004324:	80800615 	stw	r2,24(r16)
10004328:	183fe41e 	bne	r3,zero,100042bc <__alt_data_end+0xf80042bc>
1000432c:	8080030b 	ldhu	r2,12(r16)
10004330:	1080200c 	andi	r2,r2,128
10004334:	103fe226 	beq	r2,zero,100042c0 <__alt_data_end+0xf80042c0>
10004338:	00bfffc4 	movi	r2,-1
1000433c:	003fe006 	br	100042c0 <__alt_data_end+0xf80042c0>
10004340:	00062940 	call	10006294 <__sinit>
10004344:	003fd006 	br	10004288 <__alt_data_end+0xf8004288>
10004348:	0005883a 	mov	r2,zero
1000434c:	003fd906 	br	100042b4 <__alt_data_end+0xf80042b4>
10004350:	81400c17 	ldw	r5,48(r16)
10004354:	28000626 	beq	r5,zero,10004370 <__swsetup_r+0x118>
10004358:	80801004 	addi	r2,r16,64
1000435c:	28800326 	beq	r5,r2,1000436c <__swsetup_r+0x114>
10004360:	8809883a 	mov	r4,r17
10004364:	00064080 	call	10006408 <_free_r>
10004368:	8180030b 	ldhu	r6,12(r16)
1000436c:	80000c15 	stw	zero,48(r16)
10004370:	80c00417 	ldw	r3,16(r16)
10004374:	00bff6c4 	movi	r2,-37
10004378:	118c703a 	and	r6,r2,r6
1000437c:	80000115 	stw	zero,4(r16)
10004380:	80c00015 	stw	r3,0(r16)
10004384:	003fd806 	br	100042e8 <__alt_data_end+0xf80042e8>

10004388 <quorem>:
10004388:	defff204 	addi	sp,sp,-56
1000438c:	ddc00b15 	stw	r23,44(sp)
10004390:	20800417 	ldw	r2,16(r4)
10004394:	2dc00417 	ldw	r23,16(r5)
10004398:	dfc00d15 	stw	ra,52(sp)
1000439c:	df000c15 	stw	fp,48(sp)
100043a0:	dd800a15 	stw	r22,40(sp)
100043a4:	dd400915 	stw	r21,36(sp)
100043a8:	dd000815 	stw	r20,32(sp)
100043ac:	dcc00715 	stw	r19,28(sp)
100043b0:	dc800615 	stw	r18,24(sp)
100043b4:	dc400515 	stw	r17,20(sp)
100043b8:	dc000415 	stw	r16,16(sp)
100043bc:	15c07a16 	blt	r2,r23,100045a8 <quorem+0x220>
100043c0:	bdffffc4 	addi	r23,r23,-1
100043c4:	bde9883a 	add	r20,r23,r23
100043c8:	28c00504 	addi	r3,r5,20
100043cc:	a529883a 	add	r20,r20,r20
100043d0:	1d39883a 	add	fp,r3,r20
100043d4:	24c00504 	addi	r19,r4,20
100043d8:	d9400215 	stw	r5,8(sp)
100043dc:	9d29883a 	add	r20,r19,r20
100043e0:	e1400017 	ldw	r5,0(fp)
100043e4:	d9000015 	stw	r4,0(sp)
100043e8:	a1000017 	ldw	r4,0(r20)
100043ec:	29400044 	addi	r5,r5,1
100043f0:	d8c00115 	stw	r3,4(sp)
100043f4:	dd000315 	stw	r20,12(sp)
100043f8:	000c09c0 	call	1000c09c <__udivsi3>
100043fc:	1025883a 	mov	r18,r2
10004400:	10003026 	beq	r2,zero,100044c4 <quorem+0x13c>
10004404:	dc400117 	ldw	r17,4(sp)
10004408:	9829883a 	mov	r20,r19
1000440c:	002d883a 	mov	r22,zero
10004410:	0021883a 	mov	r16,zero
10004414:	8d400017 	ldw	r21,0(r17)
10004418:	900b883a 	mov	r5,r18
1000441c:	8c400104 	addi	r17,r17,4
10004420:	a93fffcc 	andi	r4,r21,65535
10004424:	000c0ac0 	call	1000c0ac <__mulsi3>
10004428:	a808d43a 	srli	r4,r21,16
1000442c:	900b883a 	mov	r5,r18
10004430:	b0ad883a 	add	r22,r22,r2
10004434:	000c0ac0 	call	1000c0ac <__mulsi3>
10004438:	a1000017 	ldw	r4,0(r20)
1000443c:	b00cd43a 	srli	r6,r22,16
10004440:	b0ffffcc 	andi	r3,r22,65535
10004444:	217fffcc 	andi	r5,r4,65535
10004448:	2c21883a 	add	r16,r5,r16
1000444c:	80c7c83a 	sub	r3,r16,r3
10004450:	2008d43a 	srli	r4,r4,16
10004454:	3085883a 	add	r2,r6,r2
10004458:	1821d43a 	srai	r16,r3,16
1000445c:	117fffcc 	andi	r5,r2,65535
10004460:	2149c83a 	sub	r4,r4,r5
10004464:	2421883a 	add	r16,r4,r16
10004468:	8008943a 	slli	r4,r16,16
1000446c:	18ffffcc 	andi	r3,r3,65535
10004470:	102cd43a 	srli	r22,r2,16
10004474:	20c8b03a 	or	r4,r4,r3
10004478:	a1000015 	stw	r4,0(r20)
1000447c:	8021d43a 	srai	r16,r16,16
10004480:	a5000104 	addi	r20,r20,4
10004484:	e47fe32e 	bgeu	fp,r17,10004414 <__alt_data_end+0xf8004414>
10004488:	d8c00317 	ldw	r3,12(sp)
1000448c:	18800017 	ldw	r2,0(r3)
10004490:	10000c1e 	bne	r2,zero,100044c4 <quorem+0x13c>
10004494:	18bfff04 	addi	r2,r3,-4
10004498:	9880082e 	bgeu	r19,r2,100044bc <quorem+0x134>
1000449c:	18ffff17 	ldw	r3,-4(r3)
100044a0:	18000326 	beq	r3,zero,100044b0 <quorem+0x128>
100044a4:	00000506 	br	100044bc <quorem+0x134>
100044a8:	10c00017 	ldw	r3,0(r2)
100044ac:	1800031e 	bne	r3,zero,100044bc <quorem+0x134>
100044b0:	10bfff04 	addi	r2,r2,-4
100044b4:	bdffffc4 	addi	r23,r23,-1
100044b8:	98bffb36 	bltu	r19,r2,100044a8 <__alt_data_end+0xf80044a8>
100044bc:	d8c00017 	ldw	r3,0(sp)
100044c0:	1dc00415 	stw	r23,16(r3)
100044c4:	d9000017 	ldw	r4,0(sp)
100044c8:	d9400217 	ldw	r5,8(sp)
100044cc:	00085680 	call	10008568 <__mcmp>
100044d0:	10002816 	blt	r2,zero,10004574 <quorem+0x1ec>
100044d4:	dc400117 	ldw	r17,4(sp)
100044d8:	94800044 	addi	r18,r18,1
100044dc:	980d883a 	mov	r6,r19
100044e0:	0007883a 	mov	r3,zero
100044e4:	31000017 	ldw	r4,0(r6)
100044e8:	89400017 	ldw	r5,0(r17)
100044ec:	31800104 	addi	r6,r6,4
100044f0:	20bfffcc 	andi	r2,r4,65535
100044f4:	10c7883a 	add	r3,r2,r3
100044f8:	28bfffcc 	andi	r2,r5,65535
100044fc:	1885c83a 	sub	r2,r3,r2
10004500:	280ad43a 	srli	r5,r5,16
10004504:	2008d43a 	srli	r4,r4,16
10004508:	1007d43a 	srai	r3,r2,16
1000450c:	10bfffcc 	andi	r2,r2,65535
10004510:	2149c83a 	sub	r4,r4,r5
10004514:	20c9883a 	add	r4,r4,r3
10004518:	200a943a 	slli	r5,r4,16
1000451c:	8c400104 	addi	r17,r17,4
10004520:	2007d43a 	srai	r3,r4,16
10004524:	2884b03a 	or	r2,r5,r2
10004528:	30bfff15 	stw	r2,-4(r6)
1000452c:	e47fed2e 	bgeu	fp,r17,100044e4 <__alt_data_end+0xf80044e4>
10004530:	bdc5883a 	add	r2,r23,r23
10004534:	1085883a 	add	r2,r2,r2
10004538:	9887883a 	add	r3,r19,r2
1000453c:	18800017 	ldw	r2,0(r3)
10004540:	10000c1e 	bne	r2,zero,10004574 <quorem+0x1ec>
10004544:	18bfff04 	addi	r2,r3,-4
10004548:	9880082e 	bgeu	r19,r2,1000456c <quorem+0x1e4>
1000454c:	18ffff17 	ldw	r3,-4(r3)
10004550:	18000326 	beq	r3,zero,10004560 <quorem+0x1d8>
10004554:	00000506 	br	1000456c <quorem+0x1e4>
10004558:	10c00017 	ldw	r3,0(r2)
1000455c:	1800031e 	bne	r3,zero,1000456c <quorem+0x1e4>
10004560:	10bfff04 	addi	r2,r2,-4
10004564:	bdffffc4 	addi	r23,r23,-1
10004568:	98bffb36 	bltu	r19,r2,10004558 <__alt_data_end+0xf8004558>
1000456c:	d8c00017 	ldw	r3,0(sp)
10004570:	1dc00415 	stw	r23,16(r3)
10004574:	9005883a 	mov	r2,r18
10004578:	dfc00d17 	ldw	ra,52(sp)
1000457c:	df000c17 	ldw	fp,48(sp)
10004580:	ddc00b17 	ldw	r23,44(sp)
10004584:	dd800a17 	ldw	r22,40(sp)
10004588:	dd400917 	ldw	r21,36(sp)
1000458c:	dd000817 	ldw	r20,32(sp)
10004590:	dcc00717 	ldw	r19,28(sp)
10004594:	dc800617 	ldw	r18,24(sp)
10004598:	dc400517 	ldw	r17,20(sp)
1000459c:	dc000417 	ldw	r16,16(sp)
100045a0:	dec00e04 	addi	sp,sp,56
100045a4:	f800283a 	ret
100045a8:	0005883a 	mov	r2,zero
100045ac:	003ff206 	br	10004578 <__alt_data_end+0xf8004578>

100045b0 <_dtoa_r>:
100045b0:	20801017 	ldw	r2,64(r4)
100045b4:	deffde04 	addi	sp,sp,-136
100045b8:	dd401d15 	stw	r21,116(sp)
100045bc:	dcc01b15 	stw	r19,108(sp)
100045c0:	dc801a15 	stw	r18,104(sp)
100045c4:	dc401915 	stw	r17,100(sp)
100045c8:	dc001815 	stw	r16,96(sp)
100045cc:	dfc02115 	stw	ra,132(sp)
100045d0:	df002015 	stw	fp,128(sp)
100045d4:	ddc01f15 	stw	r23,124(sp)
100045d8:	dd801e15 	stw	r22,120(sp)
100045dc:	dd001c15 	stw	r20,112(sp)
100045e0:	d9c00315 	stw	r7,12(sp)
100045e4:	2021883a 	mov	r16,r4
100045e8:	302b883a 	mov	r21,r6
100045ec:	2825883a 	mov	r18,r5
100045f0:	dc402417 	ldw	r17,144(sp)
100045f4:	3027883a 	mov	r19,r6
100045f8:	10000826 	beq	r2,zero,1000461c <_dtoa_r+0x6c>
100045fc:	21801117 	ldw	r6,68(r4)
10004600:	00c00044 	movi	r3,1
10004604:	100b883a 	mov	r5,r2
10004608:	1986983a 	sll	r3,r3,r6
1000460c:	11800115 	stw	r6,4(r2)
10004610:	10c00215 	stw	r3,8(r2)
10004614:	0007c940 	call	10007c94 <_Bfree>
10004618:	80001015 	stw	zero,64(r16)
1000461c:	a8002d16 	blt	r21,zero,100046d4 <_dtoa_r+0x124>
10004620:	88000015 	stw	zero,0(r17)
10004624:	a8dffc2c 	andhi	r3,r21,32752
10004628:	009ffc34 	movhi	r2,32752
1000462c:	18801b26 	beq	r3,r2,1000469c <_dtoa_r+0xec>
10004630:	9009883a 	mov	r4,r18
10004634:	980b883a 	mov	r5,r19
10004638:	000d883a 	mov	r6,zero
1000463c:	000f883a 	mov	r7,zero
10004640:	000d2f00 	call	1000d2f0 <__eqdf2>
10004644:	10002a1e 	bne	r2,zero,100046f0 <_dtoa_r+0x140>
10004648:	d8c02317 	ldw	r3,140(sp)
1000464c:	d9002517 	ldw	r4,148(sp)
10004650:	00800044 	movi	r2,1
10004654:	18800015 	stw	r2,0(r3)
10004658:	2001a226 	beq	r4,zero,10004ce4 <_dtoa_r+0x734>
1000465c:	00840074 	movhi	r2,4097
10004660:	10801e44 	addi	r2,r2,121
10004664:	20800015 	stw	r2,0(r4)
10004668:	10bfffc4 	addi	r2,r2,-1
1000466c:	dfc02117 	ldw	ra,132(sp)
10004670:	df002017 	ldw	fp,128(sp)
10004674:	ddc01f17 	ldw	r23,124(sp)
10004678:	dd801e17 	ldw	r22,120(sp)
1000467c:	dd401d17 	ldw	r21,116(sp)
10004680:	dd001c17 	ldw	r20,112(sp)
10004684:	dcc01b17 	ldw	r19,108(sp)
10004688:	dc801a17 	ldw	r18,104(sp)
1000468c:	dc401917 	ldw	r17,100(sp)
10004690:	dc001817 	ldw	r16,96(sp)
10004694:	dec02204 	addi	sp,sp,136
10004698:	f800283a 	ret
1000469c:	d8c02317 	ldw	r3,140(sp)
100046a0:	0089c3c4 	movi	r2,9999
100046a4:	18800015 	stw	r2,0(r3)
100046a8:	90017c26 	beq	r18,zero,10004c9c <_dtoa_r+0x6ec>
100046ac:	00840074 	movhi	r2,4097
100046b0:	10802a04 	addi	r2,r2,168
100046b4:	d9002517 	ldw	r4,148(sp)
100046b8:	203fec26 	beq	r4,zero,1000466c <__alt_data_end+0xf800466c>
100046bc:	10c000c7 	ldb	r3,3(r2)
100046c0:	18017d1e 	bne	r3,zero,10004cb8 <_dtoa_r+0x708>
100046c4:	10c000c4 	addi	r3,r2,3
100046c8:	d9802517 	ldw	r6,148(sp)
100046cc:	30c00015 	stw	r3,0(r6)
100046d0:	003fe606 	br	1000466c <__alt_data_end+0xf800466c>
100046d4:	04e00034 	movhi	r19,32768
100046d8:	9cffffc4 	addi	r19,r19,-1
100046dc:	00800044 	movi	r2,1
100046e0:	ace6703a 	and	r19,r21,r19
100046e4:	88800015 	stw	r2,0(r17)
100046e8:	982b883a 	mov	r21,r19
100046ec:	003fcd06 	br	10004624 <__alt_data_end+0xf8004624>
100046f0:	d8800204 	addi	r2,sp,8
100046f4:	a822d53a 	srli	r17,r21,20
100046f8:	d8800015 	stw	r2,0(sp)
100046fc:	8009883a 	mov	r4,r16
10004700:	900b883a 	mov	r5,r18
10004704:	980d883a 	mov	r6,r19
10004708:	d9c00104 	addi	r7,sp,4
1000470c:	00088dc0 	call	100088dc <__d2b>
10004710:	1039883a 	mov	fp,r2
10004714:	88016a1e 	bne	r17,zero,10004cc0 <_dtoa_r+0x710>
10004718:	dd000217 	ldw	r20,8(sp)
1000471c:	dc400117 	ldw	r17,4(sp)
10004720:	00befbc4 	movi	r2,-1041
10004724:	a463883a 	add	r17,r20,r17
10004728:	8882ea16 	blt	r17,r2,100052d4 <_dtoa_r+0xd24>
1000472c:	00bf0384 	movi	r2,-1010
10004730:	1445c83a 	sub	r2,r2,r17
10004734:	89010484 	addi	r4,r17,1042
10004738:	a8aa983a 	sll	r21,r21,r2
1000473c:	9108d83a 	srl	r4,r18,r4
10004740:	a908b03a 	or	r4,r21,r4
10004744:	000e7c80 	call	1000e7c8 <__floatunsidf>
10004748:	017f8434 	movhi	r5,65040
1000474c:	01800044 	movi	r6,1
10004750:	1009883a 	mov	r4,r2
10004754:	194b883a 	add	r5,r3,r5
10004758:	8c7fffc4 	addi	r17,r17,-1
1000475c:	d9800f15 	stw	r6,60(sp)
10004760:	000d883a 	mov	r6,zero
10004764:	01cffe34 	movhi	r7,16376
10004768:	000dda00 	call	1000dda0 <__subdf3>
1000476c:	0198dbf4 	movhi	r6,25455
10004770:	01cff4f4 	movhi	r7,16339
10004774:	1009883a 	mov	r4,r2
10004778:	180b883a 	mov	r5,r3
1000477c:	3190d844 	addi	r6,r6,17249
10004780:	39e1e9c4 	addi	r7,r7,-30809
10004784:	000d5340 	call	1000d534 <__muldf3>
10004788:	01a2d874 	movhi	r6,35681
1000478c:	01cff1f4 	movhi	r7,16327
10004790:	180b883a 	mov	r5,r3
10004794:	31b22cc4 	addi	r6,r6,-14157
10004798:	39e28a04 	addi	r7,r7,-30168
1000479c:	1009883a 	mov	r4,r2
100047a0:	000c0d40 	call	1000c0d4 <__adddf3>
100047a4:	8809883a 	mov	r4,r17
100047a8:	102d883a 	mov	r22,r2
100047ac:	182b883a 	mov	r21,r3
100047b0:	000e6f80 	call	1000e6f8 <__floatsidf>
100047b4:	019427f4 	movhi	r6,20639
100047b8:	01cff4f4 	movhi	r7,16339
100047bc:	1009883a 	mov	r4,r2
100047c0:	180b883a 	mov	r5,r3
100047c4:	319e7ec4 	addi	r6,r6,31227
100047c8:	39d104c4 	addi	r7,r7,17427
100047cc:	000d5340 	call	1000d534 <__muldf3>
100047d0:	b009883a 	mov	r4,r22
100047d4:	a80b883a 	mov	r5,r21
100047d8:	100d883a 	mov	r6,r2
100047dc:	180f883a 	mov	r7,r3
100047e0:	000c0d40 	call	1000c0d4 <__adddf3>
100047e4:	1009883a 	mov	r4,r2
100047e8:	180b883a 	mov	r5,r3
100047ec:	102d883a 	mov	r22,r2
100047f0:	182b883a 	mov	r21,r3
100047f4:	000e6700 	call	1000e670 <__fixdfsi>
100047f8:	b009883a 	mov	r4,r22
100047fc:	a80b883a 	mov	r5,r21
10004800:	000d883a 	mov	r6,zero
10004804:	000f883a 	mov	r7,zero
10004808:	d8800515 	stw	r2,20(sp)
1000480c:	000d4540 	call	1000d454 <__ledf2>
10004810:	10023116 	blt	r2,zero,100050d8 <_dtoa_r+0xb28>
10004814:	d8c00517 	ldw	r3,20(sp)
10004818:	00800584 	movi	r2,22
1000481c:	10c21f36 	bltu	r2,r3,1000509c <_dtoa_r+0xaec>
10004820:	180490fa 	slli	r2,r3,3
10004824:	00c40074 	movhi	r3,4097
10004828:	18c04604 	addi	r3,r3,280
1000482c:	1885883a 	add	r2,r3,r2
10004830:	11000017 	ldw	r4,0(r2)
10004834:	11400117 	ldw	r5,4(r2)
10004838:	900d883a 	mov	r6,r18
1000483c:	980f883a 	mov	r7,r19
10004840:	000d3740 	call	1000d374 <__gedf2>
10004844:	0082a70e 	bge	zero,r2,100052e4 <_dtoa_r+0xd34>
10004848:	d9000517 	ldw	r4,20(sp)
1000484c:	d8000c15 	stw	zero,48(sp)
10004850:	213fffc4 	addi	r4,r4,-1
10004854:	d9000515 	stw	r4,20(sp)
10004858:	a463c83a 	sub	r17,r20,r17
1000485c:	8dbfffc4 	addi	r22,r17,-1
10004860:	b0021916 	blt	r22,zero,100050c8 <_dtoa_r+0xb18>
10004864:	d8000815 	stw	zero,32(sp)
10004868:	d8800517 	ldw	r2,20(sp)
1000486c:	10020e16 	blt	r2,zero,100050a8 <_dtoa_r+0xaf8>
10004870:	b0ad883a 	add	r22,r22,r2
10004874:	d8800a15 	stw	r2,40(sp)
10004878:	d8000915 	stw	zero,36(sp)
1000487c:	d8c00317 	ldw	r3,12(sp)
10004880:	00800244 	movi	r2,9
10004884:	10c11a36 	bltu	r2,r3,10004cf0 <_dtoa_r+0x740>
10004888:	00800144 	movi	r2,5
1000488c:	10c4fc0e 	bge	r2,r3,10005c80 <_dtoa_r+0x16d0>
10004890:	18ffff04 	addi	r3,r3,-4
10004894:	d8c00315 	stw	r3,12(sp)
10004898:	0029883a 	mov	r20,zero
1000489c:	d9800317 	ldw	r6,12(sp)
100048a0:	008000c4 	movi	r2,3
100048a4:	3083bd26 	beq	r6,r2,1000579c <_dtoa_r+0x11ec>
100048a8:	1183670e 	bge	r2,r6,10005648 <_dtoa_r+0x1098>
100048ac:	d8c00317 	ldw	r3,12(sp)
100048b0:	00800104 	movi	r2,4
100048b4:	1882e726 	beq	r3,r2,10005454 <_dtoa_r+0xea4>
100048b8:	00800144 	movi	r2,5
100048bc:	1884f21e 	bne	r3,r2,10005c88 <_dtoa_r+0x16d8>
100048c0:	00800044 	movi	r2,1
100048c4:	d8800b15 	stw	r2,44(sp)
100048c8:	d8c02217 	ldw	r3,136(sp)
100048cc:	d9000517 	ldw	r4,20(sp)
100048d0:	1907883a 	add	r3,r3,r4
100048d4:	19800044 	addi	r6,r3,1
100048d8:	d8c00d15 	stw	r3,52(sp)
100048dc:	d9800615 	stw	r6,24(sp)
100048e0:	0183c30e 	bge	zero,r6,100057f0 <_dtoa_r+0x1240>
100048e4:	d9800617 	ldw	r6,24(sp)
100048e8:	3023883a 	mov	r17,r6
100048ec:	80001115 	stw	zero,68(r16)
100048f0:	008005c4 	movi	r2,23
100048f4:	1184f62e 	bgeu	r2,r6,10005cd0 <_dtoa_r+0x1720>
100048f8:	00c00044 	movi	r3,1
100048fc:	00800104 	movi	r2,4
10004900:	1085883a 	add	r2,r2,r2
10004904:	11000504 	addi	r4,r2,20
10004908:	180b883a 	mov	r5,r3
1000490c:	18c00044 	addi	r3,r3,1
10004910:	313ffb2e 	bgeu	r6,r4,10004900 <__alt_data_end+0xf8004900>
10004914:	81401115 	stw	r5,68(r16)
10004918:	8009883a 	mov	r4,r16
1000491c:	0007bec0 	call	10007bec <_Balloc>
10004920:	d8800715 	stw	r2,28(sp)
10004924:	80801015 	stw	r2,64(r16)
10004928:	00800384 	movi	r2,14
1000492c:	1440fd36 	bltu	r2,r17,10004d24 <_dtoa_r+0x774>
10004930:	a000fc26 	beq	r20,zero,10004d24 <_dtoa_r+0x774>
10004934:	d8800517 	ldw	r2,20(sp)
10004938:	0083b90e 	bge	zero,r2,10005820 <_dtoa_r+0x1270>
1000493c:	d8c00517 	ldw	r3,20(sp)
10004940:	108003cc 	andi	r2,r2,15
10004944:	100490fa 	slli	r2,r2,3
10004948:	182fd13a 	srai	r23,r3,4
1000494c:	00c40074 	movhi	r3,4097
10004950:	18c04604 	addi	r3,r3,280
10004954:	1885883a 	add	r2,r3,r2
10004958:	b8c0040c 	andi	r3,r23,16
1000495c:	12c00017 	ldw	r11,0(r2)
10004960:	12800117 	ldw	r10,4(r2)
10004964:	18039726 	beq	r3,zero,100057c4 <_dtoa_r+0x1214>
10004968:	00840074 	movhi	r2,4097
1000496c:	10803c04 	addi	r2,r2,240
10004970:	11800817 	ldw	r6,32(r2)
10004974:	11c00917 	ldw	r7,36(r2)
10004978:	9009883a 	mov	r4,r18
1000497c:	980b883a 	mov	r5,r19
10004980:	da801615 	stw	r10,88(sp)
10004984:	dac01515 	stw	r11,84(sp)
10004988:	000c9700 	call	1000c970 <__divdf3>
1000498c:	da801617 	ldw	r10,88(sp)
10004990:	dac01517 	ldw	r11,84(sp)
10004994:	bdc003cc 	andi	r23,r23,15
10004998:	044000c4 	movi	r17,3
1000499c:	d8800e15 	stw	r2,56(sp)
100049a0:	182b883a 	mov	r21,r3
100049a4:	b8001126 	beq	r23,zero,100049ec <_dtoa_r+0x43c>
100049a8:	05040074 	movhi	r20,4097
100049ac:	a5003c04 	addi	r20,r20,240
100049b0:	5805883a 	mov	r2,r11
100049b4:	5007883a 	mov	r3,r10
100049b8:	b980004c 	andi	r6,r23,1
100049bc:	1009883a 	mov	r4,r2
100049c0:	b82fd07a 	srai	r23,r23,1
100049c4:	180b883a 	mov	r5,r3
100049c8:	30000426 	beq	r6,zero,100049dc <_dtoa_r+0x42c>
100049cc:	a1800017 	ldw	r6,0(r20)
100049d0:	a1c00117 	ldw	r7,4(r20)
100049d4:	8c400044 	addi	r17,r17,1
100049d8:	000d5340 	call	1000d534 <__muldf3>
100049dc:	a5000204 	addi	r20,r20,8
100049e0:	b83ff51e 	bne	r23,zero,100049b8 <__alt_data_end+0xf80049b8>
100049e4:	1017883a 	mov	r11,r2
100049e8:	1815883a 	mov	r10,r3
100049ec:	d9000e17 	ldw	r4,56(sp)
100049f0:	a80b883a 	mov	r5,r21
100049f4:	580d883a 	mov	r6,r11
100049f8:	500f883a 	mov	r7,r10
100049fc:	000c9700 	call	1000c970 <__divdf3>
10004a00:	1029883a 	mov	r20,r2
10004a04:	182b883a 	mov	r21,r3
10004a08:	d9800c17 	ldw	r6,48(sp)
10004a0c:	30000626 	beq	r6,zero,10004a28 <_dtoa_r+0x478>
10004a10:	a009883a 	mov	r4,r20
10004a14:	a80b883a 	mov	r5,r21
10004a18:	000d883a 	mov	r6,zero
10004a1c:	01cffc34 	movhi	r7,16368
10004a20:	000d4540 	call	1000d454 <__ledf2>
10004a24:	10043216 	blt	r2,zero,10005af0 <_dtoa_r+0x1540>
10004a28:	8809883a 	mov	r4,r17
10004a2c:	000e6f80 	call	1000e6f8 <__floatsidf>
10004a30:	1009883a 	mov	r4,r2
10004a34:	180b883a 	mov	r5,r3
10004a38:	a00d883a 	mov	r6,r20
10004a3c:	a80f883a 	mov	r7,r21
10004a40:	000d5340 	call	1000d534 <__muldf3>
10004a44:	000d883a 	mov	r6,zero
10004a48:	1009883a 	mov	r4,r2
10004a4c:	180b883a 	mov	r5,r3
10004a50:	01d00734 	movhi	r7,16412
10004a54:	000c0d40 	call	1000c0d4 <__adddf3>
10004a58:	1023883a 	mov	r17,r2
10004a5c:	d9800617 	ldw	r6,24(sp)
10004a60:	00bf3034 	movhi	r2,64704
10004a64:	1885883a 	add	r2,r3,r2
10004a68:	d8800e15 	stw	r2,56(sp)
10004a6c:	30032e26 	beq	r6,zero,10005728 <_dtoa_r+0x1178>
10004a70:	d8c00517 	ldw	r3,20(sp)
10004a74:	da800617 	ldw	r10,24(sp)
10004a78:	d8c01215 	stw	r3,72(sp)
10004a7c:	d9000b17 	ldw	r4,44(sp)
10004a80:	2003b026 	beq	r4,zero,10005944 <_dtoa_r+0x1394>
10004a84:	50bfffc4 	addi	r2,r10,-1
10004a88:	100490fa 	slli	r2,r2,3
10004a8c:	00c40074 	movhi	r3,4097
10004a90:	18c04604 	addi	r3,r3,280
10004a94:	1885883a 	add	r2,r3,r2
10004a98:	11800017 	ldw	r6,0(r2)
10004a9c:	11c00117 	ldw	r7,4(r2)
10004aa0:	d8800717 	ldw	r2,28(sp)
10004aa4:	0009883a 	mov	r4,zero
10004aa8:	014ff834 	movhi	r5,16352
10004aac:	da801615 	stw	r10,88(sp)
10004ab0:	15c00044 	addi	r23,r2,1
10004ab4:	000c9700 	call	1000c970 <__divdf3>
10004ab8:	d9c00e17 	ldw	r7,56(sp)
10004abc:	880d883a 	mov	r6,r17
10004ac0:	1009883a 	mov	r4,r2
10004ac4:	180b883a 	mov	r5,r3
10004ac8:	000dda00 	call	1000dda0 <__subdf3>
10004acc:	a80b883a 	mov	r5,r21
10004ad0:	a009883a 	mov	r4,r20
10004ad4:	d8c01015 	stw	r3,64(sp)
10004ad8:	d8800e15 	stw	r2,56(sp)
10004adc:	000e6700 	call	1000e670 <__fixdfsi>
10004ae0:	1009883a 	mov	r4,r2
10004ae4:	d8801715 	stw	r2,92(sp)
10004ae8:	000e6f80 	call	1000e6f8 <__floatsidf>
10004aec:	a009883a 	mov	r4,r20
10004af0:	a80b883a 	mov	r5,r21
10004af4:	100d883a 	mov	r6,r2
10004af8:	180f883a 	mov	r7,r3
10004afc:	000dda00 	call	1000dda0 <__subdf3>
10004b00:	da001717 	ldw	r8,92(sp)
10004b04:	1829883a 	mov	r20,r3
10004b08:	d8c00717 	ldw	r3,28(sp)
10004b0c:	d9000e17 	ldw	r4,56(sp)
10004b10:	d9401017 	ldw	r5,64(sp)
10004b14:	42000c04 	addi	r8,r8,48
10004b18:	1023883a 	mov	r17,r2
10004b1c:	1a000005 	stb	r8,0(r3)
10004b20:	880d883a 	mov	r6,r17
10004b24:	a00f883a 	mov	r7,r20
10004b28:	402b883a 	mov	r21,r8
10004b2c:	000d3740 	call	1000d374 <__gedf2>
10004b30:	00844516 	blt	zero,r2,10005c48 <_dtoa_r+0x1698>
10004b34:	0009883a 	mov	r4,zero
10004b38:	014ffc34 	movhi	r5,16368
10004b3c:	880d883a 	mov	r6,r17
10004b40:	a00f883a 	mov	r7,r20
10004b44:	000dda00 	call	1000dda0 <__subdf3>
10004b48:	d9000e17 	ldw	r4,56(sp)
10004b4c:	d9401017 	ldw	r5,64(sp)
10004b50:	100d883a 	mov	r6,r2
10004b54:	180f883a 	mov	r7,r3
10004b58:	000d3740 	call	1000d374 <__gedf2>
10004b5c:	da801617 	ldw	r10,88(sp)
10004b60:	00843616 	blt	zero,r2,10005c3c <_dtoa_r+0x168c>
10004b64:	00800044 	movi	r2,1
10004b68:	12806e0e 	bge	r2,r10,10004d24 <_dtoa_r+0x774>
10004b6c:	d9000717 	ldw	r4,28(sp)
10004b70:	dd801315 	stw	r22,76(sp)
10004b74:	dc001115 	stw	r16,68(sp)
10004b78:	2295883a 	add	r10,r4,r10
10004b7c:	dcc01415 	stw	r19,80(sp)
10004b80:	502d883a 	mov	r22,r10
10004b84:	dcc01017 	ldw	r19,64(sp)
10004b88:	b821883a 	mov	r16,r23
10004b8c:	dc801015 	stw	r18,64(sp)
10004b90:	dc800e17 	ldw	r18,56(sp)
10004b94:	00000906 	br	10004bbc <_dtoa_r+0x60c>
10004b98:	000dda00 	call	1000dda0 <__subdf3>
10004b9c:	1009883a 	mov	r4,r2
10004ba0:	180b883a 	mov	r5,r3
10004ba4:	900d883a 	mov	r6,r18
10004ba8:	980f883a 	mov	r7,r19
10004bac:	000d4540 	call	1000d454 <__ledf2>
10004bb0:	10040e16 	blt	r2,zero,10005bec <_dtoa_r+0x163c>
10004bb4:	b821883a 	mov	r16,r23
10004bb8:	bd841026 	beq	r23,r22,10005bfc <_dtoa_r+0x164c>
10004bbc:	9009883a 	mov	r4,r18
10004bc0:	980b883a 	mov	r5,r19
10004bc4:	000d883a 	mov	r6,zero
10004bc8:	01d00934 	movhi	r7,16420
10004bcc:	000d5340 	call	1000d534 <__muldf3>
10004bd0:	000d883a 	mov	r6,zero
10004bd4:	01d00934 	movhi	r7,16420
10004bd8:	8809883a 	mov	r4,r17
10004bdc:	a00b883a 	mov	r5,r20
10004be0:	1025883a 	mov	r18,r2
10004be4:	1827883a 	mov	r19,r3
10004be8:	000d5340 	call	1000d534 <__muldf3>
10004bec:	180b883a 	mov	r5,r3
10004bf0:	1009883a 	mov	r4,r2
10004bf4:	1823883a 	mov	r17,r3
10004bf8:	1029883a 	mov	r20,r2
10004bfc:	000e6700 	call	1000e670 <__fixdfsi>
10004c00:	1009883a 	mov	r4,r2
10004c04:	102b883a 	mov	r21,r2
10004c08:	000e6f80 	call	1000e6f8 <__floatsidf>
10004c0c:	a009883a 	mov	r4,r20
10004c10:	880b883a 	mov	r5,r17
10004c14:	100d883a 	mov	r6,r2
10004c18:	180f883a 	mov	r7,r3
10004c1c:	000dda00 	call	1000dda0 <__subdf3>
10004c20:	ad400c04 	addi	r21,r21,48
10004c24:	1009883a 	mov	r4,r2
10004c28:	180b883a 	mov	r5,r3
10004c2c:	900d883a 	mov	r6,r18
10004c30:	980f883a 	mov	r7,r19
10004c34:	85400005 	stb	r21,0(r16)
10004c38:	1023883a 	mov	r17,r2
10004c3c:	1829883a 	mov	r20,r3
10004c40:	000d4540 	call	1000d454 <__ledf2>
10004c44:	bdc00044 	addi	r23,r23,1
10004c48:	0009883a 	mov	r4,zero
10004c4c:	014ffc34 	movhi	r5,16368
10004c50:	880d883a 	mov	r6,r17
10004c54:	a00f883a 	mov	r7,r20
10004c58:	103fcf0e 	bge	r2,zero,10004b98 <__alt_data_end+0xf8004b98>
10004c5c:	d9801217 	ldw	r6,72(sp)
10004c60:	dc001117 	ldw	r16,68(sp)
10004c64:	d9800515 	stw	r6,20(sp)
10004c68:	8009883a 	mov	r4,r16
10004c6c:	e00b883a 	mov	r5,fp
10004c70:	0007c940 	call	10007c94 <_Bfree>
10004c74:	d8c00517 	ldw	r3,20(sp)
10004c78:	d9002317 	ldw	r4,140(sp)
10004c7c:	d9802517 	ldw	r6,148(sp)
10004c80:	b8000005 	stb	zero,0(r23)
10004c84:	18800044 	addi	r2,r3,1
10004c88:	20800015 	stw	r2,0(r4)
10004c8c:	30027226 	beq	r6,zero,10005658 <_dtoa_r+0x10a8>
10004c90:	35c00015 	stw	r23,0(r6)
10004c94:	d8800717 	ldw	r2,28(sp)
10004c98:	003e7406 	br	1000466c <__alt_data_end+0xf800466c>
10004c9c:	00800434 	movhi	r2,16
10004ca0:	10bfffc4 	addi	r2,r2,-1
10004ca4:	a8aa703a 	and	r21,r21,r2
10004ca8:	a83e801e 	bne	r21,zero,100046ac <__alt_data_end+0xf80046ac>
10004cac:	00840074 	movhi	r2,4097
10004cb0:	10802704 	addi	r2,r2,156
10004cb4:	003e7f06 	br	100046b4 <__alt_data_end+0xf80046b4>
10004cb8:	10c00204 	addi	r3,r2,8
10004cbc:	003e8206 	br	100046c8 <__alt_data_end+0xf80046c8>
10004cc0:	01400434 	movhi	r5,16
10004cc4:	297fffc4 	addi	r5,r5,-1
10004cc8:	994a703a 	and	r5,r19,r5
10004ccc:	9009883a 	mov	r4,r18
10004cd0:	8c7f0044 	addi	r17,r17,-1023
10004cd4:	294ffc34 	orhi	r5,r5,16368
10004cd8:	dd000217 	ldw	r20,8(sp)
10004cdc:	d8000f15 	stw	zero,60(sp)
10004ce0:	003e9f06 	br	10004760 <__alt_data_end+0xf8004760>
10004ce4:	00840074 	movhi	r2,4097
10004ce8:	10801e04 	addi	r2,r2,120
10004cec:	003e5f06 	br	1000466c <__alt_data_end+0xf800466c>
10004cf0:	80001115 	stw	zero,68(r16)
10004cf4:	8009883a 	mov	r4,r16
10004cf8:	000b883a 	mov	r5,zero
10004cfc:	0007bec0 	call	10007bec <_Balloc>
10004d00:	01bfffc4 	movi	r6,-1
10004d04:	d8800715 	stw	r2,28(sp)
10004d08:	80801015 	stw	r2,64(r16)
10004d0c:	00800044 	movi	r2,1
10004d10:	d9800615 	stw	r6,24(sp)
10004d14:	d8800b15 	stw	r2,44(sp)
10004d18:	d8002215 	stw	zero,136(sp)
10004d1c:	d9800d15 	stw	r6,52(sp)
10004d20:	d8000315 	stw	zero,12(sp)
10004d24:	d8800117 	ldw	r2,4(sp)
10004d28:	10008e16 	blt	r2,zero,10004f64 <_dtoa_r+0x9b4>
10004d2c:	d9000517 	ldw	r4,20(sp)
10004d30:	00c00384 	movi	r3,14
10004d34:	19008b16 	blt	r3,r4,10004f64 <_dtoa_r+0x9b4>
10004d38:	200490fa 	slli	r2,r4,3
10004d3c:	00c40074 	movhi	r3,4097
10004d40:	d9802217 	ldw	r6,136(sp)
10004d44:	18c04604 	addi	r3,r3,280
10004d48:	1885883a 	add	r2,r3,r2
10004d4c:	14400017 	ldw	r17,0(r2)
10004d50:	15000117 	ldw	r20,4(r2)
10004d54:	3001c716 	blt	r6,zero,10005474 <_dtoa_r+0xec4>
10004d58:	880d883a 	mov	r6,r17
10004d5c:	a00f883a 	mov	r7,r20
10004d60:	9009883a 	mov	r4,r18
10004d64:	980b883a 	mov	r5,r19
10004d68:	000c9700 	call	1000c970 <__divdf3>
10004d6c:	180b883a 	mov	r5,r3
10004d70:	1009883a 	mov	r4,r2
10004d74:	000e6700 	call	1000e670 <__fixdfsi>
10004d78:	1009883a 	mov	r4,r2
10004d7c:	102d883a 	mov	r22,r2
10004d80:	000e6f80 	call	1000e6f8 <__floatsidf>
10004d84:	1009883a 	mov	r4,r2
10004d88:	180b883a 	mov	r5,r3
10004d8c:	880d883a 	mov	r6,r17
10004d90:	a00f883a 	mov	r7,r20
10004d94:	000d5340 	call	1000d534 <__muldf3>
10004d98:	9009883a 	mov	r4,r18
10004d9c:	980b883a 	mov	r5,r19
10004da0:	100d883a 	mov	r6,r2
10004da4:	180f883a 	mov	r7,r3
10004da8:	000dda00 	call	1000dda0 <__subdf3>
10004dac:	d9000717 	ldw	r4,28(sp)
10004db0:	d9800617 	ldw	r6,24(sp)
10004db4:	180b883a 	mov	r5,r3
10004db8:	b0c00c04 	addi	r3,r22,48
10004dbc:	20c00005 	stb	r3,0(r4)
10004dc0:	25c00044 	addi	r23,r4,1
10004dc4:	01000044 	movi	r4,1
10004dc8:	1011883a 	mov	r8,r2
10004dcc:	2807883a 	mov	r3,r5
10004dd0:	31003d26 	beq	r6,r4,10004ec8 <_dtoa_r+0x918>
10004dd4:	000d883a 	mov	r6,zero
10004dd8:	01d00934 	movhi	r7,16420
10004ddc:	1009883a 	mov	r4,r2
10004de0:	000d5340 	call	1000d534 <__muldf3>
10004de4:	1009883a 	mov	r4,r2
10004de8:	180b883a 	mov	r5,r3
10004dec:	000d883a 	mov	r6,zero
10004df0:	000f883a 	mov	r7,zero
10004df4:	1027883a 	mov	r19,r2
10004df8:	182b883a 	mov	r21,r3
10004dfc:	000d2f00 	call	1000d2f0 <__eqdf2>
10004e00:	103f9926 	beq	r2,zero,10004c68 <__alt_data_end+0xf8004c68>
10004e04:	d8c00617 	ldw	r3,24(sp)
10004e08:	d9000717 	ldw	r4,28(sp)
10004e0c:	b825883a 	mov	r18,r23
10004e10:	18bfffc4 	addi	r2,r3,-1
10004e14:	20ad883a 	add	r22,r4,r2
10004e18:	dc000315 	stw	r16,12(sp)
10004e1c:	00000a06 	br	10004e48 <_dtoa_r+0x898>
10004e20:	000d5340 	call	1000d534 <__muldf3>
10004e24:	1009883a 	mov	r4,r2
10004e28:	180b883a 	mov	r5,r3
10004e2c:	000d883a 	mov	r6,zero
10004e30:	000f883a 	mov	r7,zero
10004e34:	1027883a 	mov	r19,r2
10004e38:	182b883a 	mov	r21,r3
10004e3c:	b825883a 	mov	r18,r23
10004e40:	000d2f00 	call	1000d2f0 <__eqdf2>
10004e44:	10022626 	beq	r2,zero,100056e0 <_dtoa_r+0x1130>
10004e48:	880d883a 	mov	r6,r17
10004e4c:	a00f883a 	mov	r7,r20
10004e50:	9809883a 	mov	r4,r19
10004e54:	a80b883a 	mov	r5,r21
10004e58:	000c9700 	call	1000c970 <__divdf3>
10004e5c:	180b883a 	mov	r5,r3
10004e60:	1009883a 	mov	r4,r2
10004e64:	000e6700 	call	1000e670 <__fixdfsi>
10004e68:	1009883a 	mov	r4,r2
10004e6c:	1021883a 	mov	r16,r2
10004e70:	000e6f80 	call	1000e6f8 <__floatsidf>
10004e74:	1009883a 	mov	r4,r2
10004e78:	180b883a 	mov	r5,r3
10004e7c:	880d883a 	mov	r6,r17
10004e80:	a00f883a 	mov	r7,r20
10004e84:	000d5340 	call	1000d534 <__muldf3>
10004e88:	9809883a 	mov	r4,r19
10004e8c:	a80b883a 	mov	r5,r21
10004e90:	100d883a 	mov	r6,r2
10004e94:	180f883a 	mov	r7,r3
10004e98:	000dda00 	call	1000dda0 <__subdf3>
10004e9c:	82000c04 	addi	r8,r16,48
10004ea0:	92000005 	stb	r8,0(r18)
10004ea4:	1009883a 	mov	r4,r2
10004ea8:	180b883a 	mov	r5,r3
10004eac:	000d883a 	mov	r6,zero
10004eb0:	01d00934 	movhi	r7,16420
10004eb4:	1011883a 	mov	r8,r2
10004eb8:	bdc00044 	addi	r23,r23,1
10004ebc:	95bfd81e 	bne	r18,r22,10004e20 <__alt_data_end+0xf8004e20>
10004ec0:	802d883a 	mov	r22,r16
10004ec4:	dc000317 	ldw	r16,12(sp)
10004ec8:	4009883a 	mov	r4,r8
10004ecc:	180b883a 	mov	r5,r3
10004ed0:	400d883a 	mov	r6,r8
10004ed4:	180f883a 	mov	r7,r3
10004ed8:	000c0d40 	call	1000c0d4 <__adddf3>
10004edc:	8809883a 	mov	r4,r17
10004ee0:	a00b883a 	mov	r5,r20
10004ee4:	100d883a 	mov	r6,r2
10004ee8:	180f883a 	mov	r7,r3
10004eec:	1027883a 	mov	r19,r2
10004ef0:	1825883a 	mov	r18,r3
10004ef4:	000d4540 	call	1000d454 <__ledf2>
10004ef8:	10000816 	blt	r2,zero,10004f1c <_dtoa_r+0x96c>
10004efc:	8809883a 	mov	r4,r17
10004f00:	a00b883a 	mov	r5,r20
10004f04:	980d883a 	mov	r6,r19
10004f08:	900f883a 	mov	r7,r18
10004f0c:	000d2f00 	call	1000d2f0 <__eqdf2>
10004f10:	103f551e 	bne	r2,zero,10004c68 <__alt_data_end+0xf8004c68>
10004f14:	b580004c 	andi	r22,r22,1
10004f18:	b03f5326 	beq	r22,zero,10004c68 <__alt_data_end+0xf8004c68>
10004f1c:	bd7fffc3 	ldbu	r21,-1(r23)
10004f20:	b8bfffc4 	addi	r2,r23,-1
10004f24:	1007883a 	mov	r3,r2
10004f28:	01400e44 	movi	r5,57
10004f2c:	d9800717 	ldw	r6,28(sp)
10004f30:	00000506 	br	10004f48 <_dtoa_r+0x998>
10004f34:	18ffffc4 	addi	r3,r3,-1
10004f38:	30825e26 	beq	r6,r2,100058b4 <_dtoa_r+0x1304>
10004f3c:	1d400003 	ldbu	r21,0(r3)
10004f40:	102f883a 	mov	r23,r2
10004f44:	10bfffc4 	addi	r2,r2,-1
10004f48:	a9003fcc 	andi	r4,r21,255
10004f4c:	2100201c 	xori	r4,r4,128
10004f50:	213fe004 	addi	r4,r4,-128
10004f54:	217ff726 	beq	r4,r5,10004f34 <__alt_data_end+0xf8004f34>
10004f58:	aa000044 	addi	r8,r21,1
10004f5c:	12000005 	stb	r8,0(r2)
10004f60:	003f4106 	br	10004c68 <__alt_data_end+0xf8004c68>
10004f64:	d8c00b17 	ldw	r3,44(sp)
10004f68:	18006726 	beq	r3,zero,10005108 <_dtoa_r+0xb58>
10004f6c:	d9000317 	ldw	r4,12(sp)
10004f70:	00c00044 	movi	r3,1
10004f74:	19016a0e 	bge	r3,r4,10005520 <_dtoa_r+0xf70>
10004f78:	d8800617 	ldw	r2,24(sp)
10004f7c:	d8c00917 	ldw	r3,36(sp)
10004f80:	157fffc4 	addi	r21,r2,-1
10004f84:	1d420716 	blt	r3,r21,100057a4 <_dtoa_r+0x11f4>
10004f88:	1d6bc83a 	sub	r21,r3,r21
10004f8c:	d8800617 	ldw	r2,24(sp)
10004f90:	1002c716 	blt	r2,zero,10005ab0 <_dtoa_r+0x1500>
10004f94:	dd000817 	ldw	r20,32(sp)
10004f98:	d8800617 	ldw	r2,24(sp)
10004f9c:	d9800817 	ldw	r6,32(sp)
10004fa0:	8009883a 	mov	r4,r16
10004fa4:	01400044 	movi	r5,1
10004fa8:	308d883a 	add	r6,r6,r2
10004fac:	d9800815 	stw	r6,32(sp)
10004fb0:	b0ad883a 	add	r22,r22,r2
10004fb4:	00080140 	call	10008014 <__i2b>
10004fb8:	1023883a 	mov	r17,r2
10004fbc:	a0000826 	beq	r20,zero,10004fe0 <_dtoa_r+0xa30>
10004fc0:	0580070e 	bge	zero,r22,10004fe0 <_dtoa_r+0xa30>
10004fc4:	b005883a 	mov	r2,r22
10004fc8:	a5812016 	blt	r20,r22,1000544c <_dtoa_r+0xe9c>
10004fcc:	d8c00817 	ldw	r3,32(sp)
10004fd0:	a0a9c83a 	sub	r20,r20,r2
10004fd4:	b0adc83a 	sub	r22,r22,r2
10004fd8:	1887c83a 	sub	r3,r3,r2
10004fdc:	d8c00815 	stw	r3,32(sp)
10004fe0:	d9000917 	ldw	r4,36(sp)
10004fe4:	0100140e 	bge	zero,r4,10005038 <_dtoa_r+0xa88>
10004fe8:	d9800b17 	ldw	r6,44(sp)
10004fec:	3001e526 	beq	r6,zero,10005784 <_dtoa_r+0x11d4>
10004ff0:	05400e0e 	bge	zero,r21,1000502c <_dtoa_r+0xa7c>
10004ff4:	880b883a 	mov	r5,r17
10004ff8:	8009883a 	mov	r4,r16
10004ffc:	a80d883a 	mov	r6,r21
10005000:	00082e00 	call	100082e0 <__pow5mult>
10005004:	e00d883a 	mov	r6,fp
10005008:	8009883a 	mov	r4,r16
1000500c:	100b883a 	mov	r5,r2
10005010:	1023883a 	mov	r17,r2
10005014:	00080500 	call	10008050 <__multiply>
10005018:	102f883a 	mov	r23,r2
1000501c:	e00b883a 	mov	r5,fp
10005020:	8009883a 	mov	r4,r16
10005024:	0007c940 	call	10007c94 <_Bfree>
10005028:	b839883a 	mov	fp,r23
1000502c:	d8800917 	ldw	r2,36(sp)
10005030:	154dc83a 	sub	r6,r2,r21
10005034:	3001281e 	bne	r6,zero,100054d8 <_dtoa_r+0xf28>
10005038:	05c00044 	movi	r23,1
1000503c:	8009883a 	mov	r4,r16
10005040:	b80b883a 	mov	r5,r23
10005044:	00080140 	call	10008014 <__i2b>
10005048:	d8c00a17 	ldw	r3,40(sp)
1000504c:	102b883a 	mov	r21,r2
10005050:	00c0310e 	bge	zero,r3,10005118 <_dtoa_r+0xb68>
10005054:	8009883a 	mov	r4,r16
10005058:	100b883a 	mov	r5,r2
1000505c:	180d883a 	mov	r6,r3
10005060:	00082e00 	call	100082e0 <__pow5mult>
10005064:	d9000317 	ldw	r4,12(sp)
10005068:	102b883a 	mov	r21,r2
1000506c:	b9011f0e 	bge	r23,r4,100054ec <_dtoa_r+0xf3c>
10005070:	0027883a 	mov	r19,zero
10005074:	a8800417 	ldw	r2,16(r21)
10005078:	10800104 	addi	r2,r2,4
1000507c:	1085883a 	add	r2,r2,r2
10005080:	1085883a 	add	r2,r2,r2
10005084:	a885883a 	add	r2,r21,r2
10005088:	11000017 	ldw	r4,0(r2)
1000508c:	0007efc0 	call	10007efc <__hi0bits>
10005090:	00c00804 	movi	r3,32
10005094:	1885c83a 	sub	r2,r3,r2
10005098:	00002506 	br	10005130 <_dtoa_r+0xb80>
1000509c:	01800044 	movi	r6,1
100050a0:	d9800c15 	stw	r6,48(sp)
100050a4:	003dec06 	br	10004858 <__alt_data_end+0xf8004858>
100050a8:	d8c00817 	ldw	r3,32(sp)
100050ac:	d9000517 	ldw	r4,20(sp)
100050b0:	d8000a15 	stw	zero,40(sp)
100050b4:	1907c83a 	sub	r3,r3,r4
100050b8:	010dc83a 	sub	r6,zero,r4
100050bc:	d8c00815 	stw	r3,32(sp)
100050c0:	d9800915 	stw	r6,36(sp)
100050c4:	003ded06 	br	1000487c <__alt_data_end+0xf800487c>
100050c8:	05adc83a 	sub	r22,zero,r22
100050cc:	dd800815 	stw	r22,32(sp)
100050d0:	002d883a 	mov	r22,zero
100050d4:	003de406 	br	10004868 <__alt_data_end+0xf8004868>
100050d8:	d9000517 	ldw	r4,20(sp)
100050dc:	000e6f80 	call	1000e6f8 <__floatsidf>
100050e0:	1009883a 	mov	r4,r2
100050e4:	180b883a 	mov	r5,r3
100050e8:	b00d883a 	mov	r6,r22
100050ec:	a80f883a 	mov	r7,r21
100050f0:	000d2f00 	call	1000d2f0 <__eqdf2>
100050f4:	103dc726 	beq	r2,zero,10004814 <__alt_data_end+0xf8004814>
100050f8:	d8800517 	ldw	r2,20(sp)
100050fc:	10bfffc4 	addi	r2,r2,-1
10005100:	d8800515 	stw	r2,20(sp)
10005104:	003dc306 	br	10004814 <__alt_data_end+0xf8004814>
10005108:	dd400917 	ldw	r21,36(sp)
1000510c:	dd000817 	ldw	r20,32(sp)
10005110:	0023883a 	mov	r17,zero
10005114:	003fa906 	br	10004fbc <__alt_data_end+0xf8004fbc>
10005118:	d9800317 	ldw	r6,12(sp)
1000511c:	b981670e 	bge	r23,r6,100056bc <_dtoa_r+0x110c>
10005120:	0027883a 	mov	r19,zero
10005124:	d8c00a17 	ldw	r3,40(sp)
10005128:	183fd21e 	bne	r3,zero,10005074 <__alt_data_end+0xf8005074>
1000512c:	00800044 	movi	r2,1
10005130:	1585883a 	add	r2,r2,r22
10005134:	108007cc 	andi	r2,r2,31
10005138:	10005f26 	beq	r2,zero,100052b8 <_dtoa_r+0xd08>
1000513c:	00c00804 	movi	r3,32
10005140:	1887c83a 	sub	r3,r3,r2
10005144:	01000104 	movi	r4,4
10005148:	20c2dd0e 	bge	r4,r3,10005cc0 <_dtoa_r+0x1710>
1000514c:	d9000817 	ldw	r4,32(sp)
10005150:	00c00704 	movi	r3,28
10005154:	1885c83a 	sub	r2,r3,r2
10005158:	2089883a 	add	r4,r4,r2
1000515c:	d9000815 	stw	r4,32(sp)
10005160:	a0a9883a 	add	r20,r20,r2
10005164:	b0ad883a 	add	r22,r22,r2
10005168:	d8800817 	ldw	r2,32(sp)
1000516c:	0080050e 	bge	zero,r2,10005184 <_dtoa_r+0xbd4>
10005170:	e00b883a 	mov	r5,fp
10005174:	8009883a 	mov	r4,r16
10005178:	100d883a 	mov	r6,r2
1000517c:	00084200 	call	10008420 <__lshift>
10005180:	1039883a 	mov	fp,r2
10005184:	0580050e 	bge	zero,r22,1000519c <_dtoa_r+0xbec>
10005188:	a80b883a 	mov	r5,r21
1000518c:	8009883a 	mov	r4,r16
10005190:	b00d883a 	mov	r6,r22
10005194:	00084200 	call	10008420 <__lshift>
10005198:	102b883a 	mov	r21,r2
1000519c:	d8c00c17 	ldw	r3,48(sp)
100051a0:	1801161e 	bne	r3,zero,100055fc <_dtoa_r+0x104c>
100051a4:	d8c00617 	ldw	r3,24(sp)
100051a8:	00c12d0e 	bge	zero,r3,10005660 <_dtoa_r+0x10b0>
100051ac:	d8c00b17 	ldw	r3,44(sp)
100051b0:	1800571e 	bne	r3,zero,10005310 <_dtoa_r+0xd60>
100051b4:	dc800717 	ldw	r18,28(sp)
100051b8:	dcc00617 	ldw	r19,24(sp)
100051bc:	9029883a 	mov	r20,r18
100051c0:	00000206 	br	100051cc <_dtoa_r+0xc1c>
100051c4:	0007cbc0 	call	10007cbc <__multadd>
100051c8:	1039883a 	mov	fp,r2
100051cc:	e009883a 	mov	r4,fp
100051d0:	a80b883a 	mov	r5,r21
100051d4:	00043880 	call	10004388 <quorem>
100051d8:	10800c04 	addi	r2,r2,48
100051dc:	90800005 	stb	r2,0(r18)
100051e0:	94800044 	addi	r18,r18,1
100051e4:	9507c83a 	sub	r3,r18,r20
100051e8:	8009883a 	mov	r4,r16
100051ec:	e00b883a 	mov	r5,fp
100051f0:	01800284 	movi	r6,10
100051f4:	000f883a 	mov	r7,zero
100051f8:	1cfff216 	blt	r3,r19,100051c4 <__alt_data_end+0xf80051c4>
100051fc:	1011883a 	mov	r8,r2
10005200:	d8800617 	ldw	r2,24(sp)
10005204:	00822e0e 	bge	zero,r2,10005ac0 <_dtoa_r+0x1510>
10005208:	d9000717 	ldw	r4,28(sp)
1000520c:	0025883a 	mov	r18,zero
10005210:	20af883a 	add	r23,r4,r2
10005214:	e00b883a 	mov	r5,fp
10005218:	01800044 	movi	r6,1
1000521c:	8009883a 	mov	r4,r16
10005220:	da001715 	stw	r8,92(sp)
10005224:	00084200 	call	10008420 <__lshift>
10005228:	1009883a 	mov	r4,r2
1000522c:	a80b883a 	mov	r5,r21
10005230:	1039883a 	mov	fp,r2
10005234:	00085680 	call	10008568 <__mcmp>
10005238:	da001717 	ldw	r8,92(sp)
1000523c:	00816e0e 	bge	zero,r2,100057f8 <_dtoa_r+0x1248>
10005240:	b93fffc3 	ldbu	r4,-1(r23)
10005244:	b8bfffc4 	addi	r2,r23,-1
10005248:	1007883a 	mov	r3,r2
1000524c:	01800e44 	movi	r6,57
10005250:	d9c00717 	ldw	r7,28(sp)
10005254:	00000506 	br	1000526c <_dtoa_r+0xcbc>
10005258:	18ffffc4 	addi	r3,r3,-1
1000525c:	38811926 	beq	r7,r2,100056c4 <_dtoa_r+0x1114>
10005260:	19000003 	ldbu	r4,0(r3)
10005264:	102f883a 	mov	r23,r2
10005268:	10bfffc4 	addi	r2,r2,-1
1000526c:	21403fcc 	andi	r5,r4,255
10005270:	2940201c 	xori	r5,r5,128
10005274:	297fe004 	addi	r5,r5,-128
10005278:	29bff726 	beq	r5,r6,10005258 <__alt_data_end+0xf8005258>
1000527c:	21000044 	addi	r4,r4,1
10005280:	11000005 	stb	r4,0(r2)
10005284:	8009883a 	mov	r4,r16
10005288:	a80b883a 	mov	r5,r21
1000528c:	0007c940 	call	10007c94 <_Bfree>
10005290:	883e7526 	beq	r17,zero,10004c68 <__alt_data_end+0xf8004c68>
10005294:	90000426 	beq	r18,zero,100052a8 <_dtoa_r+0xcf8>
10005298:	94400326 	beq	r18,r17,100052a8 <_dtoa_r+0xcf8>
1000529c:	8009883a 	mov	r4,r16
100052a0:	900b883a 	mov	r5,r18
100052a4:	0007c940 	call	10007c94 <_Bfree>
100052a8:	8009883a 	mov	r4,r16
100052ac:	880b883a 	mov	r5,r17
100052b0:	0007c940 	call	10007c94 <_Bfree>
100052b4:	003e6c06 	br	10004c68 <__alt_data_end+0xf8004c68>
100052b8:	00800704 	movi	r2,28
100052bc:	d9800817 	ldw	r6,32(sp)
100052c0:	a0a9883a 	add	r20,r20,r2
100052c4:	b0ad883a 	add	r22,r22,r2
100052c8:	308d883a 	add	r6,r6,r2
100052cc:	d9800815 	stw	r6,32(sp)
100052d0:	003fa506 	br	10005168 <__alt_data_end+0xf8005168>
100052d4:	013efb84 	movi	r4,-1042
100052d8:	246bc83a 	sub	r21,r4,r17
100052dc:	9548983a 	sll	r4,r18,r21
100052e0:	003d1806 	br	10004744 <__alt_data_end+0xf8004744>
100052e4:	d8000c15 	stw	zero,48(sp)
100052e8:	003d5b06 	br	10004858 <__alt_data_end+0xf8004858>
100052ec:	880b883a 	mov	r5,r17
100052f0:	8009883a 	mov	r4,r16
100052f4:	01800284 	movi	r6,10
100052f8:	000f883a 	mov	r7,zero
100052fc:	0007cbc0 	call	10007cbc <__multadd>
10005300:	1023883a 	mov	r17,r2
10005304:	d8800d17 	ldw	r2,52(sp)
10005308:	0082550e 	bge	zero,r2,10005c60 <_dtoa_r+0x16b0>
1000530c:	d8800615 	stw	r2,24(sp)
10005310:	0500050e 	bge	zero,r20,10005328 <_dtoa_r+0xd78>
10005314:	880b883a 	mov	r5,r17
10005318:	8009883a 	mov	r4,r16
1000531c:	a00d883a 	mov	r6,r20
10005320:	00084200 	call	10008420 <__lshift>
10005324:	1023883a 	mov	r17,r2
10005328:	98016a1e 	bne	r19,zero,100058d4 <_dtoa_r+0x1324>
1000532c:	8829883a 	mov	r20,r17
10005330:	d9000617 	ldw	r4,24(sp)
10005334:	dcc00717 	ldw	r19,28(sp)
10005338:	9480004c 	andi	r18,r18,1
1000533c:	20bfffc4 	addi	r2,r4,-1
10005340:	9885883a 	add	r2,r19,r2
10005344:	d8800415 	stw	r2,16(sp)
10005348:	dc800615 	stw	r18,24(sp)
1000534c:	e009883a 	mov	r4,fp
10005350:	a80b883a 	mov	r5,r21
10005354:	00043880 	call	10004388 <quorem>
10005358:	e009883a 	mov	r4,fp
1000535c:	880b883a 	mov	r5,r17
10005360:	102f883a 	mov	r23,r2
10005364:	00085680 	call	10008568 <__mcmp>
10005368:	8009883a 	mov	r4,r16
1000536c:	a80b883a 	mov	r5,r21
10005370:	a00d883a 	mov	r6,r20
10005374:	102d883a 	mov	r22,r2
10005378:	00085c80 	call	100085c8 <__mdiff>
1000537c:	1007883a 	mov	r3,r2
10005380:	10800317 	ldw	r2,12(r2)
10005384:	bc800c04 	addi	r18,r23,48
10005388:	1000971e 	bne	r2,zero,100055e8 <_dtoa_r+0x1038>
1000538c:	180b883a 	mov	r5,r3
10005390:	e009883a 	mov	r4,fp
10005394:	d8c01515 	stw	r3,84(sp)
10005398:	00085680 	call	10008568 <__mcmp>
1000539c:	d8c01517 	ldw	r3,84(sp)
100053a0:	8009883a 	mov	r4,r16
100053a4:	d8801515 	stw	r2,84(sp)
100053a8:	180b883a 	mov	r5,r3
100053ac:	0007c940 	call	10007c94 <_Bfree>
100053b0:	d8801517 	ldw	r2,84(sp)
100053b4:	1000041e 	bne	r2,zero,100053c8 <_dtoa_r+0xe18>
100053b8:	d9800317 	ldw	r6,12(sp)
100053bc:	3000021e 	bne	r6,zero,100053c8 <_dtoa_r+0xe18>
100053c0:	d8c00617 	ldw	r3,24(sp)
100053c4:	18007626 	beq	r3,zero,100055a0 <_dtoa_r+0xff0>
100053c8:	b0005b16 	blt	r22,zero,10005538 <_dtoa_r+0xf88>
100053cc:	b000041e 	bne	r22,zero,100053e0 <_dtoa_r+0xe30>
100053d0:	d9000317 	ldw	r4,12(sp)
100053d4:	2000021e 	bne	r4,zero,100053e0 <_dtoa_r+0xe30>
100053d8:	d8c00617 	ldw	r3,24(sp)
100053dc:	18005626 	beq	r3,zero,10005538 <_dtoa_r+0xf88>
100053e0:	00814d16 	blt	zero,r2,10005918 <_dtoa_r+0x1368>
100053e4:	d8c00417 	ldw	r3,16(sp)
100053e8:	9d800044 	addi	r22,r19,1
100053ec:	9c800005 	stb	r18,0(r19)
100053f0:	b02f883a 	mov	r23,r22
100053f4:	98c14c26 	beq	r19,r3,10005928 <_dtoa_r+0x1378>
100053f8:	e00b883a 	mov	r5,fp
100053fc:	8009883a 	mov	r4,r16
10005400:	01800284 	movi	r6,10
10005404:	000f883a 	mov	r7,zero
10005408:	0007cbc0 	call	10007cbc <__multadd>
1000540c:	1039883a 	mov	fp,r2
10005410:	8d006d26 	beq	r17,r20,100055c8 <_dtoa_r+0x1018>
10005414:	880b883a 	mov	r5,r17
10005418:	01800284 	movi	r6,10
1000541c:	000f883a 	mov	r7,zero
10005420:	8009883a 	mov	r4,r16
10005424:	0007cbc0 	call	10007cbc <__multadd>
10005428:	a00b883a 	mov	r5,r20
1000542c:	8009883a 	mov	r4,r16
10005430:	01800284 	movi	r6,10
10005434:	000f883a 	mov	r7,zero
10005438:	1023883a 	mov	r17,r2
1000543c:	0007cbc0 	call	10007cbc <__multadd>
10005440:	1029883a 	mov	r20,r2
10005444:	b027883a 	mov	r19,r22
10005448:	003fc006 	br	1000534c <__alt_data_end+0xf800534c>
1000544c:	a005883a 	mov	r2,r20
10005450:	003ede06 	br	10004fcc <__alt_data_end+0xf8004fcc>
10005454:	01000044 	movi	r4,1
10005458:	d9000b15 	stw	r4,44(sp)
1000545c:	d9802217 	ldw	r6,136(sp)
10005460:	0180dc0e 	bge	zero,r6,100057d4 <_dtoa_r+0x1224>
10005464:	3023883a 	mov	r17,r6
10005468:	d9800d15 	stw	r6,52(sp)
1000546c:	d9800615 	stw	r6,24(sp)
10005470:	003d1e06 	br	100048ec <__alt_data_end+0xf80048ec>
10005474:	d8800617 	ldw	r2,24(sp)
10005478:	00be3716 	blt	zero,r2,10004d58 <__alt_data_end+0xf8004d58>
1000547c:	1000be1e 	bne	r2,zero,10005778 <_dtoa_r+0x11c8>
10005480:	8809883a 	mov	r4,r17
10005484:	a00b883a 	mov	r5,r20
10005488:	000d883a 	mov	r6,zero
1000548c:	01d00534 	movhi	r7,16404
10005490:	000d5340 	call	1000d534 <__muldf3>
10005494:	1009883a 	mov	r4,r2
10005498:	180b883a 	mov	r5,r3
1000549c:	900d883a 	mov	r6,r18
100054a0:	980f883a 	mov	r7,r19
100054a4:	000d3740 	call	1000d374 <__gedf2>
100054a8:	002b883a 	mov	r21,zero
100054ac:	0023883a 	mov	r17,zero
100054b0:	10007a16 	blt	r2,zero,1000569c <_dtoa_r+0x10ec>
100054b4:	d9002217 	ldw	r4,136(sp)
100054b8:	ddc00717 	ldw	r23,28(sp)
100054bc:	0108303a 	nor	r4,zero,r4
100054c0:	d9000515 	stw	r4,20(sp)
100054c4:	8009883a 	mov	r4,r16
100054c8:	a80b883a 	mov	r5,r21
100054cc:	0007c940 	call	10007c94 <_Bfree>
100054d0:	883f751e 	bne	r17,zero,100052a8 <__alt_data_end+0xf80052a8>
100054d4:	003de406 	br	10004c68 <__alt_data_end+0xf8004c68>
100054d8:	e00b883a 	mov	r5,fp
100054dc:	8009883a 	mov	r4,r16
100054e0:	00082e00 	call	100082e0 <__pow5mult>
100054e4:	1039883a 	mov	fp,r2
100054e8:	003ed306 	br	10005038 <__alt_data_end+0xf8005038>
100054ec:	903ee01e 	bne	r18,zero,10005070 <__alt_data_end+0xf8005070>
100054f0:	00800434 	movhi	r2,16
100054f4:	10bfffc4 	addi	r2,r2,-1
100054f8:	9884703a 	and	r2,r19,r2
100054fc:	103f081e 	bne	r2,zero,10005120 <__alt_data_end+0xf8005120>
10005500:	9cdffc2c 	andhi	r19,r19,32752
10005504:	983f0626 	beq	r19,zero,10005120 <__alt_data_end+0xf8005120>
10005508:	d8800817 	ldw	r2,32(sp)
1000550c:	b5800044 	addi	r22,r22,1
10005510:	04c00044 	movi	r19,1
10005514:	10800044 	addi	r2,r2,1
10005518:	d8800815 	stw	r2,32(sp)
1000551c:	003f0106 	br	10005124 <__alt_data_end+0xf8005124>
10005520:	d9800f17 	ldw	r6,60(sp)
10005524:	30016826 	beq	r6,zero,10005ac8 <_dtoa_r+0x1518>
10005528:	10810cc4 	addi	r2,r2,1075
1000552c:	dd400917 	ldw	r21,36(sp)
10005530:	dd000817 	ldw	r20,32(sp)
10005534:	003e9906 	br	10004f9c <__alt_data_end+0xf8004f9c>
10005538:	9011883a 	mov	r8,r18
1000553c:	4007883a 	mov	r3,r8
10005540:	e02d883a 	mov	r22,fp
10005544:	0080100e 	bge	zero,r2,10005588 <_dtoa_r+0xfd8>
10005548:	01800044 	movi	r6,1
1000554c:	8009883a 	mov	r4,r16
10005550:	e00b883a 	mov	r5,fp
10005554:	da001515 	stw	r8,84(sp)
10005558:	da001715 	stw	r8,92(sp)
1000555c:	00084200 	call	10008420 <__lshift>
10005560:	1009883a 	mov	r4,r2
10005564:	a80b883a 	mov	r5,r21
10005568:	102d883a 	mov	r22,r2
1000556c:	00085680 	call	10008568 <__mcmp>
10005570:	d8c01517 	ldw	r3,84(sp)
10005574:	da001717 	ldw	r8,92(sp)
10005578:	0081a50e 	bge	zero,r2,10005c10 <_dtoa_r+0x1660>
1000557c:	00800e44 	movi	r2,57
10005580:	40817b26 	beq	r8,r2,10005b70 <_dtoa_r+0x15c0>
10005584:	40c00044 	addi	r3,r8,1
10005588:	8825883a 	mov	r18,r17
1000558c:	9dc00044 	addi	r23,r19,1
10005590:	98c00005 	stb	r3,0(r19)
10005594:	a023883a 	mov	r17,r20
10005598:	b039883a 	mov	fp,r22
1000559c:	003f3906 	br	10005284 <__alt_data_end+0xf8005284>
100055a0:	00800e44 	movi	r2,57
100055a4:	9011883a 	mov	r8,r18
100055a8:	90817226 	beq	r18,r2,10005b74 <_dtoa_r+0x15c4>
100055ac:	0580010e 	bge	zero,r22,100055b4 <_dtoa_r+0x1004>
100055b0:	ba000c44 	addi	r8,r23,49
100055b4:	8825883a 	mov	r18,r17
100055b8:	9dc00044 	addi	r23,r19,1
100055bc:	9a000005 	stb	r8,0(r19)
100055c0:	a023883a 	mov	r17,r20
100055c4:	003f2f06 	br	10005284 <__alt_data_end+0xf8005284>
100055c8:	880b883a 	mov	r5,r17
100055cc:	8009883a 	mov	r4,r16
100055d0:	01800284 	movi	r6,10
100055d4:	000f883a 	mov	r7,zero
100055d8:	0007cbc0 	call	10007cbc <__multadd>
100055dc:	1023883a 	mov	r17,r2
100055e0:	1029883a 	mov	r20,r2
100055e4:	003f9706 	br	10005444 <__alt_data_end+0xf8005444>
100055e8:	8009883a 	mov	r4,r16
100055ec:	180b883a 	mov	r5,r3
100055f0:	0007c940 	call	10007c94 <_Bfree>
100055f4:	00800044 	movi	r2,1
100055f8:	003f7306 	br	100053c8 <__alt_data_end+0xf80053c8>
100055fc:	e009883a 	mov	r4,fp
10005600:	a80b883a 	mov	r5,r21
10005604:	00085680 	call	10008568 <__mcmp>
10005608:	103ee60e 	bge	r2,zero,100051a4 <__alt_data_end+0xf80051a4>
1000560c:	8009883a 	mov	r4,r16
10005610:	e00b883a 	mov	r5,fp
10005614:	01800284 	movi	r6,10
10005618:	000f883a 	mov	r7,zero
1000561c:	0007cbc0 	call	10007cbc <__multadd>
10005620:	d9000517 	ldw	r4,20(sp)
10005624:	d9800b17 	ldw	r6,44(sp)
10005628:	1039883a 	mov	fp,r2
1000562c:	213fffc4 	addi	r4,r4,-1
10005630:	d9000515 	stw	r4,20(sp)
10005634:	303f2d1e 	bne	r6,zero,100052ec <__alt_data_end+0xf80052ec>
10005638:	d9000d17 	ldw	r4,52(sp)
1000563c:	0101780e 	bge	zero,r4,10005c20 <_dtoa_r+0x1670>
10005640:	d9000615 	stw	r4,24(sp)
10005644:	003edb06 	br	100051b4 <__alt_data_end+0xf80051b4>
10005648:	00800084 	movi	r2,2
1000564c:	30818e1e 	bne	r6,r2,10005c88 <_dtoa_r+0x16d8>
10005650:	d8000b15 	stw	zero,44(sp)
10005654:	003f8106 	br	1000545c <__alt_data_end+0xf800545c>
10005658:	d8800717 	ldw	r2,28(sp)
1000565c:	003c0306 	br	1000466c <__alt_data_end+0xf800466c>
10005660:	d9000317 	ldw	r4,12(sp)
10005664:	00800084 	movi	r2,2
10005668:	113ed00e 	bge	r2,r4,100051ac <__alt_data_end+0xf80051ac>
1000566c:	d8c00617 	ldw	r3,24(sp)
10005670:	183f901e 	bne	r3,zero,100054b4 <__alt_data_end+0xf80054b4>
10005674:	a80b883a 	mov	r5,r21
10005678:	8009883a 	mov	r4,r16
1000567c:	01800144 	movi	r6,5
10005680:	000f883a 	mov	r7,zero
10005684:	0007cbc0 	call	10007cbc <__multadd>
10005688:	e009883a 	mov	r4,fp
1000568c:	100b883a 	mov	r5,r2
10005690:	102b883a 	mov	r21,r2
10005694:	00085680 	call	10008568 <__mcmp>
10005698:	00bf860e 	bge	zero,r2,100054b4 <__alt_data_end+0xf80054b4>
1000569c:	d9800717 	ldw	r6,28(sp)
100056a0:	00800c44 	movi	r2,49
100056a4:	30800005 	stb	r2,0(r6)
100056a8:	d8800517 	ldw	r2,20(sp)
100056ac:	35c00044 	addi	r23,r6,1
100056b0:	10800044 	addi	r2,r2,1
100056b4:	d8800515 	stw	r2,20(sp)
100056b8:	003f8206 	br	100054c4 <__alt_data_end+0xf80054c4>
100056bc:	903e981e 	bne	r18,zero,10005120 <__alt_data_end+0xf8005120>
100056c0:	003f8b06 	br	100054f0 <__alt_data_end+0xf80054f0>
100056c4:	d9800517 	ldw	r6,20(sp)
100056c8:	d8c00717 	ldw	r3,28(sp)
100056cc:	00800c44 	movi	r2,49
100056d0:	31800044 	addi	r6,r6,1
100056d4:	d9800515 	stw	r6,20(sp)
100056d8:	18800005 	stb	r2,0(r3)
100056dc:	003ee906 	br	10005284 <__alt_data_end+0xf8005284>
100056e0:	dc000317 	ldw	r16,12(sp)
100056e4:	003d6006 	br	10004c68 <__alt_data_end+0xf8004c68>
100056e8:	8809883a 	mov	r4,r17
100056ec:	000e6f80 	call	1000e6f8 <__floatsidf>
100056f0:	a009883a 	mov	r4,r20
100056f4:	a80b883a 	mov	r5,r21
100056f8:	100d883a 	mov	r6,r2
100056fc:	180f883a 	mov	r7,r3
10005700:	000d5340 	call	1000d534 <__muldf3>
10005704:	1009883a 	mov	r4,r2
10005708:	180b883a 	mov	r5,r3
1000570c:	000d883a 	mov	r6,zero
10005710:	01d00734 	movhi	r7,16412
10005714:	000c0d40 	call	1000c0d4 <__adddf3>
10005718:	1023883a 	mov	r17,r2
1000571c:	00bf3034 	movhi	r2,64704
10005720:	1885883a 	add	r2,r3,r2
10005724:	d8800e15 	stw	r2,56(sp)
10005728:	a009883a 	mov	r4,r20
1000572c:	a80b883a 	mov	r5,r21
10005730:	000d883a 	mov	r6,zero
10005734:	01d00534 	movhi	r7,16404
10005738:	000dda00 	call	1000dda0 <__subdf3>
1000573c:	d9c00e17 	ldw	r7,56(sp)
10005740:	1009883a 	mov	r4,r2
10005744:	180b883a 	mov	r5,r3
10005748:	880d883a 	mov	r6,r17
1000574c:	102b883a 	mov	r21,r2
10005750:	1829883a 	mov	r20,r3
10005754:	000d3740 	call	1000d374 <__gedf2>
10005758:	00807716 	blt	zero,r2,10005938 <_dtoa_r+0x1388>
1000575c:	d8800e17 	ldw	r2,56(sp)
10005760:	a809883a 	mov	r4,r21
10005764:	a00b883a 	mov	r5,r20
10005768:	11e0003c 	xorhi	r7,r2,32768
1000576c:	880d883a 	mov	r6,r17
10005770:	000d4540 	call	1000d454 <__ledf2>
10005774:	103d6b0e 	bge	r2,zero,10004d24 <__alt_data_end+0xf8004d24>
10005778:	002b883a 	mov	r21,zero
1000577c:	0023883a 	mov	r17,zero
10005780:	003f4c06 	br	100054b4 <__alt_data_end+0xf80054b4>
10005784:	d9800917 	ldw	r6,36(sp)
10005788:	e00b883a 	mov	r5,fp
1000578c:	8009883a 	mov	r4,r16
10005790:	00082e00 	call	100082e0 <__pow5mult>
10005794:	1039883a 	mov	fp,r2
10005798:	003e2706 	br	10005038 <__alt_data_end+0xf8005038>
1000579c:	d8000b15 	stw	zero,44(sp)
100057a0:	003c4906 	br	100048c8 <__alt_data_end+0xf80048c8>
100057a4:	d9000917 	ldw	r4,36(sp)
100057a8:	d9800a17 	ldw	r6,40(sp)
100057ac:	dd400915 	stw	r21,36(sp)
100057b0:	a905c83a 	sub	r2,r21,r4
100057b4:	308d883a 	add	r6,r6,r2
100057b8:	d9800a15 	stw	r6,40(sp)
100057bc:	002b883a 	mov	r21,zero
100057c0:	003df206 	br	10004f8c <__alt_data_end+0xf8004f8c>
100057c4:	dc800e15 	stw	r18,56(sp)
100057c8:	982b883a 	mov	r21,r19
100057cc:	04400084 	movi	r17,2
100057d0:	003c7406 	br	100049a4 <__alt_data_end+0xf80049a4>
100057d4:	04400044 	movi	r17,1
100057d8:	dc400d15 	stw	r17,52(sp)
100057dc:	dc400615 	stw	r17,24(sp)
100057e0:	dc402215 	stw	r17,136(sp)
100057e4:	80001115 	stw	zero,68(r16)
100057e8:	000b883a 	mov	r5,zero
100057ec:	003c4a06 	br	10004918 <__alt_data_end+0xf8004918>
100057f0:	3023883a 	mov	r17,r6
100057f4:	003ffb06 	br	100057e4 <__alt_data_end+0xf80057e4>
100057f8:	1000021e 	bne	r2,zero,10005804 <_dtoa_r+0x1254>
100057fc:	4200004c 	andi	r8,r8,1
10005800:	403e8f1e 	bne	r8,zero,10005240 <__alt_data_end+0xf8005240>
10005804:	01000c04 	movi	r4,48
10005808:	00000106 	br	10005810 <_dtoa_r+0x1260>
1000580c:	102f883a 	mov	r23,r2
10005810:	b8bfffc4 	addi	r2,r23,-1
10005814:	10c00007 	ldb	r3,0(r2)
10005818:	193ffc26 	beq	r3,r4,1000580c <__alt_data_end+0xf800580c>
1000581c:	003e9906 	br	10005284 <__alt_data_end+0xf8005284>
10005820:	d9000517 	ldw	r4,20(sp)
10005824:	012fc83a 	sub	r23,zero,r4
10005828:	b800ad26 	beq	r23,zero,10005ae0 <_dtoa_r+0x1530>
1000582c:	b88003cc 	andi	r2,r23,15
10005830:	100490fa 	slli	r2,r2,3
10005834:	00c40074 	movhi	r3,4097
10005838:	18c04604 	addi	r3,r3,280
1000583c:	1885883a 	add	r2,r3,r2
10005840:	11800017 	ldw	r6,0(r2)
10005844:	11c00117 	ldw	r7,4(r2)
10005848:	b82fd13a 	srai	r23,r23,4
1000584c:	9009883a 	mov	r4,r18
10005850:	980b883a 	mov	r5,r19
10005854:	000d5340 	call	1000d534 <__muldf3>
10005858:	1029883a 	mov	r20,r2
1000585c:	182b883a 	mov	r21,r3
10005860:	b800f426 	beq	r23,zero,10005c34 <_dtoa_r+0x1684>
10005864:	02040074 	movhi	r8,4097
10005868:	42003c04 	addi	r8,r8,240
1000586c:	8029883a 	mov	r20,r16
10005870:	04400084 	movi	r17,2
10005874:	4021883a 	mov	r16,r8
10005878:	b980004c 	andi	r6,r23,1
1000587c:	1009883a 	mov	r4,r2
10005880:	b82fd07a 	srai	r23,r23,1
10005884:	180b883a 	mov	r5,r3
10005888:	30000426 	beq	r6,zero,1000589c <_dtoa_r+0x12ec>
1000588c:	81800017 	ldw	r6,0(r16)
10005890:	81c00117 	ldw	r7,4(r16)
10005894:	8c400044 	addi	r17,r17,1
10005898:	000d5340 	call	1000d534 <__muldf3>
1000589c:	84000204 	addi	r16,r16,8
100058a0:	b83ff51e 	bne	r23,zero,10005878 <__alt_data_end+0xf8005878>
100058a4:	a021883a 	mov	r16,r20
100058a8:	182b883a 	mov	r21,r3
100058ac:	1029883a 	mov	r20,r2
100058b0:	003c5506 	br	10004a08 <__alt_data_end+0xf8004a08>
100058b4:	d9800517 	ldw	r6,20(sp)
100058b8:	d9000717 	ldw	r4,28(sp)
100058bc:	00c00c04 	movi	r3,48
100058c0:	31800044 	addi	r6,r6,1
100058c4:	d9800515 	stw	r6,20(sp)
100058c8:	20c00005 	stb	r3,0(r4)
100058cc:	02000c44 	movi	r8,49
100058d0:	003da206 	br	10004f5c <__alt_data_end+0xf8004f5c>
100058d4:	89400117 	ldw	r5,4(r17)
100058d8:	8009883a 	mov	r4,r16
100058dc:	0007bec0 	call	10007bec <_Balloc>
100058e0:	89800417 	ldw	r6,16(r17)
100058e4:	11000304 	addi	r4,r2,12
100058e8:	89400304 	addi	r5,r17,12
100058ec:	31800084 	addi	r6,r6,2
100058f0:	318d883a 	add	r6,r6,r6
100058f4:	318d883a 	add	r6,r6,r6
100058f8:	1027883a 	mov	r19,r2
100058fc:	00078340 	call	10007834 <memcpy>
10005900:	8009883a 	mov	r4,r16
10005904:	980b883a 	mov	r5,r19
10005908:	01800044 	movi	r6,1
1000590c:	00084200 	call	10008420 <__lshift>
10005910:	1029883a 	mov	r20,r2
10005914:	003e8606 	br	10005330 <__alt_data_end+0xf8005330>
10005918:	00800e44 	movi	r2,57
1000591c:	90809526 	beq	r18,r2,10005b74 <_dtoa_r+0x15c4>
10005920:	92000044 	addi	r8,r18,1
10005924:	003f2306 	br	100055b4 <__alt_data_end+0xf80055b4>
10005928:	9011883a 	mov	r8,r18
1000592c:	8825883a 	mov	r18,r17
10005930:	a023883a 	mov	r17,r20
10005934:	003e3706 	br	10005214 <__alt_data_end+0xf8005214>
10005938:	002b883a 	mov	r21,zero
1000593c:	0023883a 	mov	r17,zero
10005940:	003f5606 	br	1000569c <__alt_data_end+0xf800569c>
10005944:	51bfffc4 	addi	r6,r10,-1
10005948:	300490fa 	slli	r2,r6,3
1000594c:	00c40074 	movhi	r3,4097
10005950:	18c04604 	addi	r3,r3,280
10005954:	1885883a 	add	r2,r3,r2
10005958:	d9c00e17 	ldw	r7,56(sp)
1000595c:	11000017 	ldw	r4,0(r2)
10005960:	11400117 	ldw	r5,4(r2)
10005964:	d8800717 	ldw	r2,28(sp)
10005968:	d9801015 	stw	r6,64(sp)
1000596c:	880d883a 	mov	r6,r17
10005970:	da801615 	stw	r10,88(sp)
10005974:	15c00044 	addi	r23,r2,1
10005978:	000d5340 	call	1000d534 <__muldf3>
1000597c:	a80b883a 	mov	r5,r21
10005980:	a009883a 	mov	r4,r20
10005984:	d8c01115 	stw	r3,68(sp)
10005988:	d8800e15 	stw	r2,56(sp)
1000598c:	000e6700 	call	1000e670 <__fixdfsi>
10005990:	1009883a 	mov	r4,r2
10005994:	1023883a 	mov	r17,r2
10005998:	000e6f80 	call	1000e6f8 <__floatsidf>
1000599c:	a009883a 	mov	r4,r20
100059a0:	a80b883a 	mov	r5,r21
100059a4:	100d883a 	mov	r6,r2
100059a8:	180f883a 	mov	r7,r3
100059ac:	000dda00 	call	1000dda0 <__subdf3>
100059b0:	1813883a 	mov	r9,r3
100059b4:	d8c00717 	ldw	r3,28(sp)
100059b8:	8c400c04 	addi	r17,r17,48
100059bc:	1011883a 	mov	r8,r2
100059c0:	1c400005 	stb	r17,0(r3)
100059c4:	da801617 	ldw	r10,88(sp)
100059c8:	00800044 	movi	r2,1
100059cc:	50802326 	beq	r10,r2,10005a5c <_dtoa_r+0x14ac>
100059d0:	d8800717 	ldw	r2,28(sp)
100059d4:	b82b883a 	mov	r21,r23
100059d8:	dc001315 	stw	r16,76(sp)
100059dc:	12a9883a 	add	r20,r2,r10
100059e0:	4807883a 	mov	r3,r9
100059e4:	4005883a 	mov	r2,r8
100059e8:	dc801415 	stw	r18,80(sp)
100059ec:	000d883a 	mov	r6,zero
100059f0:	01d00934 	movhi	r7,16420
100059f4:	1009883a 	mov	r4,r2
100059f8:	180b883a 	mov	r5,r3
100059fc:	000d5340 	call	1000d534 <__muldf3>
10005a00:	180b883a 	mov	r5,r3
10005a04:	1009883a 	mov	r4,r2
10005a08:	1821883a 	mov	r16,r3
10005a0c:	1025883a 	mov	r18,r2
10005a10:	000e6700 	call	1000e670 <__fixdfsi>
10005a14:	1009883a 	mov	r4,r2
10005a18:	1023883a 	mov	r17,r2
10005a1c:	000e6f80 	call	1000e6f8 <__floatsidf>
10005a20:	9009883a 	mov	r4,r18
10005a24:	800b883a 	mov	r5,r16
10005a28:	100d883a 	mov	r6,r2
10005a2c:	180f883a 	mov	r7,r3
10005a30:	8c400c04 	addi	r17,r17,48
10005a34:	000dda00 	call	1000dda0 <__subdf3>
10005a38:	ad400044 	addi	r21,r21,1
10005a3c:	ac7fffc5 	stb	r17,-1(r21)
10005a40:	ad3fea1e 	bne	r21,r20,100059ec <__alt_data_end+0xf80059ec>
10005a44:	1813883a 	mov	r9,r3
10005a48:	d8c01017 	ldw	r3,64(sp)
10005a4c:	dc001317 	ldw	r16,76(sp)
10005a50:	dc801417 	ldw	r18,80(sp)
10005a54:	1011883a 	mov	r8,r2
10005a58:	b8ef883a 	add	r23,r23,r3
10005a5c:	d9000e17 	ldw	r4,56(sp)
10005a60:	d9401117 	ldw	r5,68(sp)
10005a64:	000d883a 	mov	r6,zero
10005a68:	01cff834 	movhi	r7,16352
10005a6c:	da001715 	stw	r8,92(sp)
10005a70:	da401515 	stw	r9,84(sp)
10005a74:	000c0d40 	call	1000c0d4 <__adddf3>
10005a78:	da001717 	ldw	r8,92(sp)
10005a7c:	da401517 	ldw	r9,84(sp)
10005a80:	1009883a 	mov	r4,r2
10005a84:	400d883a 	mov	r6,r8
10005a88:	480f883a 	mov	r7,r9
10005a8c:	180b883a 	mov	r5,r3
10005a90:	000d4540 	call	1000d454 <__ledf2>
10005a94:	da001717 	ldw	r8,92(sp)
10005a98:	da401517 	ldw	r9,84(sp)
10005a9c:	10003b0e 	bge	r2,zero,10005b8c <_dtoa_r+0x15dc>
10005aa0:	d9001217 	ldw	r4,72(sp)
10005aa4:	bd7fffc3 	ldbu	r21,-1(r23)
10005aa8:	d9000515 	stw	r4,20(sp)
10005aac:	003d1c06 	br	10004f20 <__alt_data_end+0xf8004f20>
10005ab0:	d8c00817 	ldw	r3,32(sp)
10005ab4:	18a9c83a 	sub	r20,r3,r2
10005ab8:	0005883a 	mov	r2,zero
10005abc:	003d3706 	br	10004f9c <__alt_data_end+0xf8004f9c>
10005ac0:	00800044 	movi	r2,1
10005ac4:	003dd006 	br	10005208 <__alt_data_end+0xf8005208>
10005ac8:	d8c00217 	ldw	r3,8(sp)
10005acc:	00800d84 	movi	r2,54
10005ad0:	dd400917 	ldw	r21,36(sp)
10005ad4:	10c5c83a 	sub	r2,r2,r3
10005ad8:	dd000817 	ldw	r20,32(sp)
10005adc:	003d2f06 	br	10004f9c <__alt_data_end+0xf8004f9c>
10005ae0:	9029883a 	mov	r20,r18
10005ae4:	982b883a 	mov	r21,r19
10005ae8:	04400084 	movi	r17,2
10005aec:	003bc606 	br	10004a08 <__alt_data_end+0xf8004a08>
10005af0:	d8800617 	ldw	r2,24(sp)
10005af4:	103efc26 	beq	r2,zero,100056e8 <__alt_data_end+0xf80056e8>
10005af8:	d8c00d17 	ldw	r3,52(sp)
10005afc:	00fc890e 	bge	zero,r3,10004d24 <__alt_data_end+0xf8004d24>
10005b00:	a80b883a 	mov	r5,r21
10005b04:	a009883a 	mov	r4,r20
10005b08:	000d883a 	mov	r6,zero
10005b0c:	01d00934 	movhi	r7,16420
10005b10:	000d5340 	call	1000d534 <__muldf3>
10005b14:	89000044 	addi	r4,r17,1
10005b18:	1029883a 	mov	r20,r2
10005b1c:	182b883a 	mov	r21,r3
10005b20:	000e6f80 	call	1000e6f8 <__floatsidf>
10005b24:	a009883a 	mov	r4,r20
10005b28:	a80b883a 	mov	r5,r21
10005b2c:	100d883a 	mov	r6,r2
10005b30:	180f883a 	mov	r7,r3
10005b34:	000d5340 	call	1000d534 <__muldf3>
10005b38:	1009883a 	mov	r4,r2
10005b3c:	180b883a 	mov	r5,r3
10005b40:	000d883a 	mov	r6,zero
10005b44:	01d00734 	movhi	r7,16412
10005b48:	000c0d40 	call	1000c0d4 <__adddf3>
10005b4c:	d9000517 	ldw	r4,20(sp)
10005b50:	1023883a 	mov	r17,r2
10005b54:	00bf3034 	movhi	r2,64704
10005b58:	213fffc4 	addi	r4,r4,-1
10005b5c:	1885883a 	add	r2,r3,r2
10005b60:	d9001215 	stw	r4,72(sp)
10005b64:	d8800e15 	stw	r2,56(sp)
10005b68:	da800d17 	ldw	r10,52(sp)
10005b6c:	003bc306 	br	10004a7c <__alt_data_end+0xf8004a7c>
10005b70:	b039883a 	mov	fp,r22
10005b74:	01000e44 	movi	r4,57
10005b78:	8825883a 	mov	r18,r17
10005b7c:	9dc00044 	addi	r23,r19,1
10005b80:	99000005 	stb	r4,0(r19)
10005b84:	a023883a 	mov	r17,r20
10005b88:	003dae06 	br	10005244 <__alt_data_end+0xf8005244>
10005b8c:	d9800e17 	ldw	r6,56(sp)
10005b90:	d9c01117 	ldw	r7,68(sp)
10005b94:	0009883a 	mov	r4,zero
10005b98:	014ff834 	movhi	r5,16352
10005b9c:	da001715 	stw	r8,92(sp)
10005ba0:	da401515 	stw	r9,84(sp)
10005ba4:	000dda00 	call	1000dda0 <__subdf3>
10005ba8:	da001717 	ldw	r8,92(sp)
10005bac:	da401517 	ldw	r9,84(sp)
10005bb0:	1009883a 	mov	r4,r2
10005bb4:	180b883a 	mov	r5,r3
10005bb8:	400d883a 	mov	r6,r8
10005bbc:	480f883a 	mov	r7,r9
10005bc0:	000d3740 	call	1000d374 <__gedf2>
10005bc4:	00bc570e 	bge	zero,r2,10004d24 <__alt_data_end+0xf8004d24>
10005bc8:	01000c04 	movi	r4,48
10005bcc:	00000106 	br	10005bd4 <_dtoa_r+0x1624>
10005bd0:	102f883a 	mov	r23,r2
10005bd4:	b8bfffc4 	addi	r2,r23,-1
10005bd8:	10c00007 	ldb	r3,0(r2)
10005bdc:	193ffc26 	beq	r3,r4,10005bd0 <__alt_data_end+0xf8005bd0>
10005be0:	d9801217 	ldw	r6,72(sp)
10005be4:	d9800515 	stw	r6,20(sp)
10005be8:	003c1f06 	br	10004c68 <__alt_data_end+0xf8004c68>
10005bec:	d8801217 	ldw	r2,72(sp)
10005bf0:	dc001117 	ldw	r16,68(sp)
10005bf4:	d8800515 	stw	r2,20(sp)
10005bf8:	003cc906 	br	10004f20 <__alt_data_end+0xf8004f20>
10005bfc:	dd801317 	ldw	r22,76(sp)
10005c00:	dc001117 	ldw	r16,68(sp)
10005c04:	dcc01417 	ldw	r19,80(sp)
10005c08:	dc801017 	ldw	r18,64(sp)
10005c0c:	003c4506 	br	10004d24 <__alt_data_end+0xf8004d24>
10005c10:	103e5d1e 	bne	r2,zero,10005588 <__alt_data_end+0xf8005588>
10005c14:	4080004c 	andi	r2,r8,1
10005c18:	103e5b26 	beq	r2,zero,10005588 <__alt_data_end+0xf8005588>
10005c1c:	003e5706 	br	1000557c <__alt_data_end+0xf800557c>
10005c20:	d8c00317 	ldw	r3,12(sp)
10005c24:	00800084 	movi	r2,2
10005c28:	10c00a16 	blt	r2,r3,10005c54 <_dtoa_r+0x16a4>
10005c2c:	d9000d17 	ldw	r4,52(sp)
10005c30:	003e8306 	br	10005640 <__alt_data_end+0xf8005640>
10005c34:	04400084 	movi	r17,2
10005c38:	003b7306 	br	10004a08 <__alt_data_end+0xf8004a08>
10005c3c:	d9801217 	ldw	r6,72(sp)
10005c40:	d9800515 	stw	r6,20(sp)
10005c44:	003cb606 	br	10004f20 <__alt_data_end+0xf8004f20>
10005c48:	d9001217 	ldw	r4,72(sp)
10005c4c:	d9000515 	stw	r4,20(sp)
10005c50:	003c0506 	br	10004c68 <__alt_data_end+0xf8004c68>
10005c54:	d9800d17 	ldw	r6,52(sp)
10005c58:	d9800615 	stw	r6,24(sp)
10005c5c:	003e8306 	br	1000566c <__alt_data_end+0xf800566c>
10005c60:	d9800317 	ldw	r6,12(sp)
10005c64:	00800084 	movi	r2,2
10005c68:	11800216 	blt	r2,r6,10005c74 <_dtoa_r+0x16c4>
10005c6c:	d8800d17 	ldw	r2,52(sp)
10005c70:	003da606 	br	1000530c <__alt_data_end+0xf800530c>
10005c74:	d8800d17 	ldw	r2,52(sp)
10005c78:	d8800615 	stw	r2,24(sp)
10005c7c:	003e7b06 	br	1000566c <__alt_data_end+0xf800566c>
10005c80:	05000044 	movi	r20,1
10005c84:	003b0506 	br	1000489c <__alt_data_end+0xf800489c>
10005c88:	8009883a 	mov	r4,r16
10005c8c:	80001115 	stw	zero,68(r16)
10005c90:	000b883a 	mov	r5,zero
10005c94:	0007bec0 	call	10007bec <_Balloc>
10005c98:	d8800715 	stw	r2,28(sp)
10005c9c:	d8c00717 	ldw	r3,28(sp)
10005ca0:	00bfffc4 	movi	r2,-1
10005ca4:	01000044 	movi	r4,1
10005ca8:	d8800615 	stw	r2,24(sp)
10005cac:	80c01015 	stw	r3,64(r16)
10005cb0:	d9000b15 	stw	r4,44(sp)
10005cb4:	d8002215 	stw	zero,136(sp)
10005cb8:	d8800d15 	stw	r2,52(sp)
10005cbc:	003c1906 	br	10004d24 <__alt_data_end+0xf8004d24>
10005cc0:	193d2926 	beq	r3,r4,10005168 <__alt_data_end+0xf8005168>
10005cc4:	00c00f04 	movi	r3,60
10005cc8:	1885c83a 	sub	r2,r3,r2
10005ccc:	003d7b06 	br	100052bc <__alt_data_end+0xf80052bc>
10005cd0:	000b883a 	mov	r5,zero
10005cd4:	003b1006 	br	10004918 <__alt_data_end+0xf8004918>

10005cd8 <_fflush_r>:
10005cd8:	defffb04 	addi	sp,sp,-20
10005cdc:	dcc00315 	stw	r19,12(sp)
10005ce0:	dc000015 	stw	r16,0(sp)
10005ce4:	dfc00415 	stw	ra,16(sp)
10005ce8:	dc800215 	stw	r18,8(sp)
10005cec:	dc400115 	stw	r17,4(sp)
10005cf0:	2027883a 	mov	r19,r4
10005cf4:	2821883a 	mov	r16,r5
10005cf8:	20000226 	beq	r4,zero,10005d04 <_fflush_r+0x2c>
10005cfc:	20800e17 	ldw	r2,56(r4)
10005d00:	10005326 	beq	r2,zero,10005e50 <_fflush_r+0x178>
10005d04:	8080030b 	ldhu	r2,12(r16)
10005d08:	10ffffcc 	andi	r3,r2,65535
10005d0c:	18e0001c 	xori	r3,r3,32768
10005d10:	18e00004 	addi	r3,r3,-32768
10005d14:	18002c26 	beq	r3,zero,10005dc8 <_fflush_r+0xf0>
10005d18:	10c0020c 	andi	r3,r2,8
10005d1c:	1800321e 	bne	r3,zero,10005de8 <_fflush_r+0x110>
10005d20:	80c00117 	ldw	r3,4(r16)
10005d24:	10820014 	ori	r2,r2,2048
10005d28:	8080030d 	sth	r2,12(r16)
10005d2c:	00c0570e 	bge	zero,r3,10005e8c <_fflush_r+0x1b4>
10005d30:	82000a17 	ldw	r8,40(r16)
10005d34:	40002426 	beq	r8,zero,10005dc8 <_fflush_r+0xf0>
10005d38:	9c400017 	ldw	r17,0(r19)
10005d3c:	10c4000c 	andi	r3,r2,4096
10005d40:	98000015 	stw	zero,0(r19)
10005d44:	18004626 	beq	r3,zero,10005e60 <_fflush_r+0x188>
10005d48:	81801417 	ldw	r6,80(r16)
10005d4c:	10c0010c 	andi	r3,r2,4
10005d50:	18000626 	beq	r3,zero,10005d6c <_fflush_r+0x94>
10005d54:	80c00117 	ldw	r3,4(r16)
10005d58:	80800c17 	ldw	r2,48(r16)
10005d5c:	30cdc83a 	sub	r6,r6,r3
10005d60:	10000226 	beq	r2,zero,10005d6c <_fflush_r+0x94>
10005d64:	80800f17 	ldw	r2,60(r16)
10005d68:	308dc83a 	sub	r6,r6,r2
10005d6c:	81400717 	ldw	r5,28(r16)
10005d70:	9809883a 	mov	r4,r19
10005d74:	000f883a 	mov	r7,zero
10005d78:	403ee83a 	callr	r8
10005d7c:	00ffffc4 	movi	r3,-1
10005d80:	10c04526 	beq	r2,r3,10005e98 <_fflush_r+0x1c0>
10005d84:	80c0030b 	ldhu	r3,12(r16)
10005d88:	81000417 	ldw	r4,16(r16)
10005d8c:	80000115 	stw	zero,4(r16)
10005d90:	197dffcc 	andi	r5,r3,63487
10005d94:	8140030d 	sth	r5,12(r16)
10005d98:	81000015 	stw	r4,0(r16)
10005d9c:	18c4000c 	andi	r3,r3,4096
10005da0:	18000126 	beq	r3,zero,10005da8 <_fflush_r+0xd0>
10005da4:	80801415 	stw	r2,80(r16)
10005da8:	81400c17 	ldw	r5,48(r16)
10005dac:	9c400015 	stw	r17,0(r19)
10005db0:	28000526 	beq	r5,zero,10005dc8 <_fflush_r+0xf0>
10005db4:	80801004 	addi	r2,r16,64
10005db8:	28800226 	beq	r5,r2,10005dc4 <_fflush_r+0xec>
10005dbc:	9809883a 	mov	r4,r19
10005dc0:	00064080 	call	10006408 <_free_r>
10005dc4:	80000c15 	stw	zero,48(r16)
10005dc8:	0005883a 	mov	r2,zero
10005dcc:	dfc00417 	ldw	ra,16(sp)
10005dd0:	dcc00317 	ldw	r19,12(sp)
10005dd4:	dc800217 	ldw	r18,8(sp)
10005dd8:	dc400117 	ldw	r17,4(sp)
10005ddc:	dc000017 	ldw	r16,0(sp)
10005de0:	dec00504 	addi	sp,sp,20
10005de4:	f800283a 	ret
10005de8:	84800417 	ldw	r18,16(r16)
10005dec:	903ff626 	beq	r18,zero,10005dc8 <__alt_data_end+0xf8005dc8>
10005df0:	84400017 	ldw	r17,0(r16)
10005df4:	108000cc 	andi	r2,r2,3
10005df8:	84800015 	stw	r18,0(r16)
10005dfc:	8ca3c83a 	sub	r17,r17,r18
10005e00:	10001526 	beq	r2,zero,10005e58 <_fflush_r+0x180>
10005e04:	0005883a 	mov	r2,zero
10005e08:	80800215 	stw	r2,8(r16)
10005e0c:	04400316 	blt	zero,r17,10005e1c <_fflush_r+0x144>
10005e10:	003fed06 	br	10005dc8 <__alt_data_end+0xf8005dc8>
10005e14:	90a5883a 	add	r18,r18,r2
10005e18:	047feb0e 	bge	zero,r17,10005dc8 <__alt_data_end+0xf8005dc8>
10005e1c:	80800917 	ldw	r2,36(r16)
10005e20:	81400717 	ldw	r5,28(r16)
10005e24:	880f883a 	mov	r7,r17
10005e28:	900d883a 	mov	r6,r18
10005e2c:	9809883a 	mov	r4,r19
10005e30:	103ee83a 	callr	r2
10005e34:	88a3c83a 	sub	r17,r17,r2
10005e38:	00bff616 	blt	zero,r2,10005e14 <__alt_data_end+0xf8005e14>
10005e3c:	80c0030b 	ldhu	r3,12(r16)
10005e40:	00bfffc4 	movi	r2,-1
10005e44:	18c01014 	ori	r3,r3,64
10005e48:	80c0030d 	sth	r3,12(r16)
10005e4c:	003fdf06 	br	10005dcc <__alt_data_end+0xf8005dcc>
10005e50:	00062940 	call	10006294 <__sinit>
10005e54:	003fab06 	br	10005d04 <__alt_data_end+0xf8005d04>
10005e58:	80800517 	ldw	r2,20(r16)
10005e5c:	003fea06 	br	10005e08 <__alt_data_end+0xf8005e08>
10005e60:	81400717 	ldw	r5,28(r16)
10005e64:	000d883a 	mov	r6,zero
10005e68:	9809883a 	mov	r4,r19
10005e6c:	01c00044 	movi	r7,1
10005e70:	403ee83a 	callr	r8
10005e74:	100d883a 	mov	r6,r2
10005e78:	00bfffc4 	movi	r2,-1
10005e7c:	30801326 	beq	r6,r2,10005ecc <_fflush_r+0x1f4>
10005e80:	8080030b 	ldhu	r2,12(r16)
10005e84:	82000a17 	ldw	r8,40(r16)
10005e88:	003fb006 	br	10005d4c <__alt_data_end+0xf8005d4c>
10005e8c:	80c00f17 	ldw	r3,60(r16)
10005e90:	00ffa716 	blt	zero,r3,10005d30 <__alt_data_end+0xf8005d30>
10005e94:	003fcc06 	br	10005dc8 <__alt_data_end+0xf8005dc8>
10005e98:	98c00017 	ldw	r3,0(r19)
10005e9c:	183fb926 	beq	r3,zero,10005d84 <__alt_data_end+0xf8005d84>
10005ea0:	01000744 	movi	r4,29
10005ea4:	19000226 	beq	r3,r4,10005eb0 <_fflush_r+0x1d8>
10005ea8:	01000584 	movi	r4,22
10005eac:	1900101e 	bne	r3,r4,10005ef0 <_fflush_r+0x218>
10005eb0:	8080030b 	ldhu	r2,12(r16)
10005eb4:	80c00417 	ldw	r3,16(r16)
10005eb8:	80000115 	stw	zero,4(r16)
10005ebc:	10bdffcc 	andi	r2,r2,63487
10005ec0:	8080030d 	sth	r2,12(r16)
10005ec4:	80c00015 	stw	r3,0(r16)
10005ec8:	003fb706 	br	10005da8 <__alt_data_end+0xf8005da8>
10005ecc:	98800017 	ldw	r2,0(r19)
10005ed0:	103feb26 	beq	r2,zero,10005e80 <__alt_data_end+0xf8005e80>
10005ed4:	00c00744 	movi	r3,29
10005ed8:	10c00226 	beq	r2,r3,10005ee4 <_fflush_r+0x20c>
10005edc:	00c00584 	movi	r3,22
10005ee0:	10ffd61e 	bne	r2,r3,10005e3c <__alt_data_end+0xf8005e3c>
10005ee4:	9c400015 	stw	r17,0(r19)
10005ee8:	0005883a 	mov	r2,zero
10005eec:	003fb706 	br	10005dcc <__alt_data_end+0xf8005dcc>
10005ef0:	80c0030b 	ldhu	r3,12(r16)
10005ef4:	18c01014 	ori	r3,r3,64
10005ef8:	80c0030d 	sth	r3,12(r16)
10005efc:	003fb306 	br	10005dcc <__alt_data_end+0xf8005dcc>

10005f00 <fflush>:
10005f00:	20000526 	beq	r4,zero,10005f18 <fflush+0x18>
10005f04:	00840074 	movhi	r2,4097
10005f08:	10835704 	addi	r2,r2,3420
10005f0c:	200b883a 	mov	r5,r4
10005f10:	11000017 	ldw	r4,0(r2)
10005f14:	0005cd81 	jmpi	10005cd8 <_fflush_r>
10005f18:	00840074 	movhi	r2,4097
10005f1c:	10835604 	addi	r2,r2,3416
10005f20:	11000017 	ldw	r4,0(r2)
10005f24:	01440034 	movhi	r5,4096
10005f28:	29573604 	addi	r5,r5,23768
10005f2c:	0006c541 	jmpi	10006c54 <_fwalk_reent>

10005f30 <__fp_lock>:
10005f30:	0005883a 	mov	r2,zero
10005f34:	f800283a 	ret

10005f38 <__fp_unlock>:
10005f38:	0005883a 	mov	r2,zero
10005f3c:	f800283a 	ret

10005f40 <_cleanup_r>:
10005f40:	01440074 	movhi	r5,4097
10005f44:	296b1804 	addi	r5,r5,-21408
10005f48:	0006b9c1 	jmpi	10006b9c <_fwalk>

10005f4c <__sinit.part.1>:
10005f4c:	defff604 	addi	sp,sp,-40
10005f50:	00c40034 	movhi	r3,4096
10005f54:	dfc00915 	stw	ra,36(sp)
10005f58:	df000815 	stw	fp,32(sp)
10005f5c:	ddc00715 	stw	r23,28(sp)
10005f60:	dd800615 	stw	r22,24(sp)
10005f64:	dd400515 	stw	r21,20(sp)
10005f68:	dd000415 	stw	r20,16(sp)
10005f6c:	dcc00315 	stw	r19,12(sp)
10005f70:	dc800215 	stw	r18,8(sp)
10005f74:	dc400115 	stw	r17,4(sp)
10005f78:	dc000015 	stw	r16,0(sp)
10005f7c:	18d7d004 	addi	r3,r3,24384
10005f80:	24000117 	ldw	r16,4(r4)
10005f84:	20c00f15 	stw	r3,60(r4)
10005f88:	07000044 	movi	fp,1
10005f8c:	00c000c4 	movi	r3,3
10005f90:	2080bb04 	addi	r2,r4,748
10005f94:	20c0b915 	stw	r3,740(r4)
10005f98:	27000e15 	stw	fp,56(r4)
10005f9c:	2080ba15 	stw	r2,744(r4)
10005fa0:	2000b815 	stw	zero,736(r4)
10005fa4:	05c00204 	movi	r23,8
10005fa8:	00800104 	movi	r2,4
10005fac:	2025883a 	mov	r18,r4
10005fb0:	b80d883a 	mov	r6,r23
10005fb4:	81001704 	addi	r4,r16,92
10005fb8:	000b883a 	mov	r5,zero
10005fbc:	80000015 	stw	zero,0(r16)
10005fc0:	80000115 	stw	zero,4(r16)
10005fc4:	80000215 	stw	zero,8(r16)
10005fc8:	8080030d 	sth	r2,12(r16)
10005fcc:	80001915 	stw	zero,100(r16)
10005fd0:	8000038d 	sth	zero,14(r16)
10005fd4:	80000415 	stw	zero,16(r16)
10005fd8:	80000515 	stw	zero,20(r16)
10005fdc:	80000615 	stw	zero,24(r16)
10005fe0:	0007ac80 	call	10007ac8 <memset>
10005fe4:	05840074 	movhi	r22,4097
10005fe8:	94400217 	ldw	r17,8(r18)
10005fec:	05440074 	movhi	r21,4097
10005ff0:	05040074 	movhi	r20,4097
10005ff4:	04c40074 	movhi	r19,4097
10005ff8:	b5a4a704 	addi	r22,r22,-28004
10005ffc:	ad64be04 	addi	r21,r21,-27912
10006000:	a524dd04 	addi	r20,r20,-27788
10006004:	9ce4f404 	addi	r19,r19,-27696
10006008:	85800815 	stw	r22,32(r16)
1000600c:	85400915 	stw	r21,36(r16)
10006010:	85000a15 	stw	r20,40(r16)
10006014:	84c00b15 	stw	r19,44(r16)
10006018:	84000715 	stw	r16,28(r16)
1000601c:	00800284 	movi	r2,10
10006020:	89001704 	addi	r4,r17,92
10006024:	b80d883a 	mov	r6,r23
10006028:	000b883a 	mov	r5,zero
1000602c:	88000015 	stw	zero,0(r17)
10006030:	88000115 	stw	zero,4(r17)
10006034:	88000215 	stw	zero,8(r17)
10006038:	8880030d 	sth	r2,12(r17)
1000603c:	88001915 	stw	zero,100(r17)
10006040:	8f00038d 	sth	fp,14(r17)
10006044:	88000415 	stw	zero,16(r17)
10006048:	88000515 	stw	zero,20(r17)
1000604c:	88000615 	stw	zero,24(r17)
10006050:	0007ac80 	call	10007ac8 <memset>
10006054:	94000317 	ldw	r16,12(r18)
10006058:	00800484 	movi	r2,18
1000605c:	8c400715 	stw	r17,28(r17)
10006060:	8d800815 	stw	r22,32(r17)
10006064:	8d400915 	stw	r21,36(r17)
10006068:	8d000a15 	stw	r20,40(r17)
1000606c:	8cc00b15 	stw	r19,44(r17)
10006070:	8080030d 	sth	r2,12(r16)
10006074:	00800084 	movi	r2,2
10006078:	80000015 	stw	zero,0(r16)
1000607c:	80000115 	stw	zero,4(r16)
10006080:	80000215 	stw	zero,8(r16)
10006084:	80001915 	stw	zero,100(r16)
10006088:	8080038d 	sth	r2,14(r16)
1000608c:	80000415 	stw	zero,16(r16)
10006090:	80000515 	stw	zero,20(r16)
10006094:	80000615 	stw	zero,24(r16)
10006098:	81001704 	addi	r4,r16,92
1000609c:	000b883a 	mov	r5,zero
100060a0:	b80d883a 	mov	r6,r23
100060a4:	0007ac80 	call	10007ac8 <memset>
100060a8:	84000715 	stw	r16,28(r16)
100060ac:	85800815 	stw	r22,32(r16)
100060b0:	85400915 	stw	r21,36(r16)
100060b4:	85000a15 	stw	r20,40(r16)
100060b8:	84c00b15 	stw	r19,44(r16)
100060bc:	dfc00917 	ldw	ra,36(sp)
100060c0:	df000817 	ldw	fp,32(sp)
100060c4:	ddc00717 	ldw	r23,28(sp)
100060c8:	dd800617 	ldw	r22,24(sp)
100060cc:	dd400517 	ldw	r21,20(sp)
100060d0:	dd000417 	ldw	r20,16(sp)
100060d4:	dcc00317 	ldw	r19,12(sp)
100060d8:	dc800217 	ldw	r18,8(sp)
100060dc:	dc400117 	ldw	r17,4(sp)
100060e0:	dc000017 	ldw	r16,0(sp)
100060e4:	dec00a04 	addi	sp,sp,40
100060e8:	f800283a 	ret

100060ec <__sfmoreglue>:
100060ec:	defffc04 	addi	sp,sp,-16
100060f0:	dc800215 	stw	r18,8(sp)
100060f4:	2825883a 	mov	r18,r5
100060f8:	dc000015 	stw	r16,0(sp)
100060fc:	01401a04 	movi	r5,104
10006100:	2021883a 	mov	r16,r4
10006104:	9009883a 	mov	r4,r18
10006108:	dfc00315 	stw	ra,12(sp)
1000610c:	dc400115 	stw	r17,4(sp)
10006110:	000c0ac0 	call	1000c0ac <__mulsi3>
10006114:	8009883a 	mov	r4,r16
10006118:	11400304 	addi	r5,r2,12
1000611c:	1023883a 	mov	r17,r2
10006120:	0006fa40 	call	10006fa4 <_malloc_r>
10006124:	1021883a 	mov	r16,r2
10006128:	10000726 	beq	r2,zero,10006148 <__sfmoreglue+0x5c>
1000612c:	11000304 	addi	r4,r2,12
10006130:	10000015 	stw	zero,0(r2)
10006134:	14800115 	stw	r18,4(r2)
10006138:	11000215 	stw	r4,8(r2)
1000613c:	000b883a 	mov	r5,zero
10006140:	880d883a 	mov	r6,r17
10006144:	0007ac80 	call	10007ac8 <memset>
10006148:	8005883a 	mov	r2,r16
1000614c:	dfc00317 	ldw	ra,12(sp)
10006150:	dc800217 	ldw	r18,8(sp)
10006154:	dc400117 	ldw	r17,4(sp)
10006158:	dc000017 	ldw	r16,0(sp)
1000615c:	dec00404 	addi	sp,sp,16
10006160:	f800283a 	ret

10006164 <__sfp>:
10006164:	00840074 	movhi	r2,4097
10006168:	defffb04 	addi	sp,sp,-20
1000616c:	10835604 	addi	r2,r2,3416
10006170:	dc800215 	stw	r18,8(sp)
10006174:	14800017 	ldw	r18,0(r2)
10006178:	dcc00315 	stw	r19,12(sp)
1000617c:	dfc00415 	stw	ra,16(sp)
10006180:	90800e17 	ldw	r2,56(r18)
10006184:	dc400115 	stw	r17,4(sp)
10006188:	dc000015 	stw	r16,0(sp)
1000618c:	2027883a 	mov	r19,r4
10006190:	1000021e 	bne	r2,zero,1000619c <__sfp+0x38>
10006194:	9009883a 	mov	r4,r18
10006198:	0005f4c0 	call	10005f4c <__sinit.part.1>
1000619c:	9480b804 	addi	r18,r18,736
100061a0:	047fffc4 	movi	r17,-1
100061a4:	91400117 	ldw	r5,4(r18)
100061a8:	94000217 	ldw	r16,8(r18)
100061ac:	297fffc4 	addi	r5,r5,-1
100061b0:	28000a16 	blt	r5,zero,100061dc <__sfp+0x78>
100061b4:	8080030f 	ldh	r2,12(r16)
100061b8:	10000c26 	beq	r2,zero,100061ec <__sfp+0x88>
100061bc:	80c01d04 	addi	r3,r16,116
100061c0:	00000206 	br	100061cc <__sfp+0x68>
100061c4:	18bfe60f 	ldh	r2,-104(r3)
100061c8:	10000826 	beq	r2,zero,100061ec <__sfp+0x88>
100061cc:	297fffc4 	addi	r5,r5,-1
100061d0:	1c3ffd04 	addi	r16,r3,-12
100061d4:	18c01a04 	addi	r3,r3,104
100061d8:	2c7ffa1e 	bne	r5,r17,100061c4 <__alt_data_end+0xf80061c4>
100061dc:	90800017 	ldw	r2,0(r18)
100061e0:	10001d26 	beq	r2,zero,10006258 <__sfp+0xf4>
100061e4:	1025883a 	mov	r18,r2
100061e8:	003fee06 	br	100061a4 <__alt_data_end+0xf80061a4>
100061ec:	00bfffc4 	movi	r2,-1
100061f0:	8080038d 	sth	r2,14(r16)
100061f4:	00800044 	movi	r2,1
100061f8:	8080030d 	sth	r2,12(r16)
100061fc:	80001915 	stw	zero,100(r16)
10006200:	80000015 	stw	zero,0(r16)
10006204:	80000215 	stw	zero,8(r16)
10006208:	80000115 	stw	zero,4(r16)
1000620c:	80000415 	stw	zero,16(r16)
10006210:	80000515 	stw	zero,20(r16)
10006214:	80000615 	stw	zero,24(r16)
10006218:	81001704 	addi	r4,r16,92
1000621c:	000b883a 	mov	r5,zero
10006220:	01800204 	movi	r6,8
10006224:	0007ac80 	call	10007ac8 <memset>
10006228:	8005883a 	mov	r2,r16
1000622c:	80000c15 	stw	zero,48(r16)
10006230:	80000d15 	stw	zero,52(r16)
10006234:	80001115 	stw	zero,68(r16)
10006238:	80001215 	stw	zero,72(r16)
1000623c:	dfc00417 	ldw	ra,16(sp)
10006240:	dcc00317 	ldw	r19,12(sp)
10006244:	dc800217 	ldw	r18,8(sp)
10006248:	dc400117 	ldw	r17,4(sp)
1000624c:	dc000017 	ldw	r16,0(sp)
10006250:	dec00504 	addi	sp,sp,20
10006254:	f800283a 	ret
10006258:	9809883a 	mov	r4,r19
1000625c:	01400104 	movi	r5,4
10006260:	00060ec0 	call	100060ec <__sfmoreglue>
10006264:	90800015 	stw	r2,0(r18)
10006268:	103fde1e 	bne	r2,zero,100061e4 <__alt_data_end+0xf80061e4>
1000626c:	00800304 	movi	r2,12
10006270:	98800015 	stw	r2,0(r19)
10006274:	0005883a 	mov	r2,zero
10006278:	003ff006 	br	1000623c <__alt_data_end+0xf800623c>

1000627c <_cleanup>:
1000627c:	00840074 	movhi	r2,4097
10006280:	10835604 	addi	r2,r2,3416
10006284:	11000017 	ldw	r4,0(r2)
10006288:	01440074 	movhi	r5,4097
1000628c:	296b1804 	addi	r5,r5,-21408
10006290:	0006b9c1 	jmpi	10006b9c <_fwalk>

10006294 <__sinit>:
10006294:	20800e17 	ldw	r2,56(r4)
10006298:	10000126 	beq	r2,zero,100062a0 <__sinit+0xc>
1000629c:	f800283a 	ret
100062a0:	0005f4c1 	jmpi	10005f4c <__sinit.part.1>

100062a4 <__sfp_lock_acquire>:
100062a4:	f800283a 	ret

100062a8 <__sfp_lock_release>:
100062a8:	f800283a 	ret

100062ac <__sinit_lock_acquire>:
100062ac:	f800283a 	ret

100062b0 <__sinit_lock_release>:
100062b0:	f800283a 	ret

100062b4 <__fp_lock_all>:
100062b4:	00840074 	movhi	r2,4097
100062b8:	10835704 	addi	r2,r2,3420
100062bc:	11000017 	ldw	r4,0(r2)
100062c0:	01440034 	movhi	r5,4096
100062c4:	2957cc04 	addi	r5,r5,24368
100062c8:	0006b9c1 	jmpi	10006b9c <_fwalk>

100062cc <__fp_unlock_all>:
100062cc:	00840074 	movhi	r2,4097
100062d0:	10835704 	addi	r2,r2,3420
100062d4:	11000017 	ldw	r4,0(r2)
100062d8:	01440034 	movhi	r5,4096
100062dc:	2957ce04 	addi	r5,r5,24376
100062e0:	0006b9c1 	jmpi	10006b9c <_fwalk>

100062e4 <_malloc_trim_r>:
100062e4:	defffb04 	addi	sp,sp,-20
100062e8:	dcc00315 	stw	r19,12(sp)
100062ec:	04c40074 	movhi	r19,4097
100062f0:	dc800215 	stw	r18,8(sp)
100062f4:	dc400115 	stw	r17,4(sp)
100062f8:	dc000015 	stw	r16,0(sp)
100062fc:	dfc00415 	stw	ra,16(sp)
10006300:	2821883a 	mov	r16,r5
10006304:	9cc1ea04 	addi	r19,r19,1960
10006308:	2025883a 	mov	r18,r4
1000630c:	000ee940 	call	1000ee94 <__malloc_lock>
10006310:	98800217 	ldw	r2,8(r19)
10006314:	14400117 	ldw	r17,4(r2)
10006318:	00bfff04 	movi	r2,-4
1000631c:	88a2703a 	and	r17,r17,r2
10006320:	8c21c83a 	sub	r16,r17,r16
10006324:	8403fbc4 	addi	r16,r16,4079
10006328:	8020d33a 	srli	r16,r16,12
1000632c:	0083ffc4 	movi	r2,4095
10006330:	843fffc4 	addi	r16,r16,-1
10006334:	8020933a 	slli	r16,r16,12
10006338:	1400060e 	bge	r2,r16,10006354 <_malloc_trim_r+0x70>
1000633c:	9009883a 	mov	r4,r18
10006340:	000b883a 	mov	r5,zero
10006344:	00092480 	call	10009248 <_sbrk_r>
10006348:	98c00217 	ldw	r3,8(r19)
1000634c:	1c47883a 	add	r3,r3,r17
10006350:	10c00a26 	beq	r2,r3,1000637c <_malloc_trim_r+0x98>
10006354:	9009883a 	mov	r4,r18
10006358:	000eeb40 	call	1000eeb4 <__malloc_unlock>
1000635c:	0005883a 	mov	r2,zero
10006360:	dfc00417 	ldw	ra,16(sp)
10006364:	dcc00317 	ldw	r19,12(sp)
10006368:	dc800217 	ldw	r18,8(sp)
1000636c:	dc400117 	ldw	r17,4(sp)
10006370:	dc000017 	ldw	r16,0(sp)
10006374:	dec00504 	addi	sp,sp,20
10006378:	f800283a 	ret
1000637c:	9009883a 	mov	r4,r18
10006380:	040bc83a 	sub	r5,zero,r16
10006384:	00092480 	call	10009248 <_sbrk_r>
10006388:	00ffffc4 	movi	r3,-1
1000638c:	10c00d26 	beq	r2,r3,100063c4 <_malloc_trim_r+0xe0>
10006390:	00c40074 	movhi	r3,4097
10006394:	18c60e04 	addi	r3,r3,6200
10006398:	18800017 	ldw	r2,0(r3)
1000639c:	99000217 	ldw	r4,8(r19)
100063a0:	8c23c83a 	sub	r17,r17,r16
100063a4:	8c400054 	ori	r17,r17,1
100063a8:	1421c83a 	sub	r16,r2,r16
100063ac:	24400115 	stw	r17,4(r4)
100063b0:	9009883a 	mov	r4,r18
100063b4:	1c000015 	stw	r16,0(r3)
100063b8:	000eeb40 	call	1000eeb4 <__malloc_unlock>
100063bc:	00800044 	movi	r2,1
100063c0:	003fe706 	br	10006360 <__alt_data_end+0xf8006360>
100063c4:	9009883a 	mov	r4,r18
100063c8:	000b883a 	mov	r5,zero
100063cc:	00092480 	call	10009248 <_sbrk_r>
100063d0:	99000217 	ldw	r4,8(r19)
100063d4:	014003c4 	movi	r5,15
100063d8:	1107c83a 	sub	r3,r2,r4
100063dc:	28ffdd0e 	bge	r5,r3,10006354 <__alt_data_end+0xf8006354>
100063e0:	01440074 	movhi	r5,4097
100063e4:	29435904 	addi	r5,r5,3428
100063e8:	29400017 	ldw	r5,0(r5)
100063ec:	18c00054 	ori	r3,r3,1
100063f0:	20c00115 	stw	r3,4(r4)
100063f4:	00c40074 	movhi	r3,4097
100063f8:	1145c83a 	sub	r2,r2,r5
100063fc:	18c60e04 	addi	r3,r3,6200
10006400:	18800015 	stw	r2,0(r3)
10006404:	003fd306 	br	10006354 <__alt_data_end+0xf8006354>

10006408 <_free_r>:
10006408:	28004c26 	beq	r5,zero,1000653c <_free_r+0x134>
1000640c:	defffd04 	addi	sp,sp,-12
10006410:	dc400115 	stw	r17,4(sp)
10006414:	dc000015 	stw	r16,0(sp)
10006418:	2023883a 	mov	r17,r4
1000641c:	2821883a 	mov	r16,r5
10006420:	dfc00215 	stw	ra,8(sp)
10006424:	000ee940 	call	1000ee94 <__malloc_lock>
10006428:	813fff17 	ldw	r4,-4(r16)
1000642c:	00bfff84 	movi	r2,-2
10006430:	02440074 	movhi	r9,4097
10006434:	81bffe04 	addi	r6,r16,-8
10006438:	2084703a 	and	r2,r4,r2
1000643c:	4a41ea04 	addi	r9,r9,1960
10006440:	308b883a 	add	r5,r6,r2
10006444:	2a000117 	ldw	r8,4(r5)
10006448:	49c00217 	ldw	r7,8(r9)
1000644c:	00ffff04 	movi	r3,-4
10006450:	40c6703a 	and	r3,r8,r3
10006454:	39405326 	beq	r7,r5,100065a4 <_free_r+0x19c>
10006458:	28c00115 	stw	r3,4(r5)
1000645c:	2100004c 	andi	r4,r4,1
10006460:	2000091e 	bne	r4,zero,10006488 <_free_r+0x80>
10006464:	81fffe17 	ldw	r7,-8(r16)
10006468:	4a000204 	addi	r8,r9,8
1000646c:	31cdc83a 	sub	r6,r6,r7
10006470:	31000217 	ldw	r4,8(r6)
10006474:	11c5883a 	add	r2,r2,r7
10006478:	22006126 	beq	r4,r8,10006600 <_free_r+0x1f8>
1000647c:	31c00317 	ldw	r7,12(r6)
10006480:	21c00315 	stw	r7,12(r4)
10006484:	39000215 	stw	r4,8(r7)
10006488:	28c9883a 	add	r4,r5,r3
1000648c:	21c00117 	ldw	r7,4(r4)
10006490:	39c0004c 	andi	r7,r7,1
10006494:	38000d1e 	bne	r7,zero,100064cc <_free_r+0xc4>
10006498:	29000217 	ldw	r4,8(r5)
1000649c:	10c5883a 	add	r2,r2,r3
100064a0:	00c40074 	movhi	r3,4097
100064a4:	18c1ec04 	addi	r3,r3,1968
100064a8:	20c07526 	beq	r4,r3,10006680 <_free_r+0x278>
100064ac:	29c00317 	ldw	r7,12(r5)
100064b0:	11400054 	ori	r5,r2,1
100064b4:	3087883a 	add	r3,r6,r2
100064b8:	21c00315 	stw	r7,12(r4)
100064bc:	39000215 	stw	r4,8(r7)
100064c0:	31400115 	stw	r5,4(r6)
100064c4:	18800015 	stw	r2,0(r3)
100064c8:	00000406 	br	100064dc <_free_r+0xd4>
100064cc:	10c00054 	ori	r3,r2,1
100064d0:	30c00115 	stw	r3,4(r6)
100064d4:	3087883a 	add	r3,r6,r2
100064d8:	18800015 	stw	r2,0(r3)
100064dc:	00c07fc4 	movi	r3,511
100064e0:	18801736 	bltu	r3,r2,10006540 <_free_r+0x138>
100064e4:	1004d0fa 	srli	r2,r2,3
100064e8:	01400044 	movi	r5,1
100064ec:	49000117 	ldw	r4,4(r9)
100064f0:	1087883a 	add	r3,r2,r2
100064f4:	18c7883a 	add	r3,r3,r3
100064f8:	1005d0ba 	srai	r2,r2,2
100064fc:	18c7883a 	add	r3,r3,r3
10006500:	1a47883a 	add	r3,r3,r9
10006504:	19c00217 	ldw	r7,8(r3)
10006508:	2884983a 	sll	r2,r5,r2
1000650c:	30c00315 	stw	r3,12(r6)
10006510:	31c00215 	stw	r7,8(r6)
10006514:	1104b03a 	or	r2,r2,r4
10006518:	19800215 	stw	r6,8(r3)
1000651c:	48800115 	stw	r2,4(r9)
10006520:	39800315 	stw	r6,12(r7)
10006524:	8809883a 	mov	r4,r17
10006528:	dfc00217 	ldw	ra,8(sp)
1000652c:	dc400117 	ldw	r17,4(sp)
10006530:	dc000017 	ldw	r16,0(sp)
10006534:	dec00304 	addi	sp,sp,12
10006538:	000eeb41 	jmpi	1000eeb4 <__malloc_unlock>
1000653c:	f800283a 	ret
10006540:	1006d27a 	srli	r3,r2,9
10006544:	01000104 	movi	r4,4
10006548:	20c04036 	bltu	r4,r3,1000664c <_free_r+0x244>
1000654c:	1006d1ba 	srli	r3,r2,6
10006550:	19400e04 	addi	r5,r3,56
10006554:	2947883a 	add	r3,r5,r5
10006558:	18c7883a 	add	r3,r3,r3
1000655c:	18c7883a 	add	r3,r3,r3
10006560:	1a49883a 	add	r4,r3,r9
10006564:	20c00217 	ldw	r3,8(r4)
10006568:	01c40074 	movhi	r7,4097
1000656c:	39c1ea04 	addi	r7,r7,1960
10006570:	19003b26 	beq	r3,r4,10006660 <_free_r+0x258>
10006574:	01ffff04 	movi	r7,-4
10006578:	19400117 	ldw	r5,4(r3)
1000657c:	29ca703a 	and	r5,r5,r7
10006580:	1140022e 	bgeu	r2,r5,1000658c <_free_r+0x184>
10006584:	18c00217 	ldw	r3,8(r3)
10006588:	20fffb1e 	bne	r4,r3,10006578 <__alt_data_end+0xf8006578>
1000658c:	18800317 	ldw	r2,12(r3)
10006590:	30800315 	stw	r2,12(r6)
10006594:	30c00215 	stw	r3,8(r6)
10006598:	11800215 	stw	r6,8(r2)
1000659c:	19800315 	stw	r6,12(r3)
100065a0:	003fe006 	br	10006524 <__alt_data_end+0xf8006524>
100065a4:	2100004c 	andi	r4,r4,1
100065a8:	1885883a 	add	r2,r3,r2
100065ac:	2000071e 	bne	r4,zero,100065cc <_free_r+0x1c4>
100065b0:	817ffe17 	ldw	r5,-8(r16)
100065b4:	314dc83a 	sub	r6,r6,r5
100065b8:	30c00317 	ldw	r3,12(r6)
100065bc:	31000217 	ldw	r4,8(r6)
100065c0:	1145883a 	add	r2,r2,r5
100065c4:	20c00315 	stw	r3,12(r4)
100065c8:	19000215 	stw	r4,8(r3)
100065cc:	10c00054 	ori	r3,r2,1
100065d0:	30c00115 	stw	r3,4(r6)
100065d4:	00c40074 	movhi	r3,4097
100065d8:	18c35a04 	addi	r3,r3,3432
100065dc:	18c00017 	ldw	r3,0(r3)
100065e0:	49800215 	stw	r6,8(r9)
100065e4:	10ffcf36 	bltu	r2,r3,10006524 <__alt_data_end+0xf8006524>
100065e8:	00840074 	movhi	r2,4097
100065ec:	10860904 	addi	r2,r2,6180
100065f0:	11400017 	ldw	r5,0(r2)
100065f4:	8809883a 	mov	r4,r17
100065f8:	00062e40 	call	100062e4 <_malloc_trim_r>
100065fc:	003fc906 	br	10006524 <__alt_data_end+0xf8006524>
10006600:	28c9883a 	add	r4,r5,r3
10006604:	21000117 	ldw	r4,4(r4)
10006608:	2100004c 	andi	r4,r4,1
1000660c:	20000a1e 	bne	r4,zero,10006638 <_free_r+0x230>
10006610:	29000317 	ldw	r4,12(r5)
10006614:	29400217 	ldw	r5,8(r5)
10006618:	10c5883a 	add	r2,r2,r3
1000661c:	10c00054 	ori	r3,r2,1
10006620:	29000315 	stw	r4,12(r5)
10006624:	21400215 	stw	r5,8(r4)
10006628:	30c00115 	stw	r3,4(r6)
1000662c:	308d883a 	add	r6,r6,r2
10006630:	30800015 	stw	r2,0(r6)
10006634:	003fbb06 	br	10006524 <__alt_data_end+0xf8006524>
10006638:	10c00054 	ori	r3,r2,1
1000663c:	30c00115 	stw	r3,4(r6)
10006640:	308d883a 	add	r6,r6,r2
10006644:	30800015 	stw	r2,0(r6)
10006648:	003fb606 	br	10006524 <__alt_data_end+0xf8006524>
1000664c:	01000504 	movi	r4,20
10006650:	20c01436 	bltu	r4,r3,100066a4 <_free_r+0x29c>
10006654:	194016c4 	addi	r5,r3,91
10006658:	2947883a 	add	r3,r5,r5
1000665c:	003fbe06 	br	10006558 <__alt_data_end+0xf8006558>
10006660:	280bd0ba 	srai	r5,r5,2
10006664:	00800044 	movi	r2,1
10006668:	39000117 	ldw	r4,4(r7)
1000666c:	114a983a 	sll	r5,r2,r5
10006670:	1805883a 	mov	r2,r3
10006674:	2908b03a 	or	r4,r5,r4
10006678:	39000115 	stw	r4,4(r7)
1000667c:	003fc406 	br	10006590 <__alt_data_end+0xf8006590>
10006680:	49800515 	stw	r6,20(r9)
10006684:	49800415 	stw	r6,16(r9)
10006688:	10c00054 	ori	r3,r2,1
1000668c:	31000315 	stw	r4,12(r6)
10006690:	31000215 	stw	r4,8(r6)
10006694:	30c00115 	stw	r3,4(r6)
10006698:	308d883a 	add	r6,r6,r2
1000669c:	30800015 	stw	r2,0(r6)
100066a0:	003fa006 	br	10006524 <__alt_data_end+0xf8006524>
100066a4:	01001504 	movi	r4,84
100066a8:	20c00436 	bltu	r4,r3,100066bc <_free_r+0x2b4>
100066ac:	1006d33a 	srli	r3,r2,12
100066b0:	19401b84 	addi	r5,r3,110
100066b4:	2947883a 	add	r3,r5,r5
100066b8:	003fa706 	br	10006558 <__alt_data_end+0xf8006558>
100066bc:	01005504 	movi	r4,340
100066c0:	20c00436 	bltu	r4,r3,100066d4 <_free_r+0x2cc>
100066c4:	1006d3fa 	srli	r3,r2,15
100066c8:	19401dc4 	addi	r5,r3,119
100066cc:	2947883a 	add	r3,r5,r5
100066d0:	003fa106 	br	10006558 <__alt_data_end+0xf8006558>
100066d4:	01015504 	movi	r4,1364
100066d8:	20c00436 	bltu	r4,r3,100066ec <_free_r+0x2e4>
100066dc:	1006d4ba 	srli	r3,r2,18
100066e0:	19401f04 	addi	r5,r3,124
100066e4:	2947883a 	add	r3,r5,r5
100066e8:	003f9b06 	br	10006558 <__alt_data_end+0xf8006558>
100066ec:	00c03f04 	movi	r3,252
100066f0:	01401f84 	movi	r5,126
100066f4:	003f9806 	br	10006558 <__alt_data_end+0xf8006558>

100066f8 <__sfvwrite_r>:
100066f8:	30800217 	ldw	r2,8(r6)
100066fc:	10004526 	beq	r2,zero,10006814 <__sfvwrite_r+0x11c>
10006700:	28c0030b 	ldhu	r3,12(r5)
10006704:	defff404 	addi	sp,sp,-48
10006708:	dd400715 	stw	r21,28(sp)
1000670c:	dcc00515 	stw	r19,20(sp)
10006710:	dc000215 	stw	r16,8(sp)
10006714:	dfc00b15 	stw	ra,44(sp)
10006718:	df000a15 	stw	fp,40(sp)
1000671c:	ddc00915 	stw	r23,36(sp)
10006720:	dd800815 	stw	r22,32(sp)
10006724:	dd000615 	stw	r20,24(sp)
10006728:	dc800415 	stw	r18,16(sp)
1000672c:	dc400315 	stw	r17,12(sp)
10006730:	1880020c 	andi	r2,r3,8
10006734:	2821883a 	mov	r16,r5
10006738:	202b883a 	mov	r21,r4
1000673c:	3027883a 	mov	r19,r6
10006740:	10002526 	beq	r2,zero,100067d8 <__sfvwrite_r+0xe0>
10006744:	28800417 	ldw	r2,16(r5)
10006748:	10002326 	beq	r2,zero,100067d8 <__sfvwrite_r+0xe0>
1000674c:	1880008c 	andi	r2,r3,2
10006750:	9c400017 	ldw	r17,0(r19)
10006754:	10003126 	beq	r2,zero,1000681c <__sfvwrite_r+0x124>
10006758:	0029883a 	mov	r20,zero
1000675c:	0025883a 	mov	r18,zero
10006760:	05810004 	movi	r22,1024
10006764:	a00d883a 	mov	r6,r20
10006768:	a809883a 	mov	r4,r21
1000676c:	90002526 	beq	r18,zero,10006804 <__sfvwrite_r+0x10c>
10006770:	900f883a 	mov	r7,r18
10006774:	81400717 	ldw	r5,28(r16)
10006778:	b480012e 	bgeu	r22,r18,10006780 <__sfvwrite_r+0x88>
1000677c:	01c10004 	movi	r7,1024
10006780:	80800917 	ldw	r2,36(r16)
10006784:	103ee83a 	callr	r2
10006788:	0080510e 	bge	zero,r2,100068d0 <__sfvwrite_r+0x1d8>
1000678c:	98c00217 	ldw	r3,8(r19)
10006790:	a0a9883a 	add	r20,r20,r2
10006794:	90a5c83a 	sub	r18,r18,r2
10006798:	1885c83a 	sub	r2,r3,r2
1000679c:	98800215 	stw	r2,8(r19)
100067a0:	103ff01e 	bne	r2,zero,10006764 <__alt_data_end+0xf8006764>
100067a4:	0005883a 	mov	r2,zero
100067a8:	dfc00b17 	ldw	ra,44(sp)
100067ac:	df000a17 	ldw	fp,40(sp)
100067b0:	ddc00917 	ldw	r23,36(sp)
100067b4:	dd800817 	ldw	r22,32(sp)
100067b8:	dd400717 	ldw	r21,28(sp)
100067bc:	dd000617 	ldw	r20,24(sp)
100067c0:	dcc00517 	ldw	r19,20(sp)
100067c4:	dc800417 	ldw	r18,16(sp)
100067c8:	dc400317 	ldw	r17,12(sp)
100067cc:	dc000217 	ldw	r16,8(sp)
100067d0:	dec00c04 	addi	sp,sp,48
100067d4:	f800283a 	ret
100067d8:	a809883a 	mov	r4,r21
100067dc:	800b883a 	mov	r5,r16
100067e0:	00042580 	call	10004258 <__swsetup_r>
100067e4:	80c0030b 	ldhu	r3,12(r16)
100067e8:	103fd826 	beq	r2,zero,1000674c <__alt_data_end+0xf800674c>
100067ec:	18c01014 	ori	r3,r3,64
100067f0:	80c0030d 	sth	r3,12(r16)
100067f4:	00c00244 	movi	r3,9
100067f8:	00bfffc4 	movi	r2,-1
100067fc:	a8c00015 	stw	r3,0(r21)
10006800:	003fe906 	br	100067a8 <__alt_data_end+0xf80067a8>
10006804:	8d000017 	ldw	r20,0(r17)
10006808:	8c800117 	ldw	r18,4(r17)
1000680c:	8c400204 	addi	r17,r17,8
10006810:	003fd406 	br	10006764 <__alt_data_end+0xf8006764>
10006814:	0005883a 	mov	r2,zero
10006818:	f800283a 	ret
1000681c:	1880004c 	andi	r2,r3,1
10006820:	1000301e 	bne	r2,zero,100068e4 <__sfvwrite_r+0x1ec>
10006824:	002f883a 	mov	r23,zero
10006828:	0025883a 	mov	r18,zero
1000682c:	90001c26 	beq	r18,zero,100068a0 <__sfvwrite_r+0x1a8>
10006830:	1880800c 	andi	r2,r3,512
10006834:	85000217 	ldw	r20,8(r16)
10006838:	10006c26 	beq	r2,zero,100069ec <__sfvwrite_r+0x2f4>
1000683c:	a02d883a 	mov	r22,r20
10006840:	95008536 	bltu	r18,r20,10006a58 <__sfvwrite_r+0x360>
10006844:	1881200c 	andi	r2,r3,1152
10006848:	10009d1e 	bne	r2,zero,10006ac0 <__sfvwrite_r+0x3c8>
1000684c:	81000017 	ldw	r4,0(r16)
10006850:	a039883a 	mov	fp,r20
10006854:	9029883a 	mov	r20,r18
10006858:	b80b883a 	mov	r5,r23
1000685c:	b00d883a 	mov	r6,r22
10006860:	000796c0 	call	1000796c <memmove>
10006864:	80c00217 	ldw	r3,8(r16)
10006868:	81000017 	ldw	r4,0(r16)
1000686c:	9005883a 	mov	r2,r18
10006870:	1f39c83a 	sub	fp,r3,fp
10006874:	258f883a 	add	r7,r4,r22
10006878:	87000215 	stw	fp,8(r16)
1000687c:	81c00015 	stw	r7,0(r16)
10006880:	98c00217 	ldw	r3,8(r19)
10006884:	b8af883a 	add	r23,r23,r2
10006888:	90a5c83a 	sub	r18,r18,r2
1000688c:	1d05c83a 	sub	r2,r3,r20
10006890:	98800215 	stw	r2,8(r19)
10006894:	103fc326 	beq	r2,zero,100067a4 <__alt_data_end+0xf80067a4>
10006898:	80c0030b 	ldhu	r3,12(r16)
1000689c:	903fe41e 	bne	r18,zero,10006830 <__alt_data_end+0xf8006830>
100068a0:	8dc00017 	ldw	r23,0(r17)
100068a4:	8c800117 	ldw	r18,4(r17)
100068a8:	8c400204 	addi	r17,r17,8
100068ac:	003fdf06 	br	1000682c <__alt_data_end+0xf800682c>
100068b0:	0008c340 	call	10008c34 <_realloc_r>
100068b4:	102d883a 	mov	r22,r2
100068b8:	1000a01e 	bne	r2,zero,10006b3c <__sfvwrite_r+0x444>
100068bc:	81400417 	ldw	r5,16(r16)
100068c0:	a809883a 	mov	r4,r21
100068c4:	00064080 	call	10006408 <_free_r>
100068c8:	00800304 	movi	r2,12
100068cc:	a8800015 	stw	r2,0(r21)
100068d0:	80c0030b 	ldhu	r3,12(r16)
100068d4:	00bfffc4 	movi	r2,-1
100068d8:	18c01014 	ori	r3,r3,64
100068dc:	80c0030d 	sth	r3,12(r16)
100068e0:	003fb106 	br	100067a8 <__alt_data_end+0xf80067a8>
100068e4:	0029883a 	mov	r20,zero
100068e8:	0011883a 	mov	r8,zero
100068ec:	0039883a 	mov	fp,zero
100068f0:	0025883a 	mov	r18,zero
100068f4:	90001f26 	beq	r18,zero,10006974 <__sfvwrite_r+0x27c>
100068f8:	40006826 	beq	r8,zero,10006a9c <__sfvwrite_r+0x3a4>
100068fc:	a02f883a 	mov	r23,r20
10006900:	9500012e 	bgeu	r18,r20,10006908 <__sfvwrite_r+0x210>
10006904:	902f883a 	mov	r23,r18
10006908:	81000017 	ldw	r4,0(r16)
1000690c:	80800417 	ldw	r2,16(r16)
10006910:	b82d883a 	mov	r22,r23
10006914:	81800217 	ldw	r6,8(r16)
10006918:	81c00517 	ldw	r7,20(r16)
1000691c:	1100022e 	bgeu	r2,r4,10006928 <__sfvwrite_r+0x230>
10006920:	31c7883a 	add	r3,r6,r7
10006924:	1dc01816 	blt	r3,r23,10006988 <__sfvwrite_r+0x290>
10006928:	b9c03f16 	blt	r23,r7,10006a28 <__sfvwrite_r+0x330>
1000692c:	80800917 	ldw	r2,36(r16)
10006930:	81400717 	ldw	r5,28(r16)
10006934:	a809883a 	mov	r4,r21
10006938:	da000115 	stw	r8,4(sp)
1000693c:	e00d883a 	mov	r6,fp
10006940:	103ee83a 	callr	r2
10006944:	102d883a 	mov	r22,r2
10006948:	da000117 	ldw	r8,4(sp)
1000694c:	00bfe00e 	bge	zero,r2,100068d0 <__alt_data_end+0xf80068d0>
10006950:	a5a9c83a 	sub	r20,r20,r22
10006954:	a0001f26 	beq	r20,zero,100069d4 <__sfvwrite_r+0x2dc>
10006958:	98800217 	ldw	r2,8(r19)
1000695c:	e5b9883a 	add	fp,fp,r22
10006960:	95a5c83a 	sub	r18,r18,r22
10006964:	15adc83a 	sub	r22,r2,r22
10006968:	9d800215 	stw	r22,8(r19)
1000696c:	b03f8d26 	beq	r22,zero,100067a4 <__alt_data_end+0xf80067a4>
10006970:	903fe11e 	bne	r18,zero,100068f8 <__alt_data_end+0xf80068f8>
10006974:	8f000017 	ldw	fp,0(r17)
10006978:	8c800117 	ldw	r18,4(r17)
1000697c:	0011883a 	mov	r8,zero
10006980:	8c400204 	addi	r17,r17,8
10006984:	003fdb06 	br	100068f4 <__alt_data_end+0xf80068f4>
10006988:	180d883a 	mov	r6,r3
1000698c:	e00b883a 	mov	r5,fp
10006990:	da000115 	stw	r8,4(sp)
10006994:	d8c00015 	stw	r3,0(sp)
10006998:	000796c0 	call	1000796c <memmove>
1000699c:	d8c00017 	ldw	r3,0(sp)
100069a0:	80800017 	ldw	r2,0(r16)
100069a4:	a809883a 	mov	r4,r21
100069a8:	800b883a 	mov	r5,r16
100069ac:	10c5883a 	add	r2,r2,r3
100069b0:	80800015 	stw	r2,0(r16)
100069b4:	d8c00015 	stw	r3,0(sp)
100069b8:	0005cd80 	call	10005cd8 <_fflush_r>
100069bc:	d8c00017 	ldw	r3,0(sp)
100069c0:	da000117 	ldw	r8,4(sp)
100069c4:	103fc21e 	bne	r2,zero,100068d0 <__alt_data_end+0xf80068d0>
100069c8:	182d883a 	mov	r22,r3
100069cc:	a5a9c83a 	sub	r20,r20,r22
100069d0:	a03fe11e 	bne	r20,zero,10006958 <__alt_data_end+0xf8006958>
100069d4:	a809883a 	mov	r4,r21
100069d8:	800b883a 	mov	r5,r16
100069dc:	0005cd80 	call	10005cd8 <_fflush_r>
100069e0:	103fbb1e 	bne	r2,zero,100068d0 <__alt_data_end+0xf80068d0>
100069e4:	0011883a 	mov	r8,zero
100069e8:	003fdb06 	br	10006958 <__alt_data_end+0xf8006958>
100069ec:	81000017 	ldw	r4,0(r16)
100069f0:	80800417 	ldw	r2,16(r16)
100069f4:	1100012e 	bgeu	r2,r4,100069fc <__sfvwrite_r+0x304>
100069f8:	a4805a36 	bltu	r20,r18,10006b64 <__sfvwrite_r+0x46c>
100069fc:	81c00517 	ldw	r7,20(r16)
10006a00:	91c01a36 	bltu	r18,r7,10006a6c <__sfvwrite_r+0x374>
10006a04:	80800917 	ldw	r2,36(r16)
10006a08:	81400717 	ldw	r5,28(r16)
10006a0c:	a809883a 	mov	r4,r21
10006a10:	b80d883a 	mov	r6,r23
10006a14:	103ee83a 	callr	r2
10006a18:	1029883a 	mov	r20,r2
10006a1c:	00bfac0e 	bge	zero,r2,100068d0 <__alt_data_end+0xf80068d0>
10006a20:	a005883a 	mov	r2,r20
10006a24:	003f9606 	br	10006880 <__alt_data_end+0xf8006880>
10006a28:	b80d883a 	mov	r6,r23
10006a2c:	e00b883a 	mov	r5,fp
10006a30:	da000115 	stw	r8,4(sp)
10006a34:	000796c0 	call	1000796c <memmove>
10006a38:	80800217 	ldw	r2,8(r16)
10006a3c:	80c00017 	ldw	r3,0(r16)
10006a40:	da000117 	ldw	r8,4(sp)
10006a44:	15c5c83a 	sub	r2,r2,r23
10006a48:	1def883a 	add	r23,r3,r23
10006a4c:	80800215 	stw	r2,8(r16)
10006a50:	85c00015 	stw	r23,0(r16)
10006a54:	003fbe06 	br	10006950 <__alt_data_end+0xf8006950>
10006a58:	81000017 	ldw	r4,0(r16)
10006a5c:	9039883a 	mov	fp,r18
10006a60:	9029883a 	mov	r20,r18
10006a64:	902d883a 	mov	r22,r18
10006a68:	003f7b06 	br	10006858 <__alt_data_end+0xf8006858>
10006a6c:	b80b883a 	mov	r5,r23
10006a70:	900d883a 	mov	r6,r18
10006a74:	000796c0 	call	1000796c <memmove>
10006a78:	80c00217 	ldw	r3,8(r16)
10006a7c:	80800017 	ldw	r2,0(r16)
10006a80:	9029883a 	mov	r20,r18
10006a84:	1c87c83a 	sub	r3,r3,r18
10006a88:	1485883a 	add	r2,r2,r18
10006a8c:	80800015 	stw	r2,0(r16)
10006a90:	80c00215 	stw	r3,8(r16)
10006a94:	9005883a 	mov	r2,r18
10006a98:	003f7906 	br	10006880 <__alt_data_end+0xf8006880>
10006a9c:	e009883a 	mov	r4,fp
10006aa0:	01400284 	movi	r5,10
10006aa4:	900d883a 	mov	r6,r18
10006aa8:	000774c0 	call	1000774c <memchr>
10006aac:	10003826 	beq	r2,zero,10006b90 <__sfvwrite_r+0x498>
10006ab0:	10800044 	addi	r2,r2,1
10006ab4:	1729c83a 	sub	r20,r2,fp
10006ab8:	02000044 	movi	r8,1
10006abc:	003f8f06 	br	100068fc <__alt_data_end+0xf80068fc>
10006ac0:	80800517 	ldw	r2,20(r16)
10006ac4:	81400417 	ldw	r5,16(r16)
10006ac8:	87000017 	ldw	fp,0(r16)
10006acc:	10a9883a 	add	r20,r2,r2
10006ad0:	a085883a 	add	r2,r20,r2
10006ad4:	1028d7fa 	srli	r20,r2,31
10006ad8:	e179c83a 	sub	fp,fp,r5
10006adc:	e1000044 	addi	r4,fp,1
10006ae0:	a085883a 	add	r2,r20,r2
10006ae4:	1029d07a 	srai	r20,r2,1
10006ae8:	2485883a 	add	r2,r4,r18
10006aec:	a00d883a 	mov	r6,r20
10006af0:	a080022e 	bgeu	r20,r2,10006afc <__sfvwrite_r+0x404>
10006af4:	1029883a 	mov	r20,r2
10006af8:	100d883a 	mov	r6,r2
10006afc:	18c1000c 	andi	r3,r3,1024
10006b00:	a809883a 	mov	r4,r21
10006b04:	183f6a26 	beq	r3,zero,100068b0 <__alt_data_end+0xf80068b0>
10006b08:	300b883a 	mov	r5,r6
10006b0c:	0006fa40 	call	10006fa4 <_malloc_r>
10006b10:	102d883a 	mov	r22,r2
10006b14:	103f6c26 	beq	r2,zero,100068c8 <__alt_data_end+0xf80068c8>
10006b18:	81400417 	ldw	r5,16(r16)
10006b1c:	1009883a 	mov	r4,r2
10006b20:	e00d883a 	mov	r6,fp
10006b24:	00078340 	call	10007834 <memcpy>
10006b28:	8080030b 	ldhu	r2,12(r16)
10006b2c:	00fedfc4 	movi	r3,-1153
10006b30:	10c4703a 	and	r2,r2,r3
10006b34:	10802014 	ori	r2,r2,128
10006b38:	8080030d 	sth	r2,12(r16)
10006b3c:	b709883a 	add	r4,r22,fp
10006b40:	a707c83a 	sub	r3,r20,fp
10006b44:	85800415 	stw	r22,16(r16)
10006b48:	85000515 	stw	r20,20(r16)
10006b4c:	81000015 	stw	r4,0(r16)
10006b50:	9039883a 	mov	fp,r18
10006b54:	80c00215 	stw	r3,8(r16)
10006b58:	9029883a 	mov	r20,r18
10006b5c:	902d883a 	mov	r22,r18
10006b60:	003f3d06 	br	10006858 <__alt_data_end+0xf8006858>
10006b64:	b80b883a 	mov	r5,r23
10006b68:	a00d883a 	mov	r6,r20
10006b6c:	000796c0 	call	1000796c <memmove>
10006b70:	80800017 	ldw	r2,0(r16)
10006b74:	a809883a 	mov	r4,r21
10006b78:	800b883a 	mov	r5,r16
10006b7c:	1505883a 	add	r2,r2,r20
10006b80:	80800015 	stw	r2,0(r16)
10006b84:	0005cd80 	call	10005cd8 <_fflush_r>
10006b88:	103fa526 	beq	r2,zero,10006a20 <__alt_data_end+0xf8006a20>
10006b8c:	003f5006 	br	100068d0 <__alt_data_end+0xf80068d0>
10006b90:	95000044 	addi	r20,r18,1
10006b94:	02000044 	movi	r8,1
10006b98:	003f5806 	br	100068fc <__alt_data_end+0xf80068fc>

10006b9c <_fwalk>:
10006b9c:	defff804 	addi	sp,sp,-32
10006ba0:	dd400515 	stw	r21,20(sp)
10006ba4:	2540b804 	addi	r21,r4,736
10006ba8:	dd800615 	stw	r22,24(sp)
10006bac:	dd000415 	stw	r20,16(sp)
10006bb0:	dfc00715 	stw	ra,28(sp)
10006bb4:	dcc00315 	stw	r19,12(sp)
10006bb8:	dc800215 	stw	r18,8(sp)
10006bbc:	dc400115 	stw	r17,4(sp)
10006bc0:	dc000015 	stw	r16,0(sp)
10006bc4:	2829883a 	mov	r20,r5
10006bc8:	002d883a 	mov	r22,zero
10006bcc:	00062a40 	call	100062a4 <__sfp_lock_acquire>
10006bd0:	a8001426 	beq	r21,zero,10006c24 <_fwalk+0x88>
10006bd4:	04ffffc4 	movi	r19,-1
10006bd8:	ac400117 	ldw	r17,4(r21)
10006bdc:	ac800217 	ldw	r18,8(r21)
10006be0:	8c7fffc4 	addi	r17,r17,-1
10006be4:	88000d16 	blt	r17,zero,10006c1c <_fwalk+0x80>
10006be8:	94000304 	addi	r16,r18,12
10006bec:	94800384 	addi	r18,r18,14
10006bf0:	80c0000f 	ldh	r3,0(r16)
10006bf4:	8c7fffc4 	addi	r17,r17,-1
10006bf8:	813ffd04 	addi	r4,r16,-12
10006bfc:	18000426 	beq	r3,zero,10006c10 <_fwalk+0x74>
10006c00:	90c0000f 	ldh	r3,0(r18)
10006c04:	1cc00226 	beq	r3,r19,10006c10 <_fwalk+0x74>
10006c08:	a03ee83a 	callr	r20
10006c0c:	b0acb03a 	or	r22,r22,r2
10006c10:	84001a04 	addi	r16,r16,104
10006c14:	94801a04 	addi	r18,r18,104
10006c18:	8cfff51e 	bne	r17,r19,10006bf0 <__alt_data_end+0xf8006bf0>
10006c1c:	ad400017 	ldw	r21,0(r21)
10006c20:	a83fed1e 	bne	r21,zero,10006bd8 <__alt_data_end+0xf8006bd8>
10006c24:	00062a80 	call	100062a8 <__sfp_lock_release>
10006c28:	b005883a 	mov	r2,r22
10006c2c:	dfc00717 	ldw	ra,28(sp)
10006c30:	dd800617 	ldw	r22,24(sp)
10006c34:	dd400517 	ldw	r21,20(sp)
10006c38:	dd000417 	ldw	r20,16(sp)
10006c3c:	dcc00317 	ldw	r19,12(sp)
10006c40:	dc800217 	ldw	r18,8(sp)
10006c44:	dc400117 	ldw	r17,4(sp)
10006c48:	dc000017 	ldw	r16,0(sp)
10006c4c:	dec00804 	addi	sp,sp,32
10006c50:	f800283a 	ret

10006c54 <_fwalk_reent>:
10006c54:	defff804 	addi	sp,sp,-32
10006c58:	dd400515 	stw	r21,20(sp)
10006c5c:	2540b804 	addi	r21,r4,736
10006c60:	dd800615 	stw	r22,24(sp)
10006c64:	dd000415 	stw	r20,16(sp)
10006c68:	dcc00315 	stw	r19,12(sp)
10006c6c:	dfc00715 	stw	ra,28(sp)
10006c70:	dc800215 	stw	r18,8(sp)
10006c74:	dc400115 	stw	r17,4(sp)
10006c78:	dc000015 	stw	r16,0(sp)
10006c7c:	2027883a 	mov	r19,r4
10006c80:	2829883a 	mov	r20,r5
10006c84:	002d883a 	mov	r22,zero
10006c88:	00062a40 	call	100062a4 <__sfp_lock_acquire>
10006c8c:	a8001326 	beq	r21,zero,10006cdc <_fwalk_reent+0x88>
10006c90:	04bfffc4 	movi	r18,-1
10006c94:	ac400117 	ldw	r17,4(r21)
10006c98:	ac000217 	ldw	r16,8(r21)
10006c9c:	8c7fffc4 	addi	r17,r17,-1
10006ca0:	88000c16 	blt	r17,zero,10006cd4 <_fwalk_reent+0x80>
10006ca4:	84000304 	addi	r16,r16,12
10006ca8:	80c0000f 	ldh	r3,0(r16)
10006cac:	8c7fffc4 	addi	r17,r17,-1
10006cb0:	817ffd04 	addi	r5,r16,-12
10006cb4:	18000526 	beq	r3,zero,10006ccc <_fwalk_reent+0x78>
10006cb8:	80c0008f 	ldh	r3,2(r16)
10006cbc:	9809883a 	mov	r4,r19
10006cc0:	1c800226 	beq	r3,r18,10006ccc <_fwalk_reent+0x78>
10006cc4:	a03ee83a 	callr	r20
10006cc8:	b0acb03a 	or	r22,r22,r2
10006ccc:	84001a04 	addi	r16,r16,104
10006cd0:	8cbff51e 	bne	r17,r18,10006ca8 <__alt_data_end+0xf8006ca8>
10006cd4:	ad400017 	ldw	r21,0(r21)
10006cd8:	a83fee1e 	bne	r21,zero,10006c94 <__alt_data_end+0xf8006c94>
10006cdc:	00062a80 	call	100062a8 <__sfp_lock_release>
10006ce0:	b005883a 	mov	r2,r22
10006ce4:	dfc00717 	ldw	ra,28(sp)
10006ce8:	dd800617 	ldw	r22,24(sp)
10006cec:	dd400517 	ldw	r21,20(sp)
10006cf0:	dd000417 	ldw	r20,16(sp)
10006cf4:	dcc00317 	ldw	r19,12(sp)
10006cf8:	dc800217 	ldw	r18,8(sp)
10006cfc:	dc400117 	ldw	r17,4(sp)
10006d00:	dc000017 	ldw	r16,0(sp)
10006d04:	dec00804 	addi	sp,sp,32
10006d08:	f800283a 	ret

10006d0c <_setlocale_r>:
10006d0c:	30001b26 	beq	r6,zero,10006d7c <_setlocale_r+0x70>
10006d10:	01440074 	movhi	r5,4097
10006d14:	defffe04 	addi	sp,sp,-8
10006d18:	29402c04 	addi	r5,r5,176
10006d1c:	3009883a 	mov	r4,r6
10006d20:	dc000015 	stw	r16,0(sp)
10006d24:	dfc00115 	stw	ra,4(sp)
10006d28:	3021883a 	mov	r16,r6
10006d2c:	00093d80 	call	100093d8 <strcmp>
10006d30:	1000061e 	bne	r2,zero,10006d4c <_setlocale_r+0x40>
10006d34:	00840074 	movhi	r2,4097
10006d38:	10802b04 	addi	r2,r2,172
10006d3c:	dfc00117 	ldw	ra,4(sp)
10006d40:	dc000017 	ldw	r16,0(sp)
10006d44:	dec00204 	addi	sp,sp,8
10006d48:	f800283a 	ret
10006d4c:	01440074 	movhi	r5,4097
10006d50:	29402b04 	addi	r5,r5,172
10006d54:	8009883a 	mov	r4,r16
10006d58:	00093d80 	call	100093d8 <strcmp>
10006d5c:	103ff526 	beq	r2,zero,10006d34 <__alt_data_end+0xf8006d34>
10006d60:	01440074 	movhi	r5,4097
10006d64:	29401604 	addi	r5,r5,88
10006d68:	8009883a 	mov	r4,r16
10006d6c:	00093d80 	call	100093d8 <strcmp>
10006d70:	103ff026 	beq	r2,zero,10006d34 <__alt_data_end+0xf8006d34>
10006d74:	0005883a 	mov	r2,zero
10006d78:	003ff006 	br	10006d3c <__alt_data_end+0xf8006d3c>
10006d7c:	00840074 	movhi	r2,4097
10006d80:	10802b04 	addi	r2,r2,172
10006d84:	f800283a 	ret

10006d88 <__locale_charset>:
10006d88:	00840074 	movhi	r2,4097
10006d8c:	1081d404 	addi	r2,r2,1872
10006d90:	f800283a 	ret

10006d94 <__locale_mb_cur_max>:
10006d94:	00840074 	movhi	r2,4097
10006d98:	10835804 	addi	r2,r2,3424
10006d9c:	10800017 	ldw	r2,0(r2)
10006da0:	f800283a 	ret

10006da4 <__locale_msgcharset>:
10006da4:	00840074 	movhi	r2,4097
10006da8:	1081cc04 	addi	r2,r2,1840
10006dac:	f800283a 	ret

10006db0 <__locale_cjk_lang>:
10006db0:	0005883a 	mov	r2,zero
10006db4:	f800283a 	ret

10006db8 <_localeconv_r>:
10006db8:	00840074 	movhi	r2,4097
10006dbc:	1081dc04 	addi	r2,r2,1904
10006dc0:	f800283a 	ret

10006dc4 <setlocale>:
10006dc4:	00c40074 	movhi	r3,4097
10006dc8:	18c35704 	addi	r3,r3,3420
10006dcc:	2005883a 	mov	r2,r4
10006dd0:	19000017 	ldw	r4,0(r3)
10006dd4:	280d883a 	mov	r6,r5
10006dd8:	100b883a 	mov	r5,r2
10006ddc:	0006d0c1 	jmpi	10006d0c <_setlocale_r>

10006de0 <localeconv>:
10006de0:	00840074 	movhi	r2,4097
10006de4:	1081dc04 	addi	r2,r2,1904
10006de8:	f800283a 	ret

10006dec <__smakebuf_r>:
10006dec:	2880030b 	ldhu	r2,12(r5)
10006df0:	10c0008c 	andi	r3,r2,2
10006df4:	1800401e 	bne	r3,zero,10006ef8 <__smakebuf_r+0x10c>
10006df8:	deffec04 	addi	sp,sp,-80
10006dfc:	dc000f15 	stw	r16,60(sp)
10006e00:	2821883a 	mov	r16,r5
10006e04:	2940038f 	ldh	r5,14(r5)
10006e08:	dc401015 	stw	r17,64(sp)
10006e0c:	dfc01315 	stw	ra,76(sp)
10006e10:	dcc01215 	stw	r19,72(sp)
10006e14:	dc801115 	stw	r18,68(sp)
10006e18:	2023883a 	mov	r17,r4
10006e1c:	28001b16 	blt	r5,zero,10006e8c <__smakebuf_r+0xa0>
10006e20:	d80d883a 	mov	r6,sp
10006e24:	000ae500 	call	1000ae50 <_fstat_r>
10006e28:	10001716 	blt	r2,zero,10006e88 <__smakebuf_r+0x9c>
10006e2c:	d8800117 	ldw	r2,4(sp)
10006e30:	00e00014 	movui	r3,32768
10006e34:	10bc000c 	andi	r2,r2,61440
10006e38:	10c03726 	beq	r2,r3,10006f18 <__smakebuf_r+0x12c>
10006e3c:	80c0030b 	ldhu	r3,12(r16)
10006e40:	18c20014 	ori	r3,r3,2048
10006e44:	80c0030d 	sth	r3,12(r16)
10006e48:	00c80004 	movi	r3,8192
10006e4c:	10c03c1e 	bne	r2,r3,10006f40 <__smakebuf_r+0x154>
10006e50:	8140038f 	ldh	r5,14(r16)
10006e54:	8809883a 	mov	r4,r17
10006e58:	000aea80 	call	1000aea8 <_isatty_r>
10006e5c:	10004e26 	beq	r2,zero,10006f98 <__smakebuf_r+0x1ac>
10006e60:	8080030b 	ldhu	r2,12(r16)
10006e64:	04c00044 	movi	r19,1
10006e68:	80c010c4 	addi	r3,r16,67
10006e6c:	14c4b03a 	or	r2,r2,r19
10006e70:	8080030d 	sth	r2,12(r16)
10006e74:	80c00015 	stw	r3,0(r16)
10006e78:	80c00415 	stw	r3,16(r16)
10006e7c:	84c00515 	stw	r19,20(r16)
10006e80:	04810004 	movi	r18,1024
10006e84:	00000706 	br	10006ea4 <__smakebuf_r+0xb8>
10006e88:	8080030b 	ldhu	r2,12(r16)
10006e8c:	10c0200c 	andi	r3,r2,128
10006e90:	18001f1e 	bne	r3,zero,10006f10 <__smakebuf_r+0x124>
10006e94:	04810004 	movi	r18,1024
10006e98:	10820014 	ori	r2,r2,2048
10006e9c:	8080030d 	sth	r2,12(r16)
10006ea0:	0027883a 	mov	r19,zero
10006ea4:	8809883a 	mov	r4,r17
10006ea8:	900b883a 	mov	r5,r18
10006eac:	0006fa40 	call	10006fa4 <_malloc_r>
10006eb0:	10002e26 	beq	r2,zero,10006f6c <__smakebuf_r+0x180>
10006eb4:	80c0030b 	ldhu	r3,12(r16)
10006eb8:	01040034 	movhi	r4,4096
10006ebc:	2117d004 	addi	r4,r4,24384
10006ec0:	89000f15 	stw	r4,60(r17)
10006ec4:	18c02014 	ori	r3,r3,128
10006ec8:	80c0030d 	sth	r3,12(r16)
10006ecc:	80800015 	stw	r2,0(r16)
10006ed0:	80800415 	stw	r2,16(r16)
10006ed4:	84800515 	stw	r18,20(r16)
10006ed8:	98001c1e 	bne	r19,zero,10006f4c <__smakebuf_r+0x160>
10006edc:	dfc01317 	ldw	ra,76(sp)
10006ee0:	dcc01217 	ldw	r19,72(sp)
10006ee4:	dc801117 	ldw	r18,68(sp)
10006ee8:	dc401017 	ldw	r17,64(sp)
10006eec:	dc000f17 	ldw	r16,60(sp)
10006ef0:	dec01404 	addi	sp,sp,80
10006ef4:	f800283a 	ret
10006ef8:	288010c4 	addi	r2,r5,67
10006efc:	28800015 	stw	r2,0(r5)
10006f00:	28800415 	stw	r2,16(r5)
10006f04:	00800044 	movi	r2,1
10006f08:	28800515 	stw	r2,20(r5)
10006f0c:	f800283a 	ret
10006f10:	04801004 	movi	r18,64
10006f14:	003fe006 	br	10006e98 <__alt_data_end+0xf8006e98>
10006f18:	81000a17 	ldw	r4,40(r16)
10006f1c:	00c40074 	movhi	r3,4097
10006f20:	18e4dd04 	addi	r3,r3,-27788
10006f24:	20ffc51e 	bne	r4,r3,10006e3c <__alt_data_end+0xf8006e3c>
10006f28:	80c0030b 	ldhu	r3,12(r16)
10006f2c:	01010004 	movi	r4,1024
10006f30:	81001315 	stw	r4,76(r16)
10006f34:	1906b03a 	or	r3,r3,r4
10006f38:	80c0030d 	sth	r3,12(r16)
10006f3c:	003fc206 	br	10006e48 <__alt_data_end+0xf8006e48>
10006f40:	0027883a 	mov	r19,zero
10006f44:	04810004 	movi	r18,1024
10006f48:	003fd606 	br	10006ea4 <__alt_data_end+0xf8006ea4>
10006f4c:	8140038f 	ldh	r5,14(r16)
10006f50:	8809883a 	mov	r4,r17
10006f54:	000aea80 	call	1000aea8 <_isatty_r>
10006f58:	103fe026 	beq	r2,zero,10006edc <__alt_data_end+0xf8006edc>
10006f5c:	8080030b 	ldhu	r2,12(r16)
10006f60:	10800054 	ori	r2,r2,1
10006f64:	8080030d 	sth	r2,12(r16)
10006f68:	003fdc06 	br	10006edc <__alt_data_end+0xf8006edc>
10006f6c:	8080030b 	ldhu	r2,12(r16)
10006f70:	10c0800c 	andi	r3,r2,512
10006f74:	183fd91e 	bne	r3,zero,10006edc <__alt_data_end+0xf8006edc>
10006f78:	10800094 	ori	r2,r2,2
10006f7c:	80c010c4 	addi	r3,r16,67
10006f80:	8080030d 	sth	r2,12(r16)
10006f84:	00800044 	movi	r2,1
10006f88:	80c00015 	stw	r3,0(r16)
10006f8c:	80c00415 	stw	r3,16(r16)
10006f90:	80800515 	stw	r2,20(r16)
10006f94:	003fd106 	br	10006edc <__alt_data_end+0xf8006edc>
10006f98:	04c00044 	movi	r19,1
10006f9c:	04810004 	movi	r18,1024
10006fa0:	003fc006 	br	10006ea4 <__alt_data_end+0xf8006ea4>

10006fa4 <_malloc_r>:
10006fa4:	defff504 	addi	sp,sp,-44
10006fa8:	dc800315 	stw	r18,12(sp)
10006fac:	dfc00a15 	stw	ra,40(sp)
10006fb0:	df000915 	stw	fp,36(sp)
10006fb4:	ddc00815 	stw	r23,32(sp)
10006fb8:	dd800715 	stw	r22,28(sp)
10006fbc:	dd400615 	stw	r21,24(sp)
10006fc0:	dd000515 	stw	r20,20(sp)
10006fc4:	dcc00415 	stw	r19,16(sp)
10006fc8:	dc400215 	stw	r17,8(sp)
10006fcc:	dc000115 	stw	r16,4(sp)
10006fd0:	288002c4 	addi	r2,r5,11
10006fd4:	00c00584 	movi	r3,22
10006fd8:	2025883a 	mov	r18,r4
10006fdc:	18802a2e 	bgeu	r3,r2,10007088 <_malloc_r+0xe4>
10006fe0:	047ffe04 	movi	r17,-8
10006fe4:	1462703a 	and	r17,r2,r17
10006fe8:	88009e16 	blt	r17,zero,10007264 <_malloc_r+0x2c0>
10006fec:	89409d36 	bltu	r17,r5,10007264 <_malloc_r+0x2c0>
10006ff0:	000ee940 	call	1000ee94 <__malloc_lock>
10006ff4:	00807dc4 	movi	r2,503
10006ff8:	14402736 	bltu	r2,r17,10007098 <_malloc_r+0xf4>
10006ffc:	8806d0fa 	srli	r3,r17,3
10007000:	04c40074 	movhi	r19,4097
10007004:	9cc1ea04 	addi	r19,r19,1960
10007008:	18c5883a 	add	r2,r3,r3
1000700c:	1085883a 	add	r2,r2,r2
10007010:	1085883a 	add	r2,r2,r2
10007014:	9885883a 	add	r2,r19,r2
10007018:	14000317 	ldw	r16,12(r2)
1000701c:	80814a26 	beq	r16,r2,10007548 <_malloc_r+0x5a4>
10007020:	80c00117 	ldw	r3,4(r16)
10007024:	81000317 	ldw	r4,12(r16)
10007028:	00bfff04 	movi	r2,-4
1000702c:	1884703a 	and	r2,r3,r2
10007030:	81400217 	ldw	r5,8(r16)
10007034:	8085883a 	add	r2,r16,r2
10007038:	10c00117 	ldw	r3,4(r2)
1000703c:	29000315 	stw	r4,12(r5)
10007040:	21400215 	stw	r5,8(r4)
10007044:	18c00054 	ori	r3,r3,1
10007048:	10c00115 	stw	r3,4(r2)
1000704c:	9009883a 	mov	r4,r18
10007050:	000eeb40 	call	1000eeb4 <__malloc_unlock>
10007054:	80800204 	addi	r2,r16,8
10007058:	dfc00a17 	ldw	ra,40(sp)
1000705c:	df000917 	ldw	fp,36(sp)
10007060:	ddc00817 	ldw	r23,32(sp)
10007064:	dd800717 	ldw	r22,28(sp)
10007068:	dd400617 	ldw	r21,24(sp)
1000706c:	dd000517 	ldw	r20,20(sp)
10007070:	dcc00417 	ldw	r19,16(sp)
10007074:	dc800317 	ldw	r18,12(sp)
10007078:	dc400217 	ldw	r17,8(sp)
1000707c:	dc000117 	ldw	r16,4(sp)
10007080:	dec00b04 	addi	sp,sp,44
10007084:	f800283a 	ret
10007088:	04400404 	movi	r17,16
1000708c:	89407536 	bltu	r17,r5,10007264 <_malloc_r+0x2c0>
10007090:	000ee940 	call	1000ee94 <__malloc_lock>
10007094:	003fd906 	br	10006ffc <__alt_data_end+0xf8006ffc>
10007098:	8806d27a 	srli	r3,r17,9
1000709c:	18007526 	beq	r3,zero,10007274 <_malloc_r+0x2d0>
100070a0:	00800104 	movi	r2,4
100070a4:	10c0ef36 	bltu	r2,r3,10007464 <_malloc_r+0x4c0>
100070a8:	8806d1ba 	srli	r3,r17,6
100070ac:	19c00e04 	addi	r7,r3,56
100070b0:	39cb883a 	add	r5,r7,r7
100070b4:	04c40074 	movhi	r19,4097
100070b8:	294b883a 	add	r5,r5,r5
100070bc:	9cc1ea04 	addi	r19,r19,1960
100070c0:	294b883a 	add	r5,r5,r5
100070c4:	994b883a 	add	r5,r19,r5
100070c8:	2c000317 	ldw	r16,12(r5)
100070cc:	2c000e26 	beq	r5,r16,10007108 <_malloc_r+0x164>
100070d0:	80800117 	ldw	r2,4(r16)
100070d4:	01bfff04 	movi	r6,-4
100070d8:	010003c4 	movi	r4,15
100070dc:	1184703a 	and	r2,r2,r6
100070e0:	1447c83a 	sub	r3,r2,r17
100070e4:	20c00716 	blt	r4,r3,10007104 <_malloc_r+0x160>
100070e8:	1800650e 	bge	r3,zero,10007280 <_malloc_r+0x2dc>
100070ec:	84000317 	ldw	r16,12(r16)
100070f0:	2c000526 	beq	r5,r16,10007108 <_malloc_r+0x164>
100070f4:	80800117 	ldw	r2,4(r16)
100070f8:	1184703a 	and	r2,r2,r6
100070fc:	1447c83a 	sub	r3,r2,r17
10007100:	20fff90e 	bge	r4,r3,100070e8 <__alt_data_end+0xf80070e8>
10007104:	39ffffc4 	addi	r7,r7,-1
10007108:	38c00044 	addi	r3,r7,1
1000710c:	01840074 	movhi	r6,4097
10007110:	9c000417 	ldw	r16,16(r19)
10007114:	3181ea04 	addi	r6,r6,1960
10007118:	32400204 	addi	r9,r6,8
1000711c:	82410326 	beq	r16,r9,1000752c <_malloc_r+0x588>
10007120:	81000117 	ldw	r4,4(r16)
10007124:	00bfff04 	movi	r2,-4
10007128:	208e703a 	and	r7,r4,r2
1000712c:	3c45c83a 	sub	r2,r7,r17
10007130:	010003c4 	movi	r4,15
10007134:	2080ee16 	blt	r4,r2,100074f0 <_malloc_r+0x54c>
10007138:	32400515 	stw	r9,20(r6)
1000713c:	32400415 	stw	r9,16(r6)
10007140:	1000510e 	bge	r2,zero,10007288 <_malloc_r+0x2e4>
10007144:	00807fc4 	movi	r2,511
10007148:	11c0ce36 	bltu	r2,r7,10007484 <_malloc_r+0x4e0>
1000714c:	3808d0fa 	srli	r4,r7,3
10007150:	01c00044 	movi	r7,1
10007154:	30800117 	ldw	r2,4(r6)
10007158:	210b883a 	add	r5,r4,r4
1000715c:	294b883a 	add	r5,r5,r5
10007160:	2009d0ba 	srai	r4,r4,2
10007164:	294b883a 	add	r5,r5,r5
10007168:	298b883a 	add	r5,r5,r6
1000716c:	2a000217 	ldw	r8,8(r5)
10007170:	3908983a 	sll	r4,r7,r4
10007174:	81400315 	stw	r5,12(r16)
10007178:	82000215 	stw	r8,8(r16)
1000717c:	2088b03a 	or	r4,r4,r2
10007180:	2c000215 	stw	r16,8(r5)
10007184:	31000115 	stw	r4,4(r6)
10007188:	44000315 	stw	r16,12(r8)
1000718c:	1805d0ba 	srai	r2,r3,2
10007190:	01400044 	movi	r5,1
10007194:	288a983a 	sll	r5,r5,r2
10007198:	21404336 	bltu	r4,r5,100072a8 <_malloc_r+0x304>
1000719c:	2144703a 	and	r2,r4,r5
100071a0:	10000a1e 	bne	r2,zero,100071cc <_malloc_r+0x228>
100071a4:	00bfff04 	movi	r2,-4
100071a8:	294b883a 	add	r5,r5,r5
100071ac:	1886703a 	and	r3,r3,r2
100071b0:	2144703a 	and	r2,r4,r5
100071b4:	18c00104 	addi	r3,r3,4
100071b8:	1000041e 	bne	r2,zero,100071cc <_malloc_r+0x228>
100071bc:	294b883a 	add	r5,r5,r5
100071c0:	2144703a 	and	r2,r4,r5
100071c4:	18c00104 	addi	r3,r3,4
100071c8:	103ffc26 	beq	r2,zero,100071bc <__alt_data_end+0xf80071bc>
100071cc:	023fff04 	movi	r8,-4
100071d0:	01c003c4 	movi	r7,15
100071d4:	18c5883a 	add	r2,r3,r3
100071d8:	1085883a 	add	r2,r2,r2
100071dc:	1085883a 	add	r2,r2,r2
100071e0:	9895883a 	add	r10,r19,r2
100071e4:	52c00304 	addi	r11,r10,12
100071e8:	1819883a 	mov	r12,r3
100071ec:	5c000017 	ldw	r16,0(r11)
100071f0:	59bffd04 	addi	r6,r11,-12
100071f4:	8180041e 	bne	r16,r6,10007208 <_malloc_r+0x264>
100071f8:	0000ce06 	br	10007534 <_malloc_r+0x590>
100071fc:	2000d70e 	bge	r4,zero,1000755c <_malloc_r+0x5b8>
10007200:	84000317 	ldw	r16,12(r16)
10007204:	8180cb26 	beq	r16,r6,10007534 <_malloc_r+0x590>
10007208:	80800117 	ldw	r2,4(r16)
1000720c:	1204703a 	and	r2,r2,r8
10007210:	1449c83a 	sub	r4,r2,r17
10007214:	393ff90e 	bge	r7,r4,100071fc <__alt_data_end+0xf80071fc>
10007218:	80800317 	ldw	r2,12(r16)
1000721c:	80c00217 	ldw	r3,8(r16)
10007220:	89400054 	ori	r5,r17,1
10007224:	81400115 	stw	r5,4(r16)
10007228:	18800315 	stw	r2,12(r3)
1000722c:	10c00215 	stw	r3,8(r2)
10007230:	8463883a 	add	r17,r16,r17
10007234:	9c400515 	stw	r17,20(r19)
10007238:	9c400415 	stw	r17,16(r19)
1000723c:	20800054 	ori	r2,r4,1
10007240:	88800115 	stw	r2,4(r17)
10007244:	8a400315 	stw	r9,12(r17)
10007248:	8a400215 	stw	r9,8(r17)
1000724c:	8923883a 	add	r17,r17,r4
10007250:	89000015 	stw	r4,0(r17)
10007254:	9009883a 	mov	r4,r18
10007258:	000eeb40 	call	1000eeb4 <__malloc_unlock>
1000725c:	80800204 	addi	r2,r16,8
10007260:	003f7d06 	br	10007058 <__alt_data_end+0xf8007058>
10007264:	00800304 	movi	r2,12
10007268:	90800015 	stw	r2,0(r18)
1000726c:	0005883a 	mov	r2,zero
10007270:	003f7906 	br	10007058 <__alt_data_end+0xf8007058>
10007274:	01401f84 	movi	r5,126
10007278:	01c00fc4 	movi	r7,63
1000727c:	003f8d06 	br	100070b4 <__alt_data_end+0xf80070b4>
10007280:	81000317 	ldw	r4,12(r16)
10007284:	003f6a06 	br	10007030 <__alt_data_end+0xf8007030>
10007288:	81c5883a 	add	r2,r16,r7
1000728c:	10c00117 	ldw	r3,4(r2)
10007290:	9009883a 	mov	r4,r18
10007294:	18c00054 	ori	r3,r3,1
10007298:	10c00115 	stw	r3,4(r2)
1000729c:	000eeb40 	call	1000eeb4 <__malloc_unlock>
100072a0:	80800204 	addi	r2,r16,8
100072a4:	003f6c06 	br	10007058 <__alt_data_end+0xf8007058>
100072a8:	9c000217 	ldw	r16,8(r19)
100072ac:	00bfff04 	movi	r2,-4
100072b0:	85800117 	ldw	r22,4(r16)
100072b4:	b0ac703a 	and	r22,r22,r2
100072b8:	b4400336 	bltu	r22,r17,100072c8 <_malloc_r+0x324>
100072bc:	b445c83a 	sub	r2,r22,r17
100072c0:	00c003c4 	movi	r3,15
100072c4:	18805d16 	blt	r3,r2,1000743c <_malloc_r+0x498>
100072c8:	05c40074 	movhi	r23,4097
100072cc:	00840074 	movhi	r2,4097
100072d0:	bdc35904 	addi	r23,r23,3428
100072d4:	10860904 	addi	r2,r2,6180
100072d8:	15400017 	ldw	r21,0(r2)
100072dc:	b9000017 	ldw	r4,0(r23)
100072e0:	00ffffc4 	movi	r3,-1
100072e4:	858d883a 	add	r6,r16,r22
100072e8:	8d6b883a 	add	r21,r17,r21
100072ec:	20c0e426 	beq	r4,r3,10007680 <_malloc_r+0x6dc>
100072f0:	ad4403c4 	addi	r21,r21,4111
100072f4:	00fc0004 	movi	r3,-4096
100072f8:	a8ea703a 	and	r21,r21,r3
100072fc:	9009883a 	mov	r4,r18
10007300:	a80b883a 	mov	r5,r21
10007304:	d9800015 	stw	r6,0(sp)
10007308:	00092480 	call	10009248 <_sbrk_r>
1000730c:	00ffffc4 	movi	r3,-1
10007310:	1029883a 	mov	r20,r2
10007314:	d9800017 	ldw	r6,0(sp)
10007318:	10c0a426 	beq	r2,r3,100075ac <_malloc_r+0x608>
1000731c:	1180a236 	bltu	r2,r6,100075a8 <_malloc_r+0x604>
10007320:	07040074 	movhi	fp,4097
10007324:	e7060e04 	addi	fp,fp,6200
10007328:	e0c00017 	ldw	r3,0(fp)
1000732c:	a8c7883a 	add	r3,r21,r3
10007330:	e0c00015 	stw	r3,0(fp)
10007334:	3500da26 	beq	r6,r20,100076a0 <_malloc_r+0x6fc>
10007338:	b9000017 	ldw	r4,0(r23)
1000733c:	00bfffc4 	movi	r2,-1
10007340:	2080e426 	beq	r4,r2,100076d4 <_malloc_r+0x730>
10007344:	a185c83a 	sub	r2,r20,r6
10007348:	1885883a 	add	r2,r3,r2
1000734c:	e0800015 	stw	r2,0(fp)
10007350:	a0c001cc 	andi	r3,r20,7
10007354:	1800b526 	beq	r3,zero,1000762c <_malloc_r+0x688>
10007358:	a0e9c83a 	sub	r20,r20,r3
1000735c:	00840204 	movi	r2,4104
10007360:	a5000204 	addi	r20,r20,8
10007364:	10c7c83a 	sub	r3,r2,r3
10007368:	a545883a 	add	r2,r20,r21
1000736c:	1083ffcc 	andi	r2,r2,4095
10007370:	18abc83a 	sub	r21,r3,r2
10007374:	9009883a 	mov	r4,r18
10007378:	a80b883a 	mov	r5,r21
1000737c:	00092480 	call	10009248 <_sbrk_r>
10007380:	00ffffc4 	movi	r3,-1
10007384:	10c0d026 	beq	r2,r3,100076c8 <_malloc_r+0x724>
10007388:	1507c83a 	sub	r3,r2,r20
1000738c:	a8c7883a 	add	r3,r21,r3
10007390:	18c00054 	ori	r3,r3,1
10007394:	e0800017 	ldw	r2,0(fp)
10007398:	9d000215 	stw	r20,8(r19)
1000739c:	a0c00115 	stw	r3,4(r20)
100073a0:	a887883a 	add	r3,r21,r2
100073a4:	e0c00015 	stw	r3,0(fp)
100073a8:	84c00e26 	beq	r16,r19,100073e4 <_malloc_r+0x440>
100073ac:	018003c4 	movi	r6,15
100073b0:	3580a02e 	bgeu	r6,r22,10007634 <_malloc_r+0x690>
100073b4:	81400117 	ldw	r5,4(r16)
100073b8:	013ffe04 	movi	r4,-8
100073bc:	b0bffd04 	addi	r2,r22,-12
100073c0:	1104703a 	and	r2,r2,r4
100073c4:	2900004c 	andi	r4,r5,1
100073c8:	1108b03a 	or	r4,r2,r4
100073cc:	81000115 	stw	r4,4(r16)
100073d0:	01400144 	movi	r5,5
100073d4:	8089883a 	add	r4,r16,r2
100073d8:	21400115 	stw	r5,4(r4)
100073dc:	21400215 	stw	r5,8(r4)
100073e0:	3080c036 	bltu	r6,r2,100076e4 <_malloc_r+0x740>
100073e4:	00840074 	movhi	r2,4097
100073e8:	10860804 	addi	r2,r2,6176
100073ec:	11000017 	ldw	r4,0(r2)
100073f0:	20c0012e 	bgeu	r4,r3,100073f8 <_malloc_r+0x454>
100073f4:	10c00015 	stw	r3,0(r2)
100073f8:	00840074 	movhi	r2,4097
100073fc:	10860704 	addi	r2,r2,6172
10007400:	11000017 	ldw	r4,0(r2)
10007404:	9c000217 	ldw	r16,8(r19)
10007408:	20c0012e 	bgeu	r4,r3,10007410 <_malloc_r+0x46c>
1000740c:	10c00015 	stw	r3,0(r2)
10007410:	80c00117 	ldw	r3,4(r16)
10007414:	00bfff04 	movi	r2,-4
10007418:	1886703a 	and	r3,r3,r2
1000741c:	1c45c83a 	sub	r2,r3,r17
10007420:	1c400236 	bltu	r3,r17,1000742c <_malloc_r+0x488>
10007424:	00c003c4 	movi	r3,15
10007428:	18800416 	blt	r3,r2,1000743c <_malloc_r+0x498>
1000742c:	9009883a 	mov	r4,r18
10007430:	000eeb40 	call	1000eeb4 <__malloc_unlock>
10007434:	0005883a 	mov	r2,zero
10007438:	003f0706 	br	10007058 <__alt_data_end+0xf8007058>
1000743c:	88c00054 	ori	r3,r17,1
10007440:	80c00115 	stw	r3,4(r16)
10007444:	8463883a 	add	r17,r16,r17
10007448:	10800054 	ori	r2,r2,1
1000744c:	9c400215 	stw	r17,8(r19)
10007450:	88800115 	stw	r2,4(r17)
10007454:	9009883a 	mov	r4,r18
10007458:	000eeb40 	call	1000eeb4 <__malloc_unlock>
1000745c:	80800204 	addi	r2,r16,8
10007460:	003efd06 	br	10007058 <__alt_data_end+0xf8007058>
10007464:	00800504 	movi	r2,20
10007468:	10c0482e 	bgeu	r2,r3,1000758c <_malloc_r+0x5e8>
1000746c:	00801504 	movi	r2,84
10007470:	10c06836 	bltu	r2,r3,10007614 <_malloc_r+0x670>
10007474:	8806d33a 	srli	r3,r17,12
10007478:	19c01b84 	addi	r7,r3,110
1000747c:	39cb883a 	add	r5,r7,r7
10007480:	003f0c06 	br	100070b4 <__alt_data_end+0xf80070b4>
10007484:	3804d27a 	srli	r2,r7,9
10007488:	01000104 	movi	r4,4
1000748c:	2080422e 	bgeu	r4,r2,10007598 <_malloc_r+0x5f4>
10007490:	01000504 	movi	r4,20
10007494:	20807c36 	bltu	r4,r2,10007688 <_malloc_r+0x6e4>
10007498:	110016c4 	addi	r4,r2,91
1000749c:	210b883a 	add	r5,r4,r4
100074a0:	294b883a 	add	r5,r5,r5
100074a4:	294b883a 	add	r5,r5,r5
100074a8:	994b883a 	add	r5,r19,r5
100074ac:	28800217 	ldw	r2,8(r5)
100074b0:	02040074 	movhi	r8,4097
100074b4:	4201ea04 	addi	r8,r8,1960
100074b8:	11406326 	beq	r2,r5,10007648 <_malloc_r+0x6a4>
100074bc:	01bfff04 	movi	r6,-4
100074c0:	11000117 	ldw	r4,4(r2)
100074c4:	2188703a 	and	r4,r4,r6
100074c8:	3900022e 	bgeu	r7,r4,100074d4 <_malloc_r+0x530>
100074cc:	10800217 	ldw	r2,8(r2)
100074d0:	28bffb1e 	bne	r5,r2,100074c0 <__alt_data_end+0xf80074c0>
100074d4:	11800317 	ldw	r6,12(r2)
100074d8:	99000117 	ldw	r4,4(r19)
100074dc:	81800315 	stw	r6,12(r16)
100074e0:	80800215 	stw	r2,8(r16)
100074e4:	34000215 	stw	r16,8(r6)
100074e8:	14000315 	stw	r16,12(r2)
100074ec:	003f2706 	br	1000718c <__alt_data_end+0xf800718c>
100074f0:	88c00054 	ori	r3,r17,1
100074f4:	80c00115 	stw	r3,4(r16)
100074f8:	8463883a 	add	r17,r16,r17
100074fc:	34400515 	stw	r17,20(r6)
10007500:	34400415 	stw	r17,16(r6)
10007504:	10c00054 	ori	r3,r2,1
10007508:	8a400315 	stw	r9,12(r17)
1000750c:	8a400215 	stw	r9,8(r17)
10007510:	88c00115 	stw	r3,4(r17)
10007514:	88a3883a 	add	r17,r17,r2
10007518:	88800015 	stw	r2,0(r17)
1000751c:	9009883a 	mov	r4,r18
10007520:	000eeb40 	call	1000eeb4 <__malloc_unlock>
10007524:	80800204 	addi	r2,r16,8
10007528:	003ecb06 	br	10007058 <__alt_data_end+0xf8007058>
1000752c:	31000117 	ldw	r4,4(r6)
10007530:	003f1606 	br	1000718c <__alt_data_end+0xf800718c>
10007534:	63000044 	addi	r12,r12,1
10007538:	608000cc 	andi	r2,r12,3
1000753c:	5ac00204 	addi	r11,r11,8
10007540:	103f2a1e 	bne	r2,zero,100071ec <__alt_data_end+0xf80071ec>
10007544:	00002106 	br	100075cc <_malloc_r+0x628>
10007548:	80800204 	addi	r2,r16,8
1000754c:	84000517 	ldw	r16,20(r16)
10007550:	143eb31e 	bne	r2,r16,10007020 <__alt_data_end+0xf8007020>
10007554:	18c00084 	addi	r3,r3,2
10007558:	003eec06 	br	1000710c <__alt_data_end+0xf800710c>
1000755c:	8085883a 	add	r2,r16,r2
10007560:	10c00117 	ldw	r3,4(r2)
10007564:	81000317 	ldw	r4,12(r16)
10007568:	81400217 	ldw	r5,8(r16)
1000756c:	18c00054 	ori	r3,r3,1
10007570:	10c00115 	stw	r3,4(r2)
10007574:	29000315 	stw	r4,12(r5)
10007578:	21400215 	stw	r5,8(r4)
1000757c:	9009883a 	mov	r4,r18
10007580:	000eeb40 	call	1000eeb4 <__malloc_unlock>
10007584:	80800204 	addi	r2,r16,8
10007588:	003eb306 	br	10007058 <__alt_data_end+0xf8007058>
1000758c:	19c016c4 	addi	r7,r3,91
10007590:	39cb883a 	add	r5,r7,r7
10007594:	003ec706 	br	100070b4 <__alt_data_end+0xf80070b4>
10007598:	3804d1ba 	srli	r2,r7,6
1000759c:	11000e04 	addi	r4,r2,56
100075a0:	210b883a 	add	r5,r4,r4
100075a4:	003fbe06 	br	100074a0 <__alt_data_end+0xf80074a0>
100075a8:	84ff5d26 	beq	r16,r19,10007320 <__alt_data_end+0xf8007320>
100075ac:	9c000217 	ldw	r16,8(r19)
100075b0:	00bfff04 	movi	r2,-4
100075b4:	80c00117 	ldw	r3,4(r16)
100075b8:	1886703a 	and	r3,r3,r2
100075bc:	003f9706 	br	1000741c <__alt_data_end+0xf800741c>
100075c0:	52800017 	ldw	r10,0(r10)
100075c4:	18ffffc4 	addi	r3,r3,-1
100075c8:	50805c1e 	bne	r10,r2,1000773c <_malloc_r+0x798>
100075cc:	190000cc 	andi	r4,r3,3
100075d0:	50bffe04 	addi	r2,r10,-8
100075d4:	203ffa1e 	bne	r4,zero,100075c0 <__alt_data_end+0xf80075c0>
100075d8:	98800117 	ldw	r2,4(r19)
100075dc:	0146303a 	nor	r3,zero,r5
100075e0:	1884703a 	and	r2,r3,r2
100075e4:	98800115 	stw	r2,4(r19)
100075e8:	294b883a 	add	r5,r5,r5
100075ec:	117f2e36 	bltu	r2,r5,100072a8 <__alt_data_end+0xf80072a8>
100075f0:	283f2d26 	beq	r5,zero,100072a8 <__alt_data_end+0xf80072a8>
100075f4:	1146703a 	and	r3,r2,r5
100075f8:	1800521e 	bne	r3,zero,10007744 <_malloc_r+0x7a0>
100075fc:	6007883a 	mov	r3,r12
10007600:	294b883a 	add	r5,r5,r5
10007604:	1148703a 	and	r4,r2,r5
10007608:	18c00104 	addi	r3,r3,4
1000760c:	203ffc26 	beq	r4,zero,10007600 <__alt_data_end+0xf8007600>
10007610:	003ef006 	br	100071d4 <__alt_data_end+0xf80071d4>
10007614:	00805504 	movi	r2,340
10007618:	10c01336 	bltu	r2,r3,10007668 <_malloc_r+0x6c4>
1000761c:	8806d3fa 	srli	r3,r17,15
10007620:	19c01dc4 	addi	r7,r3,119
10007624:	39cb883a 	add	r5,r7,r7
10007628:	003ea206 	br	100070b4 <__alt_data_end+0xf80070b4>
1000762c:	00c40004 	movi	r3,4096
10007630:	003f4d06 	br	10007368 <__alt_data_end+0xf8007368>
10007634:	00800044 	movi	r2,1
10007638:	a0800115 	stw	r2,4(r20)
1000763c:	a021883a 	mov	r16,r20
10007640:	0007883a 	mov	r3,zero
10007644:	003f7506 	br	1000741c <__alt_data_end+0xf800741c>
10007648:	200bd0ba 	srai	r5,r4,2
1000764c:	01800044 	movi	r6,1
10007650:	41000117 	ldw	r4,4(r8)
10007654:	314a983a 	sll	r5,r6,r5
10007658:	100d883a 	mov	r6,r2
1000765c:	2908b03a 	or	r4,r5,r4
10007660:	41000115 	stw	r4,4(r8)
10007664:	003f9d06 	br	100074dc <__alt_data_end+0xf80074dc>
10007668:	00815504 	movi	r2,1364
1000766c:	10c01336 	bltu	r2,r3,100076bc <_malloc_r+0x718>
10007670:	8806d4ba 	srli	r3,r17,18
10007674:	19c01f04 	addi	r7,r3,124
10007678:	39cb883a 	add	r5,r7,r7
1000767c:	003e8d06 	br	100070b4 <__alt_data_end+0xf80070b4>
10007680:	ad400404 	addi	r21,r21,16
10007684:	003f1d06 	br	100072fc <__alt_data_end+0xf80072fc>
10007688:	01001504 	movi	r4,84
1000768c:	20801c36 	bltu	r4,r2,10007700 <_malloc_r+0x75c>
10007690:	3804d33a 	srli	r2,r7,12
10007694:	11001b84 	addi	r4,r2,110
10007698:	210b883a 	add	r5,r4,r4
1000769c:	003f8006 	br	100074a0 <__alt_data_end+0xf80074a0>
100076a0:	3083ffcc 	andi	r2,r6,4095
100076a4:	103f241e 	bne	r2,zero,10007338 <__alt_data_end+0xf8007338>
100076a8:	99000217 	ldw	r4,8(r19)
100076ac:	ad85883a 	add	r2,r21,r22
100076b0:	10800054 	ori	r2,r2,1
100076b4:	20800115 	stw	r2,4(r4)
100076b8:	003f4a06 	br	100073e4 <__alt_data_end+0xf80073e4>
100076bc:	01403f04 	movi	r5,252
100076c0:	01c01f84 	movi	r7,126
100076c4:	003e7b06 	br	100070b4 <__alt_data_end+0xf80070b4>
100076c8:	00c00044 	movi	r3,1
100076cc:	002b883a 	mov	r21,zero
100076d0:	003f3006 	br	10007394 <__alt_data_end+0xf8007394>
100076d4:	00840074 	movhi	r2,4097
100076d8:	10835904 	addi	r2,r2,3428
100076dc:	15000015 	stw	r20,0(r2)
100076e0:	003f1b06 	br	10007350 <__alt_data_end+0xf8007350>
100076e4:	9009883a 	mov	r4,r18
100076e8:	81400204 	addi	r5,r16,8
100076ec:	00064080 	call	10006408 <_free_r>
100076f0:	00840074 	movhi	r2,4097
100076f4:	10860e04 	addi	r2,r2,6200
100076f8:	10c00017 	ldw	r3,0(r2)
100076fc:	003f3906 	br	100073e4 <__alt_data_end+0xf80073e4>
10007700:	01005504 	movi	r4,340
10007704:	20800436 	bltu	r4,r2,10007718 <_malloc_r+0x774>
10007708:	3804d3fa 	srli	r2,r7,15
1000770c:	11001dc4 	addi	r4,r2,119
10007710:	210b883a 	add	r5,r4,r4
10007714:	003f6206 	br	100074a0 <__alt_data_end+0xf80074a0>
10007718:	01015504 	movi	r4,1364
1000771c:	20800436 	bltu	r4,r2,10007730 <_malloc_r+0x78c>
10007720:	3804d4ba 	srli	r2,r7,18
10007724:	11001f04 	addi	r4,r2,124
10007728:	210b883a 	add	r5,r4,r4
1000772c:	003f5c06 	br	100074a0 <__alt_data_end+0xf80074a0>
10007730:	01403f04 	movi	r5,252
10007734:	01001f84 	movi	r4,126
10007738:	003f5906 	br	100074a0 <__alt_data_end+0xf80074a0>
1000773c:	98800117 	ldw	r2,4(r19)
10007740:	003fa906 	br	100075e8 <__alt_data_end+0xf80075e8>
10007744:	6007883a 	mov	r3,r12
10007748:	003ea206 	br	100071d4 <__alt_data_end+0xf80071d4>

1000774c <memchr>:
1000774c:	208000cc 	andi	r2,r4,3
10007750:	280f883a 	mov	r7,r5
10007754:	10003526 	beq	r2,zero,1000782c <memchr+0xe0>
10007758:	30bfffc4 	addi	r2,r6,-1
1000775c:	30001b26 	beq	r6,zero,100077cc <memchr+0x80>
10007760:	21800003 	ldbu	r6,0(r4)
10007764:	28c03fcc 	andi	r3,r5,255
10007768:	30c01a26 	beq	r6,r3,100077d4 <memchr+0x88>
1000776c:	180d883a 	mov	r6,r3
10007770:	00000406 	br	10007784 <memchr+0x38>
10007774:	10001526 	beq	r2,zero,100077cc <memchr+0x80>
10007778:	20c00003 	ldbu	r3,0(r4)
1000777c:	10bfffc4 	addi	r2,r2,-1
10007780:	19801426 	beq	r3,r6,100077d4 <memchr+0x88>
10007784:	21000044 	addi	r4,r4,1
10007788:	20c000cc 	andi	r3,r4,3
1000778c:	183ff91e 	bne	r3,zero,10007774 <__alt_data_end+0xf8007774>
10007790:	024000c4 	movi	r9,3
10007794:	48801136 	bltu	r9,r2,100077dc <memchr+0x90>
10007798:	10000c26 	beq	r2,zero,100077cc <memchr+0x80>
1000779c:	20c00003 	ldbu	r3,0(r4)
100077a0:	29403fcc 	andi	r5,r5,255
100077a4:	19400b26 	beq	r3,r5,100077d4 <memchr+0x88>
100077a8:	20c00044 	addi	r3,r4,1
100077ac:	2085883a 	add	r2,r4,r2
100077b0:	39803fcc 	andi	r6,r7,255
100077b4:	00000306 	br	100077c4 <memchr+0x78>
100077b8:	18c00044 	addi	r3,r3,1
100077bc:	197fffc3 	ldbu	r5,-1(r3)
100077c0:	29800426 	beq	r5,r6,100077d4 <memchr+0x88>
100077c4:	1809883a 	mov	r4,r3
100077c8:	18bffb1e 	bne	r3,r2,100077b8 <__alt_data_end+0xf80077b8>
100077cc:	0005883a 	mov	r2,zero
100077d0:	f800283a 	ret
100077d4:	2005883a 	mov	r2,r4
100077d8:	f800283a 	ret
100077dc:	28c03fcc 	andi	r3,r5,255
100077e0:	1810923a 	slli	r8,r3,8
100077e4:	02ffbff4 	movhi	r11,65279
100077e8:	02a02074 	movhi	r10,32897
100077ec:	40c6b03a 	or	r3,r8,r3
100077f0:	1810943a 	slli	r8,r3,16
100077f4:	5affbfc4 	addi	r11,r11,-257
100077f8:	52a02004 	addi	r10,r10,-32640
100077fc:	40d0b03a 	or	r8,r8,r3
10007800:	20c00017 	ldw	r3,0(r4)
10007804:	40c6f03a 	xor	r3,r8,r3
10007808:	1acd883a 	add	r6,r3,r11
1000780c:	00c6303a 	nor	r3,zero,r3
10007810:	30c6703a 	and	r3,r6,r3
10007814:	1a86703a 	and	r3,r3,r10
10007818:	183fdf1e 	bne	r3,zero,10007798 <__alt_data_end+0xf8007798>
1000781c:	10bfff04 	addi	r2,r2,-4
10007820:	21000104 	addi	r4,r4,4
10007824:	48bff636 	bltu	r9,r2,10007800 <__alt_data_end+0xf8007800>
10007828:	003fdb06 	br	10007798 <__alt_data_end+0xf8007798>
1000782c:	3005883a 	mov	r2,r6
10007830:	003fd706 	br	10007790 <__alt_data_end+0xf8007790>

10007834 <memcpy>:
10007834:	deffff04 	addi	sp,sp,-4
10007838:	dc000015 	stw	r16,0(sp)
1000783c:	00c003c4 	movi	r3,15
10007840:	2005883a 	mov	r2,r4
10007844:	1980432e 	bgeu	r3,r6,10007954 <memcpy+0x120>
10007848:	2146b03a 	or	r3,r4,r5
1000784c:	18c000cc 	andi	r3,r3,3
10007850:	1800421e 	bne	r3,zero,1000795c <memcpy+0x128>
10007854:	343ffc04 	addi	r16,r6,-16
10007858:	8020d13a 	srli	r16,r16,4
1000785c:	28c00104 	addi	r3,r5,4
10007860:	23400104 	addi	r13,r4,4
10007864:	801e913a 	slli	r15,r16,4
10007868:	2b000204 	addi	r12,r5,8
1000786c:	22c00204 	addi	r11,r4,8
10007870:	7bc00504 	addi	r15,r15,20
10007874:	2a800304 	addi	r10,r5,12
10007878:	22400304 	addi	r9,r4,12
1000787c:	2bdf883a 	add	r15,r5,r15
10007880:	2811883a 	mov	r8,r5
10007884:	200f883a 	mov	r7,r4
10007888:	41000017 	ldw	r4,0(r8)
1000788c:	39c00404 	addi	r7,r7,16
10007890:	18c00404 	addi	r3,r3,16
10007894:	393ffc15 	stw	r4,-16(r7)
10007898:	1bbffc17 	ldw	r14,-16(r3)
1000789c:	6b400404 	addi	r13,r13,16
100078a0:	5ac00404 	addi	r11,r11,16
100078a4:	6bbffc15 	stw	r14,-16(r13)
100078a8:	63800017 	ldw	r14,0(r12)
100078ac:	4a400404 	addi	r9,r9,16
100078b0:	42000404 	addi	r8,r8,16
100078b4:	5bbffc15 	stw	r14,-16(r11)
100078b8:	53800017 	ldw	r14,0(r10)
100078bc:	63000404 	addi	r12,r12,16
100078c0:	52800404 	addi	r10,r10,16
100078c4:	4bbffc15 	stw	r14,-16(r9)
100078c8:	1bffef1e 	bne	r3,r15,10007888 <__alt_data_end+0xf8007888>
100078cc:	81c00044 	addi	r7,r16,1
100078d0:	380e913a 	slli	r7,r7,4
100078d4:	310003cc 	andi	r4,r6,15
100078d8:	02c000c4 	movi	r11,3
100078dc:	11c7883a 	add	r3,r2,r7
100078e0:	29cb883a 	add	r5,r5,r7
100078e4:	59001f2e 	bgeu	r11,r4,10007964 <memcpy+0x130>
100078e8:	1813883a 	mov	r9,r3
100078ec:	2811883a 	mov	r8,r5
100078f0:	200f883a 	mov	r7,r4
100078f4:	42800017 	ldw	r10,0(r8)
100078f8:	4a400104 	addi	r9,r9,4
100078fc:	39ffff04 	addi	r7,r7,-4
10007900:	4abfff15 	stw	r10,-4(r9)
10007904:	42000104 	addi	r8,r8,4
10007908:	59fffa36 	bltu	r11,r7,100078f4 <__alt_data_end+0xf80078f4>
1000790c:	213fff04 	addi	r4,r4,-4
10007910:	2008d0ba 	srli	r4,r4,2
10007914:	318000cc 	andi	r6,r6,3
10007918:	21000044 	addi	r4,r4,1
1000791c:	2109883a 	add	r4,r4,r4
10007920:	2109883a 	add	r4,r4,r4
10007924:	1907883a 	add	r3,r3,r4
10007928:	290b883a 	add	r5,r5,r4
1000792c:	30000626 	beq	r6,zero,10007948 <memcpy+0x114>
10007930:	198d883a 	add	r6,r3,r6
10007934:	29c00003 	ldbu	r7,0(r5)
10007938:	18c00044 	addi	r3,r3,1
1000793c:	29400044 	addi	r5,r5,1
10007940:	19ffffc5 	stb	r7,-1(r3)
10007944:	19bffb1e 	bne	r3,r6,10007934 <__alt_data_end+0xf8007934>
10007948:	dc000017 	ldw	r16,0(sp)
1000794c:	dec00104 	addi	sp,sp,4
10007950:	f800283a 	ret
10007954:	2007883a 	mov	r3,r4
10007958:	003ff406 	br	1000792c <__alt_data_end+0xf800792c>
1000795c:	2007883a 	mov	r3,r4
10007960:	003ff306 	br	10007930 <__alt_data_end+0xf8007930>
10007964:	200d883a 	mov	r6,r4
10007968:	003ff006 	br	1000792c <__alt_data_end+0xf800792c>

1000796c <memmove>:
1000796c:	2005883a 	mov	r2,r4
10007970:	29000b2e 	bgeu	r5,r4,100079a0 <memmove+0x34>
10007974:	298f883a 	add	r7,r5,r6
10007978:	21c0092e 	bgeu	r4,r7,100079a0 <memmove+0x34>
1000797c:	2187883a 	add	r3,r4,r6
10007980:	198bc83a 	sub	r5,r3,r6
10007984:	30004b26 	beq	r6,zero,10007ab4 <memmove+0x148>
10007988:	39ffffc4 	addi	r7,r7,-1
1000798c:	39000003 	ldbu	r4,0(r7)
10007990:	18ffffc4 	addi	r3,r3,-1
10007994:	19000005 	stb	r4,0(r3)
10007998:	197ffb1e 	bne	r3,r5,10007988 <__alt_data_end+0xf8007988>
1000799c:	f800283a 	ret
100079a0:	00c003c4 	movi	r3,15
100079a4:	1980412e 	bgeu	r3,r6,10007aac <memmove+0x140>
100079a8:	1146b03a 	or	r3,r2,r5
100079ac:	18c000cc 	andi	r3,r3,3
100079b0:	1800411e 	bne	r3,zero,10007ab8 <memmove+0x14c>
100079b4:	33fffc04 	addi	r15,r6,-16
100079b8:	781ed13a 	srli	r15,r15,4
100079bc:	28c00104 	addi	r3,r5,4
100079c0:	13400104 	addi	r13,r2,4
100079c4:	781c913a 	slli	r14,r15,4
100079c8:	2b000204 	addi	r12,r5,8
100079cc:	12c00204 	addi	r11,r2,8
100079d0:	73800504 	addi	r14,r14,20
100079d4:	2a800304 	addi	r10,r5,12
100079d8:	12400304 	addi	r9,r2,12
100079dc:	2b9d883a 	add	r14,r5,r14
100079e0:	2811883a 	mov	r8,r5
100079e4:	100f883a 	mov	r7,r2
100079e8:	41000017 	ldw	r4,0(r8)
100079ec:	39c00404 	addi	r7,r7,16
100079f0:	18c00404 	addi	r3,r3,16
100079f4:	393ffc15 	stw	r4,-16(r7)
100079f8:	193ffc17 	ldw	r4,-16(r3)
100079fc:	6b400404 	addi	r13,r13,16
10007a00:	5ac00404 	addi	r11,r11,16
10007a04:	693ffc15 	stw	r4,-16(r13)
10007a08:	61000017 	ldw	r4,0(r12)
10007a0c:	4a400404 	addi	r9,r9,16
10007a10:	42000404 	addi	r8,r8,16
10007a14:	593ffc15 	stw	r4,-16(r11)
10007a18:	51000017 	ldw	r4,0(r10)
10007a1c:	63000404 	addi	r12,r12,16
10007a20:	52800404 	addi	r10,r10,16
10007a24:	493ffc15 	stw	r4,-16(r9)
10007a28:	1bbfef1e 	bne	r3,r14,100079e8 <__alt_data_end+0xf80079e8>
10007a2c:	79000044 	addi	r4,r15,1
10007a30:	2008913a 	slli	r4,r4,4
10007a34:	328003cc 	andi	r10,r6,15
10007a38:	02c000c4 	movi	r11,3
10007a3c:	1107883a 	add	r3,r2,r4
10007a40:	290b883a 	add	r5,r5,r4
10007a44:	5a801e2e 	bgeu	r11,r10,10007ac0 <memmove+0x154>
10007a48:	1813883a 	mov	r9,r3
10007a4c:	2811883a 	mov	r8,r5
10007a50:	500f883a 	mov	r7,r10
10007a54:	41000017 	ldw	r4,0(r8)
10007a58:	4a400104 	addi	r9,r9,4
10007a5c:	39ffff04 	addi	r7,r7,-4
10007a60:	493fff15 	stw	r4,-4(r9)
10007a64:	42000104 	addi	r8,r8,4
10007a68:	59fffa36 	bltu	r11,r7,10007a54 <__alt_data_end+0xf8007a54>
10007a6c:	513fff04 	addi	r4,r10,-4
10007a70:	2008d0ba 	srli	r4,r4,2
10007a74:	318000cc 	andi	r6,r6,3
10007a78:	21000044 	addi	r4,r4,1
10007a7c:	2109883a 	add	r4,r4,r4
10007a80:	2109883a 	add	r4,r4,r4
10007a84:	1907883a 	add	r3,r3,r4
10007a88:	290b883a 	add	r5,r5,r4
10007a8c:	30000926 	beq	r6,zero,10007ab4 <memmove+0x148>
10007a90:	198d883a 	add	r6,r3,r6
10007a94:	29c00003 	ldbu	r7,0(r5)
10007a98:	18c00044 	addi	r3,r3,1
10007a9c:	29400044 	addi	r5,r5,1
10007aa0:	19ffffc5 	stb	r7,-1(r3)
10007aa4:	19bffb1e 	bne	r3,r6,10007a94 <__alt_data_end+0xf8007a94>
10007aa8:	f800283a 	ret
10007aac:	1007883a 	mov	r3,r2
10007ab0:	003ff606 	br	10007a8c <__alt_data_end+0xf8007a8c>
10007ab4:	f800283a 	ret
10007ab8:	1007883a 	mov	r3,r2
10007abc:	003ff406 	br	10007a90 <__alt_data_end+0xf8007a90>
10007ac0:	500d883a 	mov	r6,r10
10007ac4:	003ff106 	br	10007a8c <__alt_data_end+0xf8007a8c>

10007ac8 <memset>:
10007ac8:	20c000cc 	andi	r3,r4,3
10007acc:	2005883a 	mov	r2,r4
10007ad0:	18004326 	beq	r3,zero,10007be0 <memset+0x118>
10007ad4:	31ffffc4 	addi	r7,r6,-1
10007ad8:	30004026 	beq	r6,zero,10007bdc <memset+0x114>
10007adc:	2813883a 	mov	r9,r5
10007ae0:	200d883a 	mov	r6,r4
10007ae4:	2007883a 	mov	r3,r4
10007ae8:	00000406 	br	10007afc <memset+0x34>
10007aec:	3a3fffc4 	addi	r8,r7,-1
10007af0:	31800044 	addi	r6,r6,1
10007af4:	38003926 	beq	r7,zero,10007bdc <memset+0x114>
10007af8:	400f883a 	mov	r7,r8
10007afc:	18c00044 	addi	r3,r3,1
10007b00:	32400005 	stb	r9,0(r6)
10007b04:	1a0000cc 	andi	r8,r3,3
10007b08:	403ff81e 	bne	r8,zero,10007aec <__alt_data_end+0xf8007aec>
10007b0c:	010000c4 	movi	r4,3
10007b10:	21c02d2e 	bgeu	r4,r7,10007bc8 <memset+0x100>
10007b14:	29803fcc 	andi	r6,r5,255
10007b18:	3008923a 	slli	r4,r6,8
10007b1c:	218cb03a 	or	r6,r4,r6
10007b20:	3008943a 	slli	r4,r6,16
10007b24:	218cb03a 	or	r6,r4,r6
10007b28:	010003c4 	movi	r4,15
10007b2c:	21c0182e 	bgeu	r4,r7,10007b90 <memset+0xc8>
10007b30:	3b3ffc04 	addi	r12,r7,-16
10007b34:	6018d13a 	srli	r12,r12,4
10007b38:	1a000104 	addi	r8,r3,4
10007b3c:	1ac00204 	addi	r11,r3,8
10007b40:	6008913a 	slli	r4,r12,4
10007b44:	1a800304 	addi	r10,r3,12
10007b48:	1813883a 	mov	r9,r3
10007b4c:	21000504 	addi	r4,r4,20
10007b50:	1909883a 	add	r4,r3,r4
10007b54:	49800015 	stw	r6,0(r9)
10007b58:	41800015 	stw	r6,0(r8)
10007b5c:	59800015 	stw	r6,0(r11)
10007b60:	51800015 	stw	r6,0(r10)
10007b64:	42000404 	addi	r8,r8,16
10007b68:	4a400404 	addi	r9,r9,16
10007b6c:	5ac00404 	addi	r11,r11,16
10007b70:	52800404 	addi	r10,r10,16
10007b74:	413ff71e 	bne	r8,r4,10007b54 <__alt_data_end+0xf8007b54>
10007b78:	63000044 	addi	r12,r12,1
10007b7c:	6018913a 	slli	r12,r12,4
10007b80:	39c003cc 	andi	r7,r7,15
10007b84:	010000c4 	movi	r4,3
10007b88:	1b07883a 	add	r3,r3,r12
10007b8c:	21c00e2e 	bgeu	r4,r7,10007bc8 <memset+0x100>
10007b90:	1813883a 	mov	r9,r3
10007b94:	3811883a 	mov	r8,r7
10007b98:	010000c4 	movi	r4,3
10007b9c:	49800015 	stw	r6,0(r9)
10007ba0:	423fff04 	addi	r8,r8,-4
10007ba4:	4a400104 	addi	r9,r9,4
10007ba8:	223ffc36 	bltu	r4,r8,10007b9c <__alt_data_end+0xf8007b9c>
10007bac:	393fff04 	addi	r4,r7,-4
10007bb0:	2008d0ba 	srli	r4,r4,2
10007bb4:	39c000cc 	andi	r7,r7,3
10007bb8:	21000044 	addi	r4,r4,1
10007bbc:	2109883a 	add	r4,r4,r4
10007bc0:	2109883a 	add	r4,r4,r4
10007bc4:	1907883a 	add	r3,r3,r4
10007bc8:	38000426 	beq	r7,zero,10007bdc <memset+0x114>
10007bcc:	19cf883a 	add	r7,r3,r7
10007bd0:	19400005 	stb	r5,0(r3)
10007bd4:	18c00044 	addi	r3,r3,1
10007bd8:	19fffd1e 	bne	r3,r7,10007bd0 <__alt_data_end+0xf8007bd0>
10007bdc:	f800283a 	ret
10007be0:	2007883a 	mov	r3,r4
10007be4:	300f883a 	mov	r7,r6
10007be8:	003fc806 	br	10007b0c <__alt_data_end+0xf8007b0c>

10007bec <_Balloc>:
10007bec:	20801317 	ldw	r2,76(r4)
10007bf0:	defffc04 	addi	sp,sp,-16
10007bf4:	dc400115 	stw	r17,4(sp)
10007bf8:	dc000015 	stw	r16,0(sp)
10007bfc:	dfc00315 	stw	ra,12(sp)
10007c00:	dc800215 	stw	r18,8(sp)
10007c04:	2023883a 	mov	r17,r4
10007c08:	2821883a 	mov	r16,r5
10007c0c:	10000f26 	beq	r2,zero,10007c4c <_Balloc+0x60>
10007c10:	8407883a 	add	r3,r16,r16
10007c14:	18c7883a 	add	r3,r3,r3
10007c18:	10c7883a 	add	r3,r2,r3
10007c1c:	18800017 	ldw	r2,0(r3)
10007c20:	10001126 	beq	r2,zero,10007c68 <_Balloc+0x7c>
10007c24:	11000017 	ldw	r4,0(r2)
10007c28:	19000015 	stw	r4,0(r3)
10007c2c:	10000415 	stw	zero,16(r2)
10007c30:	10000315 	stw	zero,12(r2)
10007c34:	dfc00317 	ldw	ra,12(sp)
10007c38:	dc800217 	ldw	r18,8(sp)
10007c3c:	dc400117 	ldw	r17,4(sp)
10007c40:	dc000017 	ldw	r16,0(sp)
10007c44:	dec00404 	addi	sp,sp,16
10007c48:	f800283a 	ret
10007c4c:	01400104 	movi	r5,4
10007c50:	01800844 	movi	r6,33
10007c54:	000aa880 	call	1000aa88 <_calloc_r>
10007c58:	88801315 	stw	r2,76(r17)
10007c5c:	103fec1e 	bne	r2,zero,10007c10 <__alt_data_end+0xf8007c10>
10007c60:	0005883a 	mov	r2,zero
10007c64:	003ff306 	br	10007c34 <__alt_data_end+0xf8007c34>
10007c68:	01400044 	movi	r5,1
10007c6c:	2c24983a 	sll	r18,r5,r16
10007c70:	8809883a 	mov	r4,r17
10007c74:	91800144 	addi	r6,r18,5
10007c78:	318d883a 	add	r6,r6,r6
10007c7c:	318d883a 	add	r6,r6,r6
10007c80:	000aa880 	call	1000aa88 <_calloc_r>
10007c84:	103ff626 	beq	r2,zero,10007c60 <__alt_data_end+0xf8007c60>
10007c88:	14000115 	stw	r16,4(r2)
10007c8c:	14800215 	stw	r18,8(r2)
10007c90:	003fe606 	br	10007c2c <__alt_data_end+0xf8007c2c>

10007c94 <_Bfree>:
10007c94:	28000826 	beq	r5,zero,10007cb8 <_Bfree+0x24>
10007c98:	28c00117 	ldw	r3,4(r5)
10007c9c:	20801317 	ldw	r2,76(r4)
10007ca0:	18c7883a 	add	r3,r3,r3
10007ca4:	18c7883a 	add	r3,r3,r3
10007ca8:	10c5883a 	add	r2,r2,r3
10007cac:	10c00017 	ldw	r3,0(r2)
10007cb0:	28c00015 	stw	r3,0(r5)
10007cb4:	11400015 	stw	r5,0(r2)
10007cb8:	f800283a 	ret

10007cbc <__multadd>:
10007cbc:	defff704 	addi	sp,sp,-36
10007cc0:	dc800215 	stw	r18,8(sp)
10007cc4:	2c800417 	ldw	r18,16(r5)
10007cc8:	ddc00715 	stw	r23,28(sp)
10007ccc:	dd800615 	stw	r22,24(sp)
10007cd0:	dd000415 	stw	r20,16(sp)
10007cd4:	dcc00315 	stw	r19,12(sp)
10007cd8:	dc400115 	stw	r17,4(sp)
10007cdc:	dc000015 	stw	r16,0(sp)
10007ce0:	dfc00815 	stw	ra,32(sp)
10007ce4:	dd400515 	stw	r21,20(sp)
10007ce8:	2827883a 	mov	r19,r5
10007cec:	2029883a 	mov	r20,r4
10007cf0:	3023883a 	mov	r17,r6
10007cf4:	3821883a 	mov	r16,r7
10007cf8:	2d800504 	addi	r22,r5,20
10007cfc:	002f883a 	mov	r23,zero
10007d00:	b5400017 	ldw	r21,0(r22)
10007d04:	880b883a 	mov	r5,r17
10007d08:	bdc00044 	addi	r23,r23,1
10007d0c:	a93fffcc 	andi	r4,r21,65535
10007d10:	000c0ac0 	call	1000c0ac <__mulsi3>
10007d14:	1421883a 	add	r16,r2,r16
10007d18:	a808d43a 	srli	r4,r21,16
10007d1c:	802ad43a 	srli	r21,r16,16
10007d20:	880b883a 	mov	r5,r17
10007d24:	000c0ac0 	call	1000c0ac <__mulsi3>
10007d28:	a88f883a 	add	r7,r21,r2
10007d2c:	3804943a 	slli	r2,r7,16
10007d30:	80ffffcc 	andi	r3,r16,65535
10007d34:	b5800104 	addi	r22,r22,4
10007d38:	10c7883a 	add	r3,r2,r3
10007d3c:	b0ffff15 	stw	r3,-4(r22)
10007d40:	3820d43a 	srli	r16,r7,16
10007d44:	bcbfee16 	blt	r23,r18,10007d00 <__alt_data_end+0xf8007d00>
10007d48:	80000926 	beq	r16,zero,10007d70 <__multadd+0xb4>
10007d4c:	98800217 	ldw	r2,8(r19)
10007d50:	9080130e 	bge	r18,r2,10007da0 <__multadd+0xe4>
10007d54:	90800144 	addi	r2,r18,5
10007d58:	1085883a 	add	r2,r2,r2
10007d5c:	1085883a 	add	r2,r2,r2
10007d60:	9885883a 	add	r2,r19,r2
10007d64:	14000015 	stw	r16,0(r2)
10007d68:	94800044 	addi	r18,r18,1
10007d6c:	9c800415 	stw	r18,16(r19)
10007d70:	9805883a 	mov	r2,r19
10007d74:	dfc00817 	ldw	ra,32(sp)
10007d78:	ddc00717 	ldw	r23,28(sp)
10007d7c:	dd800617 	ldw	r22,24(sp)
10007d80:	dd400517 	ldw	r21,20(sp)
10007d84:	dd000417 	ldw	r20,16(sp)
10007d88:	dcc00317 	ldw	r19,12(sp)
10007d8c:	dc800217 	ldw	r18,8(sp)
10007d90:	dc400117 	ldw	r17,4(sp)
10007d94:	dc000017 	ldw	r16,0(sp)
10007d98:	dec00904 	addi	sp,sp,36
10007d9c:	f800283a 	ret
10007da0:	99400117 	ldw	r5,4(r19)
10007da4:	a009883a 	mov	r4,r20
10007da8:	29400044 	addi	r5,r5,1
10007dac:	0007bec0 	call	10007bec <_Balloc>
10007db0:	99800417 	ldw	r6,16(r19)
10007db4:	99400304 	addi	r5,r19,12
10007db8:	11000304 	addi	r4,r2,12
10007dbc:	31800084 	addi	r6,r6,2
10007dc0:	318d883a 	add	r6,r6,r6
10007dc4:	318d883a 	add	r6,r6,r6
10007dc8:	1023883a 	mov	r17,r2
10007dcc:	00078340 	call	10007834 <memcpy>
10007dd0:	99000117 	ldw	r4,4(r19)
10007dd4:	a0c01317 	ldw	r3,76(r20)
10007dd8:	2109883a 	add	r4,r4,r4
10007ddc:	2109883a 	add	r4,r4,r4
10007de0:	1907883a 	add	r3,r3,r4
10007de4:	18800017 	ldw	r2,0(r3)
10007de8:	98800015 	stw	r2,0(r19)
10007dec:	1cc00015 	stw	r19,0(r3)
10007df0:	8827883a 	mov	r19,r17
10007df4:	003fd706 	br	10007d54 <__alt_data_end+0xf8007d54>

10007df8 <__s2b>:
10007df8:	defff904 	addi	sp,sp,-28
10007dfc:	dc400115 	stw	r17,4(sp)
10007e00:	dc000015 	stw	r16,0(sp)
10007e04:	2023883a 	mov	r17,r4
10007e08:	2821883a 	mov	r16,r5
10007e0c:	39000204 	addi	r4,r7,8
10007e10:	01400244 	movi	r5,9
10007e14:	dcc00315 	stw	r19,12(sp)
10007e18:	dc800215 	stw	r18,8(sp)
10007e1c:	dfc00615 	stw	ra,24(sp)
10007e20:	dd400515 	stw	r21,20(sp)
10007e24:	dd000415 	stw	r20,16(sp)
10007e28:	3825883a 	mov	r18,r7
10007e2c:	3027883a 	mov	r19,r6
10007e30:	000bfec0 	call	1000bfec <__divsi3>
10007e34:	00c00044 	movi	r3,1
10007e38:	000b883a 	mov	r5,zero
10007e3c:	1880030e 	bge	r3,r2,10007e4c <__s2b+0x54>
10007e40:	18c7883a 	add	r3,r3,r3
10007e44:	29400044 	addi	r5,r5,1
10007e48:	18bffd16 	blt	r3,r2,10007e40 <__alt_data_end+0xf8007e40>
10007e4c:	8809883a 	mov	r4,r17
10007e50:	0007bec0 	call	10007bec <_Balloc>
10007e54:	d8c00717 	ldw	r3,28(sp)
10007e58:	10c00515 	stw	r3,20(r2)
10007e5c:	00c00044 	movi	r3,1
10007e60:	10c00415 	stw	r3,16(r2)
10007e64:	00c00244 	movi	r3,9
10007e68:	1cc0210e 	bge	r3,r19,10007ef0 <__s2b+0xf8>
10007e6c:	80eb883a 	add	r21,r16,r3
10007e70:	a829883a 	mov	r20,r21
10007e74:	84e1883a 	add	r16,r16,r19
10007e78:	a1c00007 	ldb	r7,0(r20)
10007e7c:	8809883a 	mov	r4,r17
10007e80:	a5000044 	addi	r20,r20,1
10007e84:	100b883a 	mov	r5,r2
10007e88:	01800284 	movi	r6,10
10007e8c:	39fff404 	addi	r7,r7,-48
10007e90:	0007cbc0 	call	10007cbc <__multadd>
10007e94:	a43ff81e 	bne	r20,r16,10007e78 <__alt_data_end+0xf8007e78>
10007e98:	ace1883a 	add	r16,r21,r19
10007e9c:	843ffe04 	addi	r16,r16,-8
10007ea0:	9c800a0e 	bge	r19,r18,10007ecc <__s2b+0xd4>
10007ea4:	94e5c83a 	sub	r18,r18,r19
10007ea8:	84a5883a 	add	r18,r16,r18
10007eac:	81c00007 	ldb	r7,0(r16)
10007eb0:	8809883a 	mov	r4,r17
10007eb4:	84000044 	addi	r16,r16,1
10007eb8:	100b883a 	mov	r5,r2
10007ebc:	01800284 	movi	r6,10
10007ec0:	39fff404 	addi	r7,r7,-48
10007ec4:	0007cbc0 	call	10007cbc <__multadd>
10007ec8:	84bff81e 	bne	r16,r18,10007eac <__alt_data_end+0xf8007eac>
10007ecc:	dfc00617 	ldw	ra,24(sp)
10007ed0:	dd400517 	ldw	r21,20(sp)
10007ed4:	dd000417 	ldw	r20,16(sp)
10007ed8:	dcc00317 	ldw	r19,12(sp)
10007edc:	dc800217 	ldw	r18,8(sp)
10007ee0:	dc400117 	ldw	r17,4(sp)
10007ee4:	dc000017 	ldw	r16,0(sp)
10007ee8:	dec00704 	addi	sp,sp,28
10007eec:	f800283a 	ret
10007ef0:	84000284 	addi	r16,r16,10
10007ef4:	1827883a 	mov	r19,r3
10007ef8:	003fe906 	br	10007ea0 <__alt_data_end+0xf8007ea0>

10007efc <__hi0bits>:
10007efc:	20bfffec 	andhi	r2,r4,65535
10007f00:	1000141e 	bne	r2,zero,10007f54 <__hi0bits+0x58>
10007f04:	2008943a 	slli	r4,r4,16
10007f08:	00800404 	movi	r2,16
10007f0c:	20ffc02c 	andhi	r3,r4,65280
10007f10:	1800021e 	bne	r3,zero,10007f1c <__hi0bits+0x20>
10007f14:	2008923a 	slli	r4,r4,8
10007f18:	10800204 	addi	r2,r2,8
10007f1c:	20fc002c 	andhi	r3,r4,61440
10007f20:	1800021e 	bne	r3,zero,10007f2c <__hi0bits+0x30>
10007f24:	2008913a 	slli	r4,r4,4
10007f28:	10800104 	addi	r2,r2,4
10007f2c:	20f0002c 	andhi	r3,r4,49152
10007f30:	1800031e 	bne	r3,zero,10007f40 <__hi0bits+0x44>
10007f34:	2109883a 	add	r4,r4,r4
10007f38:	10800084 	addi	r2,r2,2
10007f3c:	2109883a 	add	r4,r4,r4
10007f40:	20000316 	blt	r4,zero,10007f50 <__hi0bits+0x54>
10007f44:	2110002c 	andhi	r4,r4,16384
10007f48:	2000041e 	bne	r4,zero,10007f5c <__hi0bits+0x60>
10007f4c:	00800804 	movi	r2,32
10007f50:	f800283a 	ret
10007f54:	0005883a 	mov	r2,zero
10007f58:	003fec06 	br	10007f0c <__alt_data_end+0xf8007f0c>
10007f5c:	10800044 	addi	r2,r2,1
10007f60:	f800283a 	ret

10007f64 <__lo0bits>:
10007f64:	20c00017 	ldw	r3,0(r4)
10007f68:	188001cc 	andi	r2,r3,7
10007f6c:	10000826 	beq	r2,zero,10007f90 <__lo0bits+0x2c>
10007f70:	1880004c 	andi	r2,r3,1
10007f74:	1000211e 	bne	r2,zero,10007ffc <__lo0bits+0x98>
10007f78:	1880008c 	andi	r2,r3,2
10007f7c:	1000211e 	bne	r2,zero,10008004 <__lo0bits+0xa0>
10007f80:	1806d0ba 	srli	r3,r3,2
10007f84:	00800084 	movi	r2,2
10007f88:	20c00015 	stw	r3,0(r4)
10007f8c:	f800283a 	ret
10007f90:	18bfffcc 	andi	r2,r3,65535
10007f94:	10001326 	beq	r2,zero,10007fe4 <__lo0bits+0x80>
10007f98:	0005883a 	mov	r2,zero
10007f9c:	19403fcc 	andi	r5,r3,255
10007fa0:	2800021e 	bne	r5,zero,10007fac <__lo0bits+0x48>
10007fa4:	1806d23a 	srli	r3,r3,8
10007fa8:	10800204 	addi	r2,r2,8
10007fac:	194003cc 	andi	r5,r3,15
10007fb0:	2800021e 	bne	r5,zero,10007fbc <__lo0bits+0x58>
10007fb4:	1806d13a 	srli	r3,r3,4
10007fb8:	10800104 	addi	r2,r2,4
10007fbc:	194000cc 	andi	r5,r3,3
10007fc0:	2800021e 	bne	r5,zero,10007fcc <__lo0bits+0x68>
10007fc4:	1806d0ba 	srli	r3,r3,2
10007fc8:	10800084 	addi	r2,r2,2
10007fcc:	1940004c 	andi	r5,r3,1
10007fd0:	2800081e 	bne	r5,zero,10007ff4 <__lo0bits+0x90>
10007fd4:	1806d07a 	srli	r3,r3,1
10007fd8:	1800051e 	bne	r3,zero,10007ff0 <__lo0bits+0x8c>
10007fdc:	00800804 	movi	r2,32
10007fe0:	f800283a 	ret
10007fe4:	1806d43a 	srli	r3,r3,16
10007fe8:	00800404 	movi	r2,16
10007fec:	003feb06 	br	10007f9c <__alt_data_end+0xf8007f9c>
10007ff0:	10800044 	addi	r2,r2,1
10007ff4:	20c00015 	stw	r3,0(r4)
10007ff8:	f800283a 	ret
10007ffc:	0005883a 	mov	r2,zero
10008000:	f800283a 	ret
10008004:	1806d07a 	srli	r3,r3,1
10008008:	00800044 	movi	r2,1
1000800c:	20c00015 	stw	r3,0(r4)
10008010:	f800283a 	ret

10008014 <__i2b>:
10008014:	defffd04 	addi	sp,sp,-12
10008018:	dc000015 	stw	r16,0(sp)
1000801c:	04000044 	movi	r16,1
10008020:	dc400115 	stw	r17,4(sp)
10008024:	2823883a 	mov	r17,r5
10008028:	800b883a 	mov	r5,r16
1000802c:	dfc00215 	stw	ra,8(sp)
10008030:	0007bec0 	call	10007bec <_Balloc>
10008034:	14400515 	stw	r17,20(r2)
10008038:	14000415 	stw	r16,16(r2)
1000803c:	dfc00217 	ldw	ra,8(sp)
10008040:	dc400117 	ldw	r17,4(sp)
10008044:	dc000017 	ldw	r16,0(sp)
10008048:	dec00304 	addi	sp,sp,12
1000804c:	f800283a 	ret

10008050 <__multiply>:
10008050:	deffef04 	addi	sp,sp,-68
10008054:	dc400815 	stw	r17,32(sp)
10008058:	dc000715 	stw	r16,28(sp)
1000805c:	2c400417 	ldw	r17,16(r5)
10008060:	34000417 	ldw	r16,16(r6)
10008064:	dd800d15 	stw	r22,52(sp)
10008068:	dc800915 	stw	r18,36(sp)
1000806c:	dfc01015 	stw	ra,64(sp)
10008070:	df000f15 	stw	fp,60(sp)
10008074:	ddc00e15 	stw	r23,56(sp)
10008078:	dd400c15 	stw	r21,48(sp)
1000807c:	dd000b15 	stw	r20,44(sp)
10008080:	dcc00a15 	stw	r19,40(sp)
10008084:	2825883a 	mov	r18,r5
10008088:	302d883a 	mov	r22,r6
1000808c:	8c009116 	blt	r17,r16,100082d4 <__multiply+0x284>
10008090:	8005883a 	mov	r2,r16
10008094:	8821883a 	mov	r16,r17
10008098:	1023883a 	mov	r17,r2
1000809c:	90800217 	ldw	r2,8(r18)
100080a0:	8447883a 	add	r3,r16,r17
100080a4:	d8c00215 	stw	r3,8(sp)
100080a8:	91400117 	ldw	r5,4(r18)
100080ac:	10c0010e 	bge	r2,r3,100080b4 <__multiply+0x64>
100080b0:	29400044 	addi	r5,r5,1
100080b4:	0007bec0 	call	10007bec <_Balloc>
100080b8:	d8c00217 	ldw	r3,8(sp)
100080bc:	d8800615 	stw	r2,24(sp)
100080c0:	18eb883a 	add	r21,r3,r3
100080c4:	ad6b883a 	add	r21,r21,r21
100080c8:	10c00504 	addi	r3,r2,20
100080cc:	1d6b883a 	add	r21,r3,r21
100080d0:	d8c00115 	stw	r3,4(sp)
100080d4:	dd400315 	stw	r21,12(sp)
100080d8:	1805883a 	mov	r2,r3
100080dc:	1d40042e 	bgeu	r3,r21,100080f0 <__multiply+0xa0>
100080e0:	d8c00317 	ldw	r3,12(sp)
100080e4:	10000015 	stw	zero,0(r2)
100080e8:	10800104 	addi	r2,r2,4
100080ec:	10fffc36 	bltu	r2,r3,100080e0 <__alt_data_end+0xf80080e0>
100080f0:	8c63883a 	add	r17,r17,r17
100080f4:	b5800504 	addi	r22,r22,20
100080f8:	8c63883a 	add	r17,r17,r17
100080fc:	94800504 	addi	r18,r18,20
10008100:	8421883a 	add	r16,r16,r16
10008104:	b463883a 	add	r17,r22,r17
10008108:	8421883a 	add	r16,r16,r16
1000810c:	dd800015 	stw	r22,0(sp)
10008110:	dc800415 	stw	r18,16(sp)
10008114:	dc400515 	stw	r17,20(sp)
10008118:	9429883a 	add	r20,r18,r16
1000811c:	b4404f2e 	bgeu	r22,r17,1000825c <__multiply+0x20c>
10008120:	d8c00017 	ldw	r3,0(sp)
10008124:	1c800017 	ldw	r18,0(r3)
10008128:	943fffcc 	andi	r16,r18,65535
1000812c:	80001e26 	beq	r16,zero,100081a8 <__multiply+0x158>
10008130:	dd800117 	ldw	r22,4(sp)
10008134:	dd400417 	ldw	r21,16(sp)
10008138:	0025883a 	mov	r18,zero
1000813c:	adc00017 	ldw	r23,0(r21)
10008140:	b4c00017 	ldw	r19,0(r22)
10008144:	800b883a 	mov	r5,r16
10008148:	b93fffcc 	andi	r4,r23,65535
1000814c:	000c0ac0 	call	1000c0ac <__mulsi3>
10008150:	9c7fffcc 	andi	r17,r19,65535
10008154:	8885883a 	add	r2,r17,r2
10008158:	b808d43a 	srli	r4,r23,16
1000815c:	14a3883a 	add	r17,r2,r18
10008160:	9826d43a 	srli	r19,r19,16
10008164:	8824d43a 	srli	r18,r17,16
10008168:	800b883a 	mov	r5,r16
1000816c:	000c0ac0 	call	1000c0ac <__mulsi3>
10008170:	9885883a 	add	r2,r19,r2
10008174:	14a7883a 	add	r19,r2,r18
10008178:	88ffffcc 	andi	r3,r17,65535
1000817c:	9822943a 	slli	r17,r19,16
10008180:	ad400104 	addi	r21,r21,4
10008184:	b005883a 	mov	r2,r22
10008188:	88c6b03a 	or	r3,r17,r3
1000818c:	b0c00015 	stw	r3,0(r22)
10008190:	9824d43a 	srli	r18,r19,16
10008194:	b5800104 	addi	r22,r22,4
10008198:	ad3fe836 	bltu	r21,r20,1000813c <__alt_data_end+0xf800813c>
1000819c:	d8c00017 	ldw	r3,0(sp)
100081a0:	14800115 	stw	r18,4(r2)
100081a4:	1c800017 	ldw	r18,0(r3)
100081a8:	9024d43a 	srli	r18,r18,16
100081ac:	90002226 	beq	r18,zero,10008238 <__multiply+0x1e8>
100081b0:	d8c00117 	ldw	r3,4(sp)
100081b4:	dd800417 	ldw	r22,16(sp)
100081b8:	002f883a 	mov	r23,zero
100081bc:	1f000017 	ldw	fp,0(r3)
100081c0:	1823883a 	mov	r17,r3
100081c4:	182b883a 	mov	r21,r3
100081c8:	e021883a 	mov	r16,fp
100081cc:	00000106 	br	100081d4 <__multiply+0x184>
100081d0:	982b883a 	mov	r21,r19
100081d4:	b100000b 	ldhu	r4,0(r22)
100081d8:	8020d43a 	srli	r16,r16,16
100081dc:	900b883a 	mov	r5,r18
100081e0:	000c0ac0 	call	1000c0ac <__mulsi3>
100081e4:	1405883a 	add	r2,r2,r16
100081e8:	15ef883a 	add	r23,r2,r23
100081ec:	b804943a 	slli	r2,r23,16
100081f0:	e0ffffcc 	andi	r3,fp,65535
100081f4:	8c400104 	addi	r17,r17,4
100081f8:	10c6b03a 	or	r3,r2,r3
100081fc:	88ffff15 	stw	r3,-4(r17)
10008200:	b5800104 	addi	r22,r22,4
10008204:	b13fff17 	ldw	r4,-4(r22)
10008208:	acc00104 	addi	r19,r21,4
1000820c:	900b883a 	mov	r5,r18
10008210:	2008d43a 	srli	r4,r4,16
10008214:	9c000017 	ldw	r16,0(r19)
10008218:	000c0ac0 	call	1000c0ac <__mulsi3>
1000821c:	b806d43a 	srli	r3,r23,16
10008220:	813fffcc 	andi	r4,r16,65535
10008224:	1105883a 	add	r2,r2,r4
10008228:	10f9883a 	add	fp,r2,r3
1000822c:	e02ed43a 	srli	r23,fp,16
10008230:	b53fe736 	bltu	r22,r20,100081d0 <__alt_data_end+0xf80081d0>
10008234:	af000115 	stw	fp,4(r21)
10008238:	d8c00017 	ldw	r3,0(sp)
1000823c:	d9000517 	ldw	r4,20(sp)
10008240:	18c00104 	addi	r3,r3,4
10008244:	d8c00015 	stw	r3,0(sp)
10008248:	d8c00117 	ldw	r3,4(sp)
1000824c:	18c00104 	addi	r3,r3,4
10008250:	d8c00115 	stw	r3,4(sp)
10008254:	d8c00017 	ldw	r3,0(sp)
10008258:	193fb136 	bltu	r3,r4,10008120 <__alt_data_end+0xf8008120>
1000825c:	d8c00217 	ldw	r3,8(sp)
10008260:	00c00c0e 	bge	zero,r3,10008294 <__multiply+0x244>
10008264:	d8c00317 	ldw	r3,12(sp)
10008268:	18bfff17 	ldw	r2,-4(r3)
1000826c:	1d7fff04 	addi	r21,r3,-4
10008270:	10000326 	beq	r2,zero,10008280 <__multiply+0x230>
10008274:	00000706 	br	10008294 <__multiply+0x244>
10008278:	a8800017 	ldw	r2,0(r21)
1000827c:	1000051e 	bne	r2,zero,10008294 <__multiply+0x244>
10008280:	d8c00217 	ldw	r3,8(sp)
10008284:	ad7fff04 	addi	r21,r21,-4
10008288:	18ffffc4 	addi	r3,r3,-1
1000828c:	d8c00215 	stw	r3,8(sp)
10008290:	183ff91e 	bne	r3,zero,10008278 <__alt_data_end+0xf8008278>
10008294:	d8c00617 	ldw	r3,24(sp)
10008298:	d9000217 	ldw	r4,8(sp)
1000829c:	1805883a 	mov	r2,r3
100082a0:	19000415 	stw	r4,16(r3)
100082a4:	dfc01017 	ldw	ra,64(sp)
100082a8:	df000f17 	ldw	fp,60(sp)
100082ac:	ddc00e17 	ldw	r23,56(sp)
100082b0:	dd800d17 	ldw	r22,52(sp)
100082b4:	dd400c17 	ldw	r21,48(sp)
100082b8:	dd000b17 	ldw	r20,44(sp)
100082bc:	dcc00a17 	ldw	r19,40(sp)
100082c0:	dc800917 	ldw	r18,36(sp)
100082c4:	dc400817 	ldw	r17,32(sp)
100082c8:	dc000717 	ldw	r16,28(sp)
100082cc:	dec01104 	addi	sp,sp,68
100082d0:	f800283a 	ret
100082d4:	3025883a 	mov	r18,r6
100082d8:	282d883a 	mov	r22,r5
100082dc:	003f6f06 	br	1000809c <__alt_data_end+0xf800809c>

100082e0 <__pow5mult>:
100082e0:	defffa04 	addi	sp,sp,-24
100082e4:	dcc00315 	stw	r19,12(sp)
100082e8:	dc800215 	stw	r18,8(sp)
100082ec:	dc000015 	stw	r16,0(sp)
100082f0:	dfc00515 	stw	ra,20(sp)
100082f4:	dd000415 	stw	r20,16(sp)
100082f8:	dc400115 	stw	r17,4(sp)
100082fc:	308000cc 	andi	r2,r6,3
10008300:	3021883a 	mov	r16,r6
10008304:	2027883a 	mov	r19,r4
10008308:	2825883a 	mov	r18,r5
1000830c:	10002e1e 	bne	r2,zero,100083c8 <__pow5mult+0xe8>
10008310:	8021d0ba 	srai	r16,r16,2
10008314:	80001a26 	beq	r16,zero,10008380 <__pow5mult+0xa0>
10008318:	9c401217 	ldw	r17,72(r19)
1000831c:	8800061e 	bne	r17,zero,10008338 <__pow5mult+0x58>
10008320:	00003406 	br	100083f4 <__pow5mult+0x114>
10008324:	8021d07a 	srai	r16,r16,1
10008328:	80001526 	beq	r16,zero,10008380 <__pow5mult+0xa0>
1000832c:	88800017 	ldw	r2,0(r17)
10008330:	10001c26 	beq	r2,zero,100083a4 <__pow5mult+0xc4>
10008334:	1023883a 	mov	r17,r2
10008338:	80c0004c 	andi	r3,r16,1
1000833c:	183ff926 	beq	r3,zero,10008324 <__alt_data_end+0xf8008324>
10008340:	900b883a 	mov	r5,r18
10008344:	880d883a 	mov	r6,r17
10008348:	9809883a 	mov	r4,r19
1000834c:	00080500 	call	10008050 <__multiply>
10008350:	90001b26 	beq	r18,zero,100083c0 <__pow5mult+0xe0>
10008354:	91c00117 	ldw	r7,4(r18)
10008358:	98c01317 	ldw	r3,76(r19)
1000835c:	8021d07a 	srai	r16,r16,1
10008360:	39cf883a 	add	r7,r7,r7
10008364:	39cf883a 	add	r7,r7,r7
10008368:	19c7883a 	add	r3,r3,r7
1000836c:	19000017 	ldw	r4,0(r3)
10008370:	91000015 	stw	r4,0(r18)
10008374:	1c800015 	stw	r18,0(r3)
10008378:	1025883a 	mov	r18,r2
1000837c:	803feb1e 	bne	r16,zero,1000832c <__alt_data_end+0xf800832c>
10008380:	9005883a 	mov	r2,r18
10008384:	dfc00517 	ldw	ra,20(sp)
10008388:	dd000417 	ldw	r20,16(sp)
1000838c:	dcc00317 	ldw	r19,12(sp)
10008390:	dc800217 	ldw	r18,8(sp)
10008394:	dc400117 	ldw	r17,4(sp)
10008398:	dc000017 	ldw	r16,0(sp)
1000839c:	dec00604 	addi	sp,sp,24
100083a0:	f800283a 	ret
100083a4:	9809883a 	mov	r4,r19
100083a8:	880b883a 	mov	r5,r17
100083ac:	880d883a 	mov	r6,r17
100083b0:	00080500 	call	10008050 <__multiply>
100083b4:	88800015 	stw	r2,0(r17)
100083b8:	10000015 	stw	zero,0(r2)
100083bc:	003fdd06 	br	10008334 <__alt_data_end+0xf8008334>
100083c0:	1025883a 	mov	r18,r2
100083c4:	003fd706 	br	10008324 <__alt_data_end+0xf8008324>
100083c8:	10bfffc4 	addi	r2,r2,-1
100083cc:	1085883a 	add	r2,r2,r2
100083d0:	00c40074 	movhi	r3,4097
100083d4:	18c02f04 	addi	r3,r3,188
100083d8:	1085883a 	add	r2,r2,r2
100083dc:	1885883a 	add	r2,r3,r2
100083e0:	11800017 	ldw	r6,0(r2)
100083e4:	000f883a 	mov	r7,zero
100083e8:	0007cbc0 	call	10007cbc <__multadd>
100083ec:	1025883a 	mov	r18,r2
100083f0:	003fc706 	br	10008310 <__alt_data_end+0xf8008310>
100083f4:	05000044 	movi	r20,1
100083f8:	9809883a 	mov	r4,r19
100083fc:	a00b883a 	mov	r5,r20
10008400:	0007bec0 	call	10007bec <_Balloc>
10008404:	1023883a 	mov	r17,r2
10008408:	00809c44 	movi	r2,625
1000840c:	88800515 	stw	r2,20(r17)
10008410:	8d000415 	stw	r20,16(r17)
10008414:	9c401215 	stw	r17,72(r19)
10008418:	88000015 	stw	zero,0(r17)
1000841c:	003fc606 	br	10008338 <__alt_data_end+0xf8008338>

10008420 <__lshift>:
10008420:	defff904 	addi	sp,sp,-28
10008424:	dd000415 	stw	r20,16(sp)
10008428:	dcc00315 	stw	r19,12(sp)
1000842c:	3029d17a 	srai	r20,r6,5
10008430:	2cc00417 	ldw	r19,16(r5)
10008434:	28800217 	ldw	r2,8(r5)
10008438:	dd400515 	stw	r21,20(sp)
1000843c:	a4e7883a 	add	r19,r20,r19
10008440:	dc800215 	stw	r18,8(sp)
10008444:	dc400115 	stw	r17,4(sp)
10008448:	dc000015 	stw	r16,0(sp)
1000844c:	dfc00615 	stw	ra,24(sp)
10008450:	9c000044 	addi	r16,r19,1
10008454:	2823883a 	mov	r17,r5
10008458:	302b883a 	mov	r21,r6
1000845c:	2025883a 	mov	r18,r4
10008460:	29400117 	ldw	r5,4(r5)
10008464:	1400030e 	bge	r2,r16,10008474 <__lshift+0x54>
10008468:	1085883a 	add	r2,r2,r2
1000846c:	29400044 	addi	r5,r5,1
10008470:	143ffd16 	blt	r2,r16,10008468 <__alt_data_end+0xf8008468>
10008474:	9009883a 	mov	r4,r18
10008478:	0007bec0 	call	10007bec <_Balloc>
1000847c:	11c00504 	addi	r7,r2,20
10008480:	0500090e 	bge	zero,r20,100084a8 <__lshift+0x88>
10008484:	3811883a 	mov	r8,r7
10008488:	0007883a 	mov	r3,zero
1000848c:	40000015 	stw	zero,0(r8)
10008490:	18c00044 	addi	r3,r3,1
10008494:	42000104 	addi	r8,r8,4
10008498:	1d3ffc1e 	bne	r3,r20,1000848c <__alt_data_end+0xf800848c>
1000849c:	18c7883a 	add	r3,r3,r3
100084a0:	18c7883a 	add	r3,r3,r3
100084a4:	38cf883a 	add	r7,r7,r3
100084a8:	89000417 	ldw	r4,16(r17)
100084ac:	88c00504 	addi	r3,r17,20
100084b0:	a98007cc 	andi	r6,r21,31
100084b4:	2109883a 	add	r4,r4,r4
100084b8:	2109883a 	add	r4,r4,r4
100084bc:	1909883a 	add	r4,r3,r4
100084c0:	30002326 	beq	r6,zero,10008550 <__lshift+0x130>
100084c4:	01400804 	movi	r5,32
100084c8:	298bc83a 	sub	r5,r5,r6
100084cc:	0013883a 	mov	r9,zero
100084d0:	1a000017 	ldw	r8,0(r3)
100084d4:	3815883a 	mov	r10,r7
100084d8:	39c00104 	addi	r7,r7,4
100084dc:	4190983a 	sll	r8,r8,r6
100084e0:	18c00104 	addi	r3,r3,4
100084e4:	4a10b03a 	or	r8,r9,r8
100084e8:	3a3fff15 	stw	r8,-4(r7)
100084ec:	1a3fff17 	ldw	r8,-4(r3)
100084f0:	4152d83a 	srl	r9,r8,r5
100084f4:	193ff636 	bltu	r3,r4,100084d0 <__alt_data_end+0xf80084d0>
100084f8:	52400115 	stw	r9,4(r10)
100084fc:	48000126 	beq	r9,zero,10008504 <__lshift+0xe4>
10008500:	9c000084 	addi	r16,r19,2
10008504:	89000117 	ldw	r4,4(r17)
10008508:	90c01317 	ldw	r3,76(r18)
1000850c:	843fffc4 	addi	r16,r16,-1
10008510:	2109883a 	add	r4,r4,r4
10008514:	2109883a 	add	r4,r4,r4
10008518:	1907883a 	add	r3,r3,r4
1000851c:	19000017 	ldw	r4,0(r3)
10008520:	14000415 	stw	r16,16(r2)
10008524:	89000015 	stw	r4,0(r17)
10008528:	1c400015 	stw	r17,0(r3)
1000852c:	dfc00617 	ldw	ra,24(sp)
10008530:	dd400517 	ldw	r21,20(sp)
10008534:	dd000417 	ldw	r20,16(sp)
10008538:	dcc00317 	ldw	r19,12(sp)
1000853c:	dc800217 	ldw	r18,8(sp)
10008540:	dc400117 	ldw	r17,4(sp)
10008544:	dc000017 	ldw	r16,0(sp)
10008548:	dec00704 	addi	sp,sp,28
1000854c:	f800283a 	ret
10008550:	19400017 	ldw	r5,0(r3)
10008554:	39c00104 	addi	r7,r7,4
10008558:	18c00104 	addi	r3,r3,4
1000855c:	397fff15 	stw	r5,-4(r7)
10008560:	193ffb36 	bltu	r3,r4,10008550 <__alt_data_end+0xf8008550>
10008564:	003fe706 	br	10008504 <__alt_data_end+0xf8008504>

10008568 <__mcmp>:
10008568:	20800417 	ldw	r2,16(r4)
1000856c:	28c00417 	ldw	r3,16(r5)
10008570:	10c5c83a 	sub	r2,r2,r3
10008574:	1000111e 	bne	r2,zero,100085bc <__mcmp+0x54>
10008578:	18c7883a 	add	r3,r3,r3
1000857c:	18c7883a 	add	r3,r3,r3
10008580:	21000504 	addi	r4,r4,20
10008584:	29400504 	addi	r5,r5,20
10008588:	20c5883a 	add	r2,r4,r3
1000858c:	28cb883a 	add	r5,r5,r3
10008590:	00000106 	br	10008598 <__mcmp+0x30>
10008594:	20800a2e 	bgeu	r4,r2,100085c0 <__mcmp+0x58>
10008598:	10bfff04 	addi	r2,r2,-4
1000859c:	297fff04 	addi	r5,r5,-4
100085a0:	11800017 	ldw	r6,0(r2)
100085a4:	28c00017 	ldw	r3,0(r5)
100085a8:	30fffa26 	beq	r6,r3,10008594 <__alt_data_end+0xf8008594>
100085ac:	30c00236 	bltu	r6,r3,100085b8 <__mcmp+0x50>
100085b0:	00800044 	movi	r2,1
100085b4:	f800283a 	ret
100085b8:	00bfffc4 	movi	r2,-1
100085bc:	f800283a 	ret
100085c0:	0005883a 	mov	r2,zero
100085c4:	f800283a 	ret

100085c8 <__mdiff>:
100085c8:	defffb04 	addi	sp,sp,-20
100085cc:	dc000015 	stw	r16,0(sp)
100085d0:	2821883a 	mov	r16,r5
100085d4:	dcc00315 	stw	r19,12(sp)
100085d8:	300b883a 	mov	r5,r6
100085dc:	2027883a 	mov	r19,r4
100085e0:	8009883a 	mov	r4,r16
100085e4:	dc800215 	stw	r18,8(sp)
100085e8:	dfc00415 	stw	ra,16(sp)
100085ec:	dc400115 	stw	r17,4(sp)
100085f0:	3025883a 	mov	r18,r6
100085f4:	00085680 	call	10008568 <__mcmp>
100085f8:	10005226 	beq	r2,zero,10008744 <__mdiff+0x17c>
100085fc:	10004c16 	blt	r2,zero,10008730 <__mdiff+0x168>
10008600:	0023883a 	mov	r17,zero
10008604:	81400117 	ldw	r5,4(r16)
10008608:	9809883a 	mov	r4,r19
1000860c:	0007bec0 	call	10007bec <_Balloc>
10008610:	83400417 	ldw	r13,16(r16)
10008614:	93800417 	ldw	r14,16(r18)
10008618:	81000504 	addi	r4,r16,20
1000861c:	6b59883a 	add	r12,r13,r13
10008620:	739d883a 	add	r14,r14,r14
10008624:	6319883a 	add	r12,r12,r12
10008628:	91800504 	addi	r6,r18,20
1000862c:	739d883a 	add	r14,r14,r14
10008630:	14400315 	stw	r17,12(r2)
10008634:	2319883a 	add	r12,r4,r12
10008638:	339d883a 	add	r14,r6,r14
1000863c:	12400504 	addi	r9,r2,20
10008640:	0007883a 	mov	r3,zero
10008644:	22000017 	ldw	r8,0(r4)
10008648:	32800017 	ldw	r10,0(r6)
1000864c:	4ac00104 	addi	r11,r9,4
10008650:	41ffffcc 	andi	r7,r8,65535
10008654:	38c7883a 	add	r3,r7,r3
10008658:	51ffffcc 	andi	r7,r10,65535
1000865c:	19cfc83a 	sub	r7,r3,r7
10008660:	4010d43a 	srli	r8,r8,16
10008664:	5014d43a 	srli	r10,r10,16
10008668:	3807d43a 	srai	r3,r7,16
1000866c:	39ffffcc 	andi	r7,r7,65535
10008670:	4291c83a 	sub	r8,r8,r10
10008674:	40c7883a 	add	r3,r8,r3
10008678:	1810943a 	slli	r8,r3,16
1000867c:	31800104 	addi	r6,r6,4
10008680:	21000104 	addi	r4,r4,4
10008684:	41ceb03a 	or	r7,r8,r7
10008688:	49c00015 	stw	r7,0(r9)
1000868c:	1807d43a 	srai	r3,r3,16
10008690:	580b883a 	mov	r5,r11
10008694:	5813883a 	mov	r9,r11
10008698:	33bfea36 	bltu	r6,r14,10008644 <__alt_data_end+0xf8008644>
1000869c:	2011883a 	mov	r8,r4
100086a0:	2300152e 	bgeu	r4,r12,100086f8 <__mdiff+0x130>
100086a4:	21400017 	ldw	r5,0(r4)
100086a8:	4a400104 	addi	r9,r9,4
100086ac:	21000104 	addi	r4,r4,4
100086b0:	29ffffcc 	andi	r7,r5,65535
100086b4:	38c7883a 	add	r3,r7,r3
100086b8:	280ad43a 	srli	r5,r5,16
100086bc:	180dd43a 	srai	r6,r3,16
100086c0:	19ffffcc 	andi	r7,r3,65535
100086c4:	3147883a 	add	r3,r6,r5
100086c8:	180a943a 	slli	r5,r3,16
100086cc:	1807d43a 	srai	r3,r3,16
100086d0:	29ceb03a 	or	r7,r5,r7
100086d4:	49ffff15 	stw	r7,-4(r9)
100086d8:	233ff236 	bltu	r4,r12,100086a4 <__alt_data_end+0xf80086a4>
100086dc:	0206303a 	nor	r3,zero,r8
100086e0:	1b07883a 	add	r3,r3,r12
100086e4:	1806d0ba 	srli	r3,r3,2
100086e8:	18c00044 	addi	r3,r3,1
100086ec:	18c7883a 	add	r3,r3,r3
100086f0:	18c7883a 	add	r3,r3,r3
100086f4:	58cb883a 	add	r5,r11,r3
100086f8:	28ffff04 	addi	r3,r5,-4
100086fc:	3800041e 	bne	r7,zero,10008710 <__mdiff+0x148>
10008700:	18ffff04 	addi	r3,r3,-4
10008704:	19000017 	ldw	r4,0(r3)
10008708:	6b7fffc4 	addi	r13,r13,-1
1000870c:	203ffc26 	beq	r4,zero,10008700 <__alt_data_end+0xf8008700>
10008710:	13400415 	stw	r13,16(r2)
10008714:	dfc00417 	ldw	ra,16(sp)
10008718:	dcc00317 	ldw	r19,12(sp)
1000871c:	dc800217 	ldw	r18,8(sp)
10008720:	dc400117 	ldw	r17,4(sp)
10008724:	dc000017 	ldw	r16,0(sp)
10008728:	dec00504 	addi	sp,sp,20
1000872c:	f800283a 	ret
10008730:	8005883a 	mov	r2,r16
10008734:	04400044 	movi	r17,1
10008738:	9021883a 	mov	r16,r18
1000873c:	1025883a 	mov	r18,r2
10008740:	003fb006 	br	10008604 <__alt_data_end+0xf8008604>
10008744:	9809883a 	mov	r4,r19
10008748:	000b883a 	mov	r5,zero
1000874c:	0007bec0 	call	10007bec <_Balloc>
10008750:	00c00044 	movi	r3,1
10008754:	10c00415 	stw	r3,16(r2)
10008758:	10000515 	stw	zero,20(r2)
1000875c:	003fed06 	br	10008714 <__alt_data_end+0xf8008714>

10008760 <__ulp>:
10008760:	295ffc2c 	andhi	r5,r5,32752
10008764:	00bf3034 	movhi	r2,64704
10008768:	2887883a 	add	r3,r5,r2
1000876c:	00c0020e 	bge	zero,r3,10008778 <__ulp+0x18>
10008770:	0005883a 	mov	r2,zero
10008774:	f800283a 	ret
10008778:	00c7c83a 	sub	r3,zero,r3
1000877c:	180bd53a 	srai	r5,r3,20
10008780:	008004c4 	movi	r2,19
10008784:	11400a0e 	bge	r2,r5,100087b0 <__ulp+0x50>
10008788:	00800c84 	movi	r2,50
1000878c:	0007883a 	mov	r3,zero
10008790:	11400516 	blt	r2,r5,100087a8 <__ulp+0x48>
10008794:	00800cc4 	movi	r2,51
10008798:	114bc83a 	sub	r5,r2,r5
1000879c:	00800044 	movi	r2,1
100087a0:	1144983a 	sll	r2,r2,r5
100087a4:	f800283a 	ret
100087a8:	00800044 	movi	r2,1
100087ac:	f800283a 	ret
100087b0:	00800234 	movhi	r2,8
100087b4:	1147d83a 	sra	r3,r2,r5
100087b8:	0005883a 	mov	r2,zero
100087bc:	f800283a 	ret

100087c0 <__b2d>:
100087c0:	defffa04 	addi	sp,sp,-24
100087c4:	dc000015 	stw	r16,0(sp)
100087c8:	24000417 	ldw	r16,16(r4)
100087cc:	dc400115 	stw	r17,4(sp)
100087d0:	24400504 	addi	r17,r4,20
100087d4:	8421883a 	add	r16,r16,r16
100087d8:	8421883a 	add	r16,r16,r16
100087dc:	8c21883a 	add	r16,r17,r16
100087e0:	dc800215 	stw	r18,8(sp)
100087e4:	84bfff17 	ldw	r18,-4(r16)
100087e8:	dd000415 	stw	r20,16(sp)
100087ec:	dcc00315 	stw	r19,12(sp)
100087f0:	9009883a 	mov	r4,r18
100087f4:	2829883a 	mov	r20,r5
100087f8:	dfc00515 	stw	ra,20(sp)
100087fc:	0007efc0 	call	10007efc <__hi0bits>
10008800:	00c00804 	movi	r3,32
10008804:	1887c83a 	sub	r3,r3,r2
10008808:	a0c00015 	stw	r3,0(r20)
1000880c:	00c00284 	movi	r3,10
10008810:	84ffff04 	addi	r19,r16,-4
10008814:	18801216 	blt	r3,r2,10008860 <__b2d+0xa0>
10008818:	014002c4 	movi	r5,11
1000881c:	2889c83a 	sub	r4,r5,r2
10008820:	9106d83a 	srl	r3,r18,r4
10008824:	18cffc34 	orhi	r3,r3,16368
10008828:	8cc0282e 	bgeu	r17,r19,100088cc <__b2d+0x10c>
1000882c:	817ffe17 	ldw	r5,-8(r16)
10008830:	290ad83a 	srl	r5,r5,r4
10008834:	10800544 	addi	r2,r2,21
10008838:	9084983a 	sll	r2,r18,r2
1000883c:	2884b03a 	or	r2,r5,r2
10008840:	dfc00517 	ldw	ra,20(sp)
10008844:	dd000417 	ldw	r20,16(sp)
10008848:	dcc00317 	ldw	r19,12(sp)
1000884c:	dc800217 	ldw	r18,8(sp)
10008850:	dc400117 	ldw	r17,4(sp)
10008854:	dc000017 	ldw	r16,0(sp)
10008858:	dec00604 	addi	sp,sp,24
1000885c:	f800283a 	ret
10008860:	113ffd44 	addi	r4,r2,-11
10008864:	8cc00f2e 	bgeu	r17,r19,100088a4 <__b2d+0xe4>
10008868:	81bffe04 	addi	r6,r16,-8
1000886c:	817ffe17 	ldw	r5,-8(r16)
10008870:	20001326 	beq	r4,zero,100088c0 <__b2d+0x100>
10008874:	00c00ac4 	movi	r3,43
10008878:	1885c83a 	sub	r2,r3,r2
1000887c:	2886d83a 	srl	r3,r5,r2
10008880:	9124983a 	sll	r18,r18,r4
10008884:	90e4b03a 	or	r18,r18,r3
10008888:	90cffc34 	orhi	r3,r18,16368
1000888c:	8980112e 	bgeu	r17,r6,100088d4 <__b2d+0x114>
10008890:	81bffd17 	ldw	r6,-12(r16)
10008894:	308cd83a 	srl	r6,r6,r2
10008898:	2904983a 	sll	r2,r5,r4
1000889c:	1184b03a 	or	r2,r2,r6
100088a0:	003fe706 	br	10008840 <__alt_data_end+0xf8008840>
100088a4:	20000526 	beq	r4,zero,100088bc <__b2d+0xfc>
100088a8:	9124983a 	sll	r18,r18,r4
100088ac:	000d883a 	mov	r6,zero
100088b0:	000b883a 	mov	r5,zero
100088b4:	90cffc34 	orhi	r3,r18,16368
100088b8:	003ff706 	br	10008898 <__alt_data_end+0xf8008898>
100088bc:	000b883a 	mov	r5,zero
100088c0:	90cffc34 	orhi	r3,r18,16368
100088c4:	2805883a 	mov	r2,r5
100088c8:	003fdd06 	br	10008840 <__alt_data_end+0xf8008840>
100088cc:	000b883a 	mov	r5,zero
100088d0:	003fd806 	br	10008834 <__alt_data_end+0xf8008834>
100088d4:	000d883a 	mov	r6,zero
100088d8:	003fef06 	br	10008898 <__alt_data_end+0xf8008898>

100088dc <__d2b>:
100088dc:	defff704 	addi	sp,sp,-36
100088e0:	dc000215 	stw	r16,8(sp)
100088e4:	3021883a 	mov	r16,r6
100088e8:	dc400315 	stw	r17,12(sp)
100088ec:	8022907a 	slli	r17,r16,1
100088f0:	dd400715 	stw	r21,28(sp)
100088f4:	282b883a 	mov	r21,r5
100088f8:	01400044 	movi	r5,1
100088fc:	dd000615 	stw	r20,24(sp)
10008900:	dcc00515 	stw	r19,20(sp)
10008904:	dc800415 	stw	r18,16(sp)
10008908:	dfc00815 	stw	ra,32(sp)
1000890c:	3829883a 	mov	r20,r7
10008910:	dc800917 	ldw	r18,36(sp)
10008914:	8822d57a 	srli	r17,r17,21
10008918:	0007bec0 	call	10007bec <_Balloc>
1000891c:	1027883a 	mov	r19,r2
10008920:	00800434 	movhi	r2,16
10008924:	10bfffc4 	addi	r2,r2,-1
10008928:	808c703a 	and	r6,r16,r2
1000892c:	88000126 	beq	r17,zero,10008934 <__d2b+0x58>
10008930:	31800434 	orhi	r6,r6,16
10008934:	d9800015 	stw	r6,0(sp)
10008938:	a8001f26 	beq	r21,zero,100089b8 <__d2b+0xdc>
1000893c:	d9000104 	addi	r4,sp,4
10008940:	dd400115 	stw	r21,4(sp)
10008944:	0007f640 	call	10007f64 <__lo0bits>
10008948:	d8c00017 	ldw	r3,0(sp)
1000894c:	1000291e 	bne	r2,zero,100089f4 <__d2b+0x118>
10008950:	d9000117 	ldw	r4,4(sp)
10008954:	99000515 	stw	r4,20(r19)
10008958:	1820c03a 	cmpne	r16,r3,zero
1000895c:	84000044 	addi	r16,r16,1
10008960:	98c00615 	stw	r3,24(r19)
10008964:	9c000415 	stw	r16,16(r19)
10008968:	88001b1e 	bne	r17,zero,100089d8 <__d2b+0xfc>
1000896c:	800690ba 	slli	r3,r16,2
10008970:	10bef384 	addi	r2,r2,-1074
10008974:	a0800015 	stw	r2,0(r20)
10008978:	98c5883a 	add	r2,r19,r3
1000897c:	11000417 	ldw	r4,16(r2)
10008980:	8020917a 	slli	r16,r16,5
10008984:	0007efc0 	call	10007efc <__hi0bits>
10008988:	8085c83a 	sub	r2,r16,r2
1000898c:	90800015 	stw	r2,0(r18)
10008990:	9805883a 	mov	r2,r19
10008994:	dfc00817 	ldw	ra,32(sp)
10008998:	dd400717 	ldw	r21,28(sp)
1000899c:	dd000617 	ldw	r20,24(sp)
100089a0:	dcc00517 	ldw	r19,20(sp)
100089a4:	dc800417 	ldw	r18,16(sp)
100089a8:	dc400317 	ldw	r17,12(sp)
100089ac:	dc000217 	ldw	r16,8(sp)
100089b0:	dec00904 	addi	sp,sp,36
100089b4:	f800283a 	ret
100089b8:	d809883a 	mov	r4,sp
100089bc:	0007f640 	call	10007f64 <__lo0bits>
100089c0:	d8c00017 	ldw	r3,0(sp)
100089c4:	04000044 	movi	r16,1
100089c8:	9c000415 	stw	r16,16(r19)
100089cc:	98c00515 	stw	r3,20(r19)
100089d0:	10800804 	addi	r2,r2,32
100089d4:	883fe526 	beq	r17,zero,1000896c <__alt_data_end+0xf800896c>
100089d8:	8c7ef344 	addi	r17,r17,-1075
100089dc:	88a3883a 	add	r17,r17,r2
100089e0:	00c00d44 	movi	r3,53
100089e4:	a4400015 	stw	r17,0(r20)
100089e8:	1885c83a 	sub	r2,r3,r2
100089ec:	90800015 	stw	r2,0(r18)
100089f0:	003fe706 	br	10008990 <__alt_data_end+0xf8008990>
100089f4:	01000804 	movi	r4,32
100089f8:	2089c83a 	sub	r4,r4,r2
100089fc:	1908983a 	sll	r4,r3,r4
10008a00:	d9400117 	ldw	r5,4(sp)
10008a04:	1886d83a 	srl	r3,r3,r2
10008a08:	2148b03a 	or	r4,r4,r5
10008a0c:	99000515 	stw	r4,20(r19)
10008a10:	d8c00015 	stw	r3,0(sp)
10008a14:	003fd006 	br	10008958 <__alt_data_end+0xf8008958>

10008a18 <__ratio>:
10008a18:	defff904 	addi	sp,sp,-28
10008a1c:	dc400315 	stw	r17,12(sp)
10008a20:	2823883a 	mov	r17,r5
10008a24:	d9400104 	addi	r5,sp,4
10008a28:	dfc00615 	stw	ra,24(sp)
10008a2c:	dcc00515 	stw	r19,20(sp)
10008a30:	dc800415 	stw	r18,16(sp)
10008a34:	2027883a 	mov	r19,r4
10008a38:	dc000215 	stw	r16,8(sp)
10008a3c:	00087c00 	call	100087c0 <__b2d>
10008a40:	8809883a 	mov	r4,r17
10008a44:	d80b883a 	mov	r5,sp
10008a48:	1025883a 	mov	r18,r2
10008a4c:	1821883a 	mov	r16,r3
10008a50:	00087c00 	call	100087c0 <__b2d>
10008a54:	8a400417 	ldw	r9,16(r17)
10008a58:	9a000417 	ldw	r8,16(r19)
10008a5c:	100d883a 	mov	r6,r2
10008a60:	d8800017 	ldw	r2,0(sp)
10008a64:	4251c83a 	sub	r8,r8,r9
10008a68:	4012917a 	slli	r9,r8,5
10008a6c:	da000117 	ldw	r8,4(sp)
10008a70:	4091c83a 	sub	r8,r8,r2
10008a74:	4251883a 	add	r8,r8,r9
10008a78:	02000d0e 	bge	zero,r8,10008ab0 <__ratio+0x98>
10008a7c:	4010953a 	slli	r8,r8,20
10008a80:	4421883a 	add	r16,r8,r16
10008a84:	9009883a 	mov	r4,r18
10008a88:	800b883a 	mov	r5,r16
10008a8c:	180f883a 	mov	r7,r3
10008a90:	000c9700 	call	1000c970 <__divdf3>
10008a94:	dfc00617 	ldw	ra,24(sp)
10008a98:	dcc00517 	ldw	r19,20(sp)
10008a9c:	dc800417 	ldw	r18,16(sp)
10008aa0:	dc400317 	ldw	r17,12(sp)
10008aa4:	dc000217 	ldw	r16,8(sp)
10008aa8:	dec00704 	addi	sp,sp,28
10008aac:	f800283a 	ret
10008ab0:	4010953a 	slli	r8,r8,20
10008ab4:	1a07c83a 	sub	r3,r3,r8
10008ab8:	003ff206 	br	10008a84 <__alt_data_end+0xf8008a84>

10008abc <_mprec_log10>:
10008abc:	defffe04 	addi	sp,sp,-8
10008ac0:	dc000015 	stw	r16,0(sp)
10008ac4:	dfc00115 	stw	ra,4(sp)
10008ac8:	008005c4 	movi	r2,23
10008acc:	2021883a 	mov	r16,r4
10008ad0:	11000d0e 	bge	r2,r4,10008b08 <_mprec_log10+0x4c>
10008ad4:	0005883a 	mov	r2,zero
10008ad8:	00cffc34 	movhi	r3,16368
10008adc:	843fffc4 	addi	r16,r16,-1
10008ae0:	1009883a 	mov	r4,r2
10008ae4:	180b883a 	mov	r5,r3
10008ae8:	000d883a 	mov	r6,zero
10008aec:	01d00934 	movhi	r7,16420
10008af0:	000d5340 	call	1000d534 <__muldf3>
10008af4:	803ff91e 	bne	r16,zero,10008adc <__alt_data_end+0xf8008adc>
10008af8:	dfc00117 	ldw	ra,4(sp)
10008afc:	dc000017 	ldw	r16,0(sp)
10008b00:	dec00204 	addi	sp,sp,8
10008b04:	f800283a 	ret
10008b08:	202090fa 	slli	r16,r4,3
10008b0c:	00840074 	movhi	r2,4097
10008b10:	10804604 	addi	r2,r2,280
10008b14:	1421883a 	add	r16,r2,r16
10008b18:	80800017 	ldw	r2,0(r16)
10008b1c:	80c00117 	ldw	r3,4(r16)
10008b20:	dfc00117 	ldw	ra,4(sp)
10008b24:	dc000017 	ldw	r16,0(sp)
10008b28:	dec00204 	addi	sp,sp,8
10008b2c:	f800283a 	ret

10008b30 <__copybits>:
10008b30:	297fffc4 	addi	r5,r5,-1
10008b34:	280fd17a 	srai	r7,r5,5
10008b38:	30c00417 	ldw	r3,16(r6)
10008b3c:	30800504 	addi	r2,r6,20
10008b40:	39c00044 	addi	r7,r7,1
10008b44:	18c7883a 	add	r3,r3,r3
10008b48:	39cf883a 	add	r7,r7,r7
10008b4c:	18c7883a 	add	r3,r3,r3
10008b50:	39cf883a 	add	r7,r7,r7
10008b54:	10c7883a 	add	r3,r2,r3
10008b58:	21cf883a 	add	r7,r4,r7
10008b5c:	10c00d2e 	bgeu	r2,r3,10008b94 <__copybits+0x64>
10008b60:	200b883a 	mov	r5,r4
10008b64:	12000017 	ldw	r8,0(r2)
10008b68:	29400104 	addi	r5,r5,4
10008b6c:	10800104 	addi	r2,r2,4
10008b70:	2a3fff15 	stw	r8,-4(r5)
10008b74:	10fffb36 	bltu	r2,r3,10008b64 <__alt_data_end+0xf8008b64>
10008b78:	1985c83a 	sub	r2,r3,r6
10008b7c:	10bffac4 	addi	r2,r2,-21
10008b80:	1004d0ba 	srli	r2,r2,2
10008b84:	10800044 	addi	r2,r2,1
10008b88:	1085883a 	add	r2,r2,r2
10008b8c:	1085883a 	add	r2,r2,r2
10008b90:	2089883a 	add	r4,r4,r2
10008b94:	21c0032e 	bgeu	r4,r7,10008ba4 <__copybits+0x74>
10008b98:	20000015 	stw	zero,0(r4)
10008b9c:	21000104 	addi	r4,r4,4
10008ba0:	21fffd36 	bltu	r4,r7,10008b98 <__alt_data_end+0xf8008b98>
10008ba4:	f800283a 	ret

10008ba8 <__any_on>:
10008ba8:	20c00417 	ldw	r3,16(r4)
10008bac:	2805d17a 	srai	r2,r5,5
10008bb0:	21000504 	addi	r4,r4,20
10008bb4:	18800d0e 	bge	r3,r2,10008bec <__any_on+0x44>
10008bb8:	18c7883a 	add	r3,r3,r3
10008bbc:	18c7883a 	add	r3,r3,r3
10008bc0:	20c7883a 	add	r3,r4,r3
10008bc4:	20c0192e 	bgeu	r4,r3,10008c2c <__any_on+0x84>
10008bc8:	18bfff17 	ldw	r2,-4(r3)
10008bcc:	18ffff04 	addi	r3,r3,-4
10008bd0:	1000041e 	bne	r2,zero,10008be4 <__any_on+0x3c>
10008bd4:	20c0142e 	bgeu	r4,r3,10008c28 <__any_on+0x80>
10008bd8:	18ffff04 	addi	r3,r3,-4
10008bdc:	19400017 	ldw	r5,0(r3)
10008be0:	283ffc26 	beq	r5,zero,10008bd4 <__alt_data_end+0xf8008bd4>
10008be4:	00800044 	movi	r2,1
10008be8:	f800283a 	ret
10008bec:	10c00a0e 	bge	r2,r3,10008c18 <__any_on+0x70>
10008bf0:	1085883a 	add	r2,r2,r2
10008bf4:	1085883a 	add	r2,r2,r2
10008bf8:	294007cc 	andi	r5,r5,31
10008bfc:	2087883a 	add	r3,r4,r2
10008c00:	283ff026 	beq	r5,zero,10008bc4 <__alt_data_end+0xf8008bc4>
10008c04:	19800017 	ldw	r6,0(r3)
10008c08:	3144d83a 	srl	r2,r6,r5
10008c0c:	114a983a 	sll	r5,r2,r5
10008c10:	29bff41e 	bne	r5,r6,10008be4 <__alt_data_end+0xf8008be4>
10008c14:	003feb06 	br	10008bc4 <__alt_data_end+0xf8008bc4>
10008c18:	1085883a 	add	r2,r2,r2
10008c1c:	1085883a 	add	r2,r2,r2
10008c20:	2087883a 	add	r3,r4,r2
10008c24:	003fe706 	br	10008bc4 <__alt_data_end+0xf8008bc4>
10008c28:	f800283a 	ret
10008c2c:	0005883a 	mov	r2,zero
10008c30:	f800283a 	ret

10008c34 <_realloc_r>:
10008c34:	defff604 	addi	sp,sp,-40
10008c38:	dcc00315 	stw	r19,12(sp)
10008c3c:	dc400115 	stw	r17,4(sp)
10008c40:	dfc00915 	stw	ra,36(sp)
10008c44:	df000815 	stw	fp,32(sp)
10008c48:	ddc00715 	stw	r23,28(sp)
10008c4c:	dd800615 	stw	r22,24(sp)
10008c50:	dd400515 	stw	r21,20(sp)
10008c54:	dd000415 	stw	r20,16(sp)
10008c58:	dc800215 	stw	r18,8(sp)
10008c5c:	dc000015 	stw	r16,0(sp)
10008c60:	2827883a 	mov	r19,r5
10008c64:	3023883a 	mov	r17,r6
10008c68:	2800bf26 	beq	r5,zero,10008f68 <_realloc_r+0x334>
10008c6c:	2025883a 	mov	r18,r4
10008c70:	000ee940 	call	1000ee94 <__malloc_lock>
10008c74:	98ffff17 	ldw	r3,-4(r19)
10008c78:	01bfff04 	movi	r6,-4
10008c7c:	890002c4 	addi	r4,r17,11
10008c80:	01c00584 	movi	r7,22
10008c84:	9d7ffe04 	addi	r21,r19,-8
10008c88:	19a0703a 	and	r16,r3,r6
10008c8c:	39003f2e 	bgeu	r7,r4,10008d8c <_realloc_r+0x158>
10008c90:	053ffe04 	movi	r20,-8
10008c94:	2528703a 	and	r20,r4,r20
10008c98:	a00f883a 	mov	r7,r20
10008c9c:	a0008216 	blt	r20,zero,10008ea8 <_realloc_r+0x274>
10008ca0:	a4408136 	bltu	r20,r17,10008ea8 <_realloc_r+0x274>
10008ca4:	81c03c0e 	bge	r16,r7,10008d98 <_realloc_r+0x164>
10008ca8:	07040074 	movhi	fp,4097
10008cac:	e701ea04 	addi	fp,fp,1960
10008cb0:	e1000217 	ldw	r4,8(fp)
10008cb4:	ac05883a 	add	r2,r21,r16
10008cb8:	2080bf26 	beq	r4,r2,10008fb8 <_realloc_r+0x384>
10008cbc:	11000117 	ldw	r4,4(r2)
10008cc0:	023fff84 	movi	r8,-2
10008cc4:	2210703a 	and	r8,r4,r8
10008cc8:	1211883a 	add	r8,r2,r8
10008ccc:	41400117 	ldw	r5,4(r8)
10008cd0:	2940004c 	andi	r5,r5,1
10008cd4:	28004a1e 	bne	r5,zero,10008e00 <_realloc_r+0x1cc>
10008cd8:	017fff04 	movi	r5,-4
10008cdc:	2148703a 	and	r4,r4,r5
10008ce0:	2409883a 	add	r4,r4,r16
10008ce4:	21c0ad0e 	bge	r4,r7,10008f9c <_realloc_r+0x368>
10008ce8:	18c0004c 	andi	r3,r3,1
10008cec:	18007f1e 	bne	r3,zero,10008eec <_realloc_r+0x2b8>
10008cf0:	9dfffe17 	ldw	r23,-8(r19)
10008cf4:	adefc83a 	sub	r23,r21,r23
10008cf8:	bd800117 	ldw	r22,4(r23)
10008cfc:	b14a703a 	and	r5,r22,r5
10008d00:	216d883a 	add	r22,r4,r5
10008d04:	b1c04516 	blt	r22,r7,10008e1c <_realloc_r+0x1e8>
10008d08:	10c00317 	ldw	r3,12(r2)
10008d0c:	10800217 	ldw	r2,8(r2)
10008d10:	81bfff04 	addi	r6,r16,-4
10008d14:	bc400204 	addi	r17,r23,8
10008d18:	10c00315 	stw	r3,12(r2)
10008d1c:	18800215 	stw	r2,8(r3)
10008d20:	b9400217 	ldw	r5,8(r23)
10008d24:	b8c00317 	ldw	r3,12(r23)
10008d28:	00800904 	movi	r2,36
10008d2c:	28c00315 	stw	r3,12(r5)
10008d30:	19400215 	stw	r5,8(r3)
10008d34:	1180ef36 	bltu	r2,r6,100090f4 <_realloc_r+0x4c0>
10008d38:	008004c4 	movi	r2,19
10008d3c:	1180da2e 	bgeu	r2,r6,100090a8 <_realloc_r+0x474>
10008d40:	98800017 	ldw	r2,0(r19)
10008d44:	b8800215 	stw	r2,8(r23)
10008d48:	98800117 	ldw	r2,4(r19)
10008d4c:	b8800315 	stw	r2,12(r23)
10008d50:	008006c4 	movi	r2,27
10008d54:	1180fc2e 	bgeu	r2,r6,10009148 <_realloc_r+0x514>
10008d58:	98800217 	ldw	r2,8(r19)
10008d5c:	b8800415 	stw	r2,16(r23)
10008d60:	98800317 	ldw	r2,12(r19)
10008d64:	b8800515 	stw	r2,20(r23)
10008d68:	00800904 	movi	r2,36
10008d6c:	3080421e 	bne	r6,r2,10008e78 <_realloc_r+0x244>
10008d70:	98800417 	ldw	r2,16(r19)
10008d74:	9cc00604 	addi	r19,r19,24
10008d78:	b8c00804 	addi	r3,r23,32
10008d7c:	b8800615 	stw	r2,24(r23)
10008d80:	98bfff17 	ldw	r2,-4(r19)
10008d84:	b8800715 	stw	r2,28(r23)
10008d88:	00003d06 	br	10008e80 <_realloc_r+0x24c>
10008d8c:	01c00404 	movi	r7,16
10008d90:	3829883a 	mov	r20,r7
10008d94:	003fc206 	br	10008ca0 <__alt_data_end+0xf8008ca0>
10008d98:	9823883a 	mov	r17,r19
10008d9c:	850fc83a 	sub	r7,r16,r20
10008da0:	008003c4 	movi	r2,15
10008da4:	18c0004c 	andi	r3,r3,1
10008da8:	11c04336 	bltu	r2,r7,10008eb8 <_realloc_r+0x284>
10008dac:	1c06b03a 	or	r3,r3,r16
10008db0:	a8c00115 	stw	r3,4(r21)
10008db4:	ac21883a 	add	r16,r21,r16
10008db8:	80c00117 	ldw	r3,4(r16)
10008dbc:	18c00054 	ori	r3,r3,1
10008dc0:	80c00115 	stw	r3,4(r16)
10008dc4:	9009883a 	mov	r4,r18
10008dc8:	000eeb40 	call	1000eeb4 <__malloc_unlock>
10008dcc:	8805883a 	mov	r2,r17
10008dd0:	dfc00917 	ldw	ra,36(sp)
10008dd4:	df000817 	ldw	fp,32(sp)
10008dd8:	ddc00717 	ldw	r23,28(sp)
10008ddc:	dd800617 	ldw	r22,24(sp)
10008de0:	dd400517 	ldw	r21,20(sp)
10008de4:	dd000417 	ldw	r20,16(sp)
10008de8:	dcc00317 	ldw	r19,12(sp)
10008dec:	dc800217 	ldw	r18,8(sp)
10008df0:	dc400117 	ldw	r17,4(sp)
10008df4:	dc000017 	ldw	r16,0(sp)
10008df8:	dec00a04 	addi	sp,sp,40
10008dfc:	f800283a 	ret
10008e00:	18c0004c 	andi	r3,r3,1
10008e04:	1800391e 	bne	r3,zero,10008eec <_realloc_r+0x2b8>
10008e08:	9dfffe17 	ldw	r23,-8(r19)
10008e0c:	00bfff04 	movi	r2,-4
10008e10:	adefc83a 	sub	r23,r21,r23
10008e14:	b9400117 	ldw	r5,4(r23)
10008e18:	288a703a 	and	r5,r5,r2
10008e1c:	2c2d883a 	add	r22,r5,r16
10008e20:	b1c03216 	blt	r22,r7,10008eec <_realloc_r+0x2b8>
10008e24:	b8800317 	ldw	r2,12(r23)
10008e28:	b8c00217 	ldw	r3,8(r23)
10008e2c:	81bfff04 	addi	r6,r16,-4
10008e30:	01000904 	movi	r4,36
10008e34:	18800315 	stw	r2,12(r3)
10008e38:	10c00215 	stw	r3,8(r2)
10008e3c:	bc400204 	addi	r17,r23,8
10008e40:	2180ac36 	bltu	r4,r6,100090f4 <_realloc_r+0x4c0>
10008e44:	008004c4 	movi	r2,19
10008e48:	1180972e 	bgeu	r2,r6,100090a8 <_realloc_r+0x474>
10008e4c:	98800017 	ldw	r2,0(r19)
10008e50:	b8800215 	stw	r2,8(r23)
10008e54:	98800117 	ldw	r2,4(r19)
10008e58:	b8800315 	stw	r2,12(r23)
10008e5c:	008006c4 	movi	r2,27
10008e60:	1180b92e 	bgeu	r2,r6,10009148 <_realloc_r+0x514>
10008e64:	98800217 	ldw	r2,8(r19)
10008e68:	b8800415 	stw	r2,16(r23)
10008e6c:	98800317 	ldw	r2,12(r19)
10008e70:	b8800515 	stw	r2,20(r23)
10008e74:	313fbe26 	beq	r6,r4,10008d70 <__alt_data_end+0xf8008d70>
10008e78:	b8c00604 	addi	r3,r23,24
10008e7c:	9cc00404 	addi	r19,r19,16
10008e80:	98800017 	ldw	r2,0(r19)
10008e84:	b021883a 	mov	r16,r22
10008e88:	b82b883a 	mov	r21,r23
10008e8c:	18800015 	stw	r2,0(r3)
10008e90:	98800117 	ldw	r2,4(r19)
10008e94:	18800115 	stw	r2,4(r3)
10008e98:	98800217 	ldw	r2,8(r19)
10008e9c:	18800215 	stw	r2,8(r3)
10008ea0:	b8c00117 	ldw	r3,4(r23)
10008ea4:	003fbd06 	br	10008d9c <__alt_data_end+0xf8008d9c>
10008ea8:	00800304 	movi	r2,12
10008eac:	90800015 	stw	r2,0(r18)
10008eb0:	0005883a 	mov	r2,zero
10008eb4:	003fc606 	br	10008dd0 <__alt_data_end+0xf8008dd0>
10008eb8:	1d06b03a 	or	r3,r3,r20
10008ebc:	ad0b883a 	add	r5,r21,r20
10008ec0:	a8c00115 	stw	r3,4(r21)
10008ec4:	38800054 	ori	r2,r7,1
10008ec8:	28800115 	stw	r2,4(r5)
10008ecc:	29cf883a 	add	r7,r5,r7
10008ed0:	38800117 	ldw	r2,4(r7)
10008ed4:	9009883a 	mov	r4,r18
10008ed8:	29400204 	addi	r5,r5,8
10008edc:	10800054 	ori	r2,r2,1
10008ee0:	38800115 	stw	r2,4(r7)
10008ee4:	00064080 	call	10006408 <_free_r>
10008ee8:	003fb606 	br	10008dc4 <__alt_data_end+0xf8008dc4>
10008eec:	880b883a 	mov	r5,r17
10008ef0:	9009883a 	mov	r4,r18
10008ef4:	0006fa40 	call	10006fa4 <_malloc_r>
10008ef8:	1023883a 	mov	r17,r2
10008efc:	1000aa26 	beq	r2,zero,100091a8 <_realloc_r+0x574>
10008f00:	98ffff17 	ldw	r3,-4(r19)
10008f04:	113ffe04 	addi	r4,r2,-8
10008f08:	00bfff84 	movi	r2,-2
10008f0c:	1884703a 	and	r2,r3,r2
10008f10:	a885883a 	add	r2,r21,r2
10008f14:	20808626 	beq	r4,r2,10009130 <_realloc_r+0x4fc>
10008f18:	81bfff04 	addi	r6,r16,-4
10008f1c:	00800904 	movi	r2,36
10008f20:	11807036 	bltu	r2,r6,100090e4 <_realloc_r+0x4b0>
10008f24:	00c004c4 	movi	r3,19
10008f28:	19805636 	bltu	r3,r6,10009084 <_realloc_r+0x450>
10008f2c:	8805883a 	mov	r2,r17
10008f30:	9807883a 	mov	r3,r19
10008f34:	19000017 	ldw	r4,0(r3)
10008f38:	11000015 	stw	r4,0(r2)
10008f3c:	19000117 	ldw	r4,4(r3)
10008f40:	11000115 	stw	r4,4(r2)
10008f44:	18c00217 	ldw	r3,8(r3)
10008f48:	10c00215 	stw	r3,8(r2)
10008f4c:	980b883a 	mov	r5,r19
10008f50:	9009883a 	mov	r4,r18
10008f54:	00064080 	call	10006408 <_free_r>
10008f58:	9009883a 	mov	r4,r18
10008f5c:	000eeb40 	call	1000eeb4 <__malloc_unlock>
10008f60:	8805883a 	mov	r2,r17
10008f64:	003f9a06 	br	10008dd0 <__alt_data_end+0xf8008dd0>
10008f68:	300b883a 	mov	r5,r6
10008f6c:	dfc00917 	ldw	ra,36(sp)
10008f70:	df000817 	ldw	fp,32(sp)
10008f74:	ddc00717 	ldw	r23,28(sp)
10008f78:	dd800617 	ldw	r22,24(sp)
10008f7c:	dd400517 	ldw	r21,20(sp)
10008f80:	dd000417 	ldw	r20,16(sp)
10008f84:	dcc00317 	ldw	r19,12(sp)
10008f88:	dc800217 	ldw	r18,8(sp)
10008f8c:	dc400117 	ldw	r17,4(sp)
10008f90:	dc000017 	ldw	r16,0(sp)
10008f94:	dec00a04 	addi	sp,sp,40
10008f98:	0006fa41 	jmpi	10006fa4 <_malloc_r>
10008f9c:	11400317 	ldw	r5,12(r2)
10008fa0:	10800217 	ldw	r2,8(r2)
10008fa4:	9823883a 	mov	r17,r19
10008fa8:	2021883a 	mov	r16,r4
10008fac:	11400315 	stw	r5,12(r2)
10008fb0:	28800215 	stw	r2,8(r5)
10008fb4:	003f7906 	br	10008d9c <__alt_data_end+0xf8008d9c>
10008fb8:	21000117 	ldw	r4,4(r4)
10008fbc:	00bfff04 	movi	r2,-4
10008fc0:	a1800404 	addi	r6,r20,16
10008fc4:	2088703a 	and	r4,r4,r2
10008fc8:	2409883a 	add	r4,r4,r16
10008fcc:	2180380e 	bge	r4,r6,100090b0 <_realloc_r+0x47c>
10008fd0:	18c0004c 	andi	r3,r3,1
10008fd4:	183fc51e 	bne	r3,zero,10008eec <__alt_data_end+0xf8008eec>
10008fd8:	9dfffe17 	ldw	r23,-8(r19)
10008fdc:	adefc83a 	sub	r23,r21,r23
10008fe0:	b9400117 	ldw	r5,4(r23)
10008fe4:	288a703a 	and	r5,r5,r2
10008fe8:	216d883a 	add	r22,r4,r5
10008fec:	b1bf8b16 	blt	r22,r6,10008e1c <__alt_data_end+0xf8008e1c>
10008ff0:	b8800317 	ldw	r2,12(r23)
10008ff4:	b8c00217 	ldw	r3,8(r23)
10008ff8:	81bfff04 	addi	r6,r16,-4
10008ffc:	01000904 	movi	r4,36
10009000:	18800315 	stw	r2,12(r3)
10009004:	10c00215 	stw	r3,8(r2)
10009008:	bc400204 	addi	r17,r23,8
1000900c:	21805a36 	bltu	r4,r6,10009178 <_realloc_r+0x544>
10009010:	008004c4 	movi	r2,19
10009014:	1180562e 	bgeu	r2,r6,10009170 <_realloc_r+0x53c>
10009018:	98800017 	ldw	r2,0(r19)
1000901c:	b8800215 	stw	r2,8(r23)
10009020:	98800117 	ldw	r2,4(r19)
10009024:	b8800315 	stw	r2,12(r23)
10009028:	008006c4 	movi	r2,27
1000902c:	11805636 	bltu	r2,r6,10009188 <_realloc_r+0x554>
10009030:	b8800404 	addi	r2,r23,16
10009034:	9cc00204 	addi	r19,r19,8
10009038:	98c00017 	ldw	r3,0(r19)
1000903c:	10c00015 	stw	r3,0(r2)
10009040:	98c00117 	ldw	r3,4(r19)
10009044:	10c00115 	stw	r3,4(r2)
10009048:	98c00217 	ldw	r3,8(r19)
1000904c:	10c00215 	stw	r3,8(r2)
10009050:	bd07883a 	add	r3,r23,r20
10009054:	b505c83a 	sub	r2,r22,r20
10009058:	e0c00215 	stw	r3,8(fp)
1000905c:	10800054 	ori	r2,r2,1
10009060:	18800115 	stw	r2,4(r3)
10009064:	b8800117 	ldw	r2,4(r23)
10009068:	9009883a 	mov	r4,r18
1000906c:	1080004c 	andi	r2,r2,1
10009070:	a0a8b03a 	or	r20,r20,r2
10009074:	bd000115 	stw	r20,4(r23)
10009078:	000eeb40 	call	1000eeb4 <__malloc_unlock>
1000907c:	8805883a 	mov	r2,r17
10009080:	003f5306 	br	10008dd0 <__alt_data_end+0xf8008dd0>
10009084:	98c00017 	ldw	r3,0(r19)
10009088:	88c00015 	stw	r3,0(r17)
1000908c:	98c00117 	ldw	r3,4(r19)
10009090:	88c00115 	stw	r3,4(r17)
10009094:	00c006c4 	movi	r3,27
10009098:	19801d36 	bltu	r3,r6,10009110 <_realloc_r+0x4dc>
1000909c:	88800204 	addi	r2,r17,8
100090a0:	98c00204 	addi	r3,r19,8
100090a4:	003fa306 	br	10008f34 <__alt_data_end+0xf8008f34>
100090a8:	8807883a 	mov	r3,r17
100090ac:	003f7406 	br	10008e80 <__alt_data_end+0xf8008e80>
100090b0:	ad2b883a 	add	r21,r21,r20
100090b4:	2505c83a 	sub	r2,r4,r20
100090b8:	e5400215 	stw	r21,8(fp)
100090bc:	10800054 	ori	r2,r2,1
100090c0:	a8800115 	stw	r2,4(r21)
100090c4:	98bfff17 	ldw	r2,-4(r19)
100090c8:	9009883a 	mov	r4,r18
100090cc:	1080004c 	andi	r2,r2,1
100090d0:	a0a8b03a 	or	r20,r20,r2
100090d4:	9d3fff15 	stw	r20,-4(r19)
100090d8:	000eeb40 	call	1000eeb4 <__malloc_unlock>
100090dc:	9805883a 	mov	r2,r19
100090e0:	003f3b06 	br	10008dd0 <__alt_data_end+0xf8008dd0>
100090e4:	8809883a 	mov	r4,r17
100090e8:	980b883a 	mov	r5,r19
100090ec:	000796c0 	call	1000796c <memmove>
100090f0:	003f9606 	br	10008f4c <__alt_data_end+0xf8008f4c>
100090f4:	8809883a 	mov	r4,r17
100090f8:	980b883a 	mov	r5,r19
100090fc:	000796c0 	call	1000796c <memmove>
10009100:	b8c00117 	ldw	r3,4(r23)
10009104:	b021883a 	mov	r16,r22
10009108:	b82b883a 	mov	r21,r23
1000910c:	003f2306 	br	10008d9c <__alt_data_end+0xf8008d9c>
10009110:	98c00217 	ldw	r3,8(r19)
10009114:	88c00215 	stw	r3,8(r17)
10009118:	98c00317 	ldw	r3,12(r19)
1000911c:	88c00315 	stw	r3,12(r17)
10009120:	30800c26 	beq	r6,r2,10009154 <_realloc_r+0x520>
10009124:	88800404 	addi	r2,r17,16
10009128:	98c00404 	addi	r3,r19,16
1000912c:	003f8106 	br	10008f34 <__alt_data_end+0xf8008f34>
10009130:	893fff17 	ldw	r4,-4(r17)
10009134:	00bfff04 	movi	r2,-4
10009138:	9823883a 	mov	r17,r19
1000913c:	2084703a 	and	r2,r4,r2
10009140:	80a1883a 	add	r16,r16,r2
10009144:	003f1506 	br	10008d9c <__alt_data_end+0xf8008d9c>
10009148:	b8c00404 	addi	r3,r23,16
1000914c:	9cc00204 	addi	r19,r19,8
10009150:	003f4b06 	br	10008e80 <__alt_data_end+0xf8008e80>
10009154:	99000417 	ldw	r4,16(r19)
10009158:	88800604 	addi	r2,r17,24
1000915c:	98c00604 	addi	r3,r19,24
10009160:	89000415 	stw	r4,16(r17)
10009164:	99000517 	ldw	r4,20(r19)
10009168:	89000515 	stw	r4,20(r17)
1000916c:	003f7106 	br	10008f34 <__alt_data_end+0xf8008f34>
10009170:	8805883a 	mov	r2,r17
10009174:	003fb006 	br	10009038 <__alt_data_end+0xf8009038>
10009178:	8809883a 	mov	r4,r17
1000917c:	980b883a 	mov	r5,r19
10009180:	000796c0 	call	1000796c <memmove>
10009184:	003fb206 	br	10009050 <__alt_data_end+0xf8009050>
10009188:	98800217 	ldw	r2,8(r19)
1000918c:	b8800415 	stw	r2,16(r23)
10009190:	98800317 	ldw	r2,12(r19)
10009194:	b8800515 	stw	r2,20(r23)
10009198:	31000726 	beq	r6,r4,100091b8 <_realloc_r+0x584>
1000919c:	b8800604 	addi	r2,r23,24
100091a0:	9cc00404 	addi	r19,r19,16
100091a4:	003fa406 	br	10009038 <__alt_data_end+0xf8009038>
100091a8:	9009883a 	mov	r4,r18
100091ac:	000eeb40 	call	1000eeb4 <__malloc_unlock>
100091b0:	0005883a 	mov	r2,zero
100091b4:	003f0606 	br	10008dd0 <__alt_data_end+0xf8008dd0>
100091b8:	98c00417 	ldw	r3,16(r19)
100091bc:	9cc00604 	addi	r19,r19,24
100091c0:	b8800804 	addi	r2,r23,32
100091c4:	b8c00615 	stw	r3,24(r23)
100091c8:	98ffff17 	ldw	r3,-4(r19)
100091cc:	b8c00715 	stw	r3,28(r23)
100091d0:	003f9906 	br	10009038 <__alt_data_end+0xf8009038>

100091d4 <__fpclassifyd>:
100091d4:	00a00034 	movhi	r2,32768
100091d8:	10bfffc4 	addi	r2,r2,-1
100091dc:	2884703a 	and	r2,r5,r2
100091e0:	10000726 	beq	r2,zero,10009200 <__fpclassifyd+0x2c>
100091e4:	00fffc34 	movhi	r3,65520
100091e8:	019ff834 	movhi	r6,32736
100091ec:	28c7883a 	add	r3,r5,r3
100091f0:	31bfffc4 	addi	r6,r6,-1
100091f4:	30c00536 	bltu	r6,r3,1000920c <__fpclassifyd+0x38>
100091f8:	00800104 	movi	r2,4
100091fc:	f800283a 	ret
10009200:	2000021e 	bne	r4,zero,1000920c <__fpclassifyd+0x38>
10009204:	00800084 	movi	r2,2
10009208:	f800283a 	ret
1000920c:	00dffc34 	movhi	r3,32752
10009210:	019ff834 	movhi	r6,32736
10009214:	28cb883a 	add	r5,r5,r3
10009218:	31bfffc4 	addi	r6,r6,-1
1000921c:	317ff62e 	bgeu	r6,r5,100091f8 <__alt_data_end+0xf80091f8>
10009220:	01400434 	movhi	r5,16
10009224:	297fffc4 	addi	r5,r5,-1
10009228:	28800236 	bltu	r5,r2,10009234 <__fpclassifyd+0x60>
1000922c:	008000c4 	movi	r2,3
10009230:	f800283a 	ret
10009234:	10c00226 	beq	r2,r3,10009240 <__fpclassifyd+0x6c>
10009238:	0005883a 	mov	r2,zero
1000923c:	f800283a 	ret
10009240:	2005003a 	cmpeq	r2,r4,zero
10009244:	f800283a 	ret

10009248 <_sbrk_r>:
10009248:	defffd04 	addi	sp,sp,-12
1000924c:	dc000015 	stw	r16,0(sp)
10009250:	04040074 	movhi	r16,4097
10009254:	dc400115 	stw	r17,4(sp)
10009258:	84060a04 	addi	r16,r16,6184
1000925c:	2023883a 	mov	r17,r4
10009260:	2809883a 	mov	r4,r5
10009264:	dfc00215 	stw	ra,8(sp)
10009268:	80000015 	stw	zero,0(r16)
1000926c:	000f0a80 	call	1000f0a8 <sbrk>
10009270:	00ffffc4 	movi	r3,-1
10009274:	10c00526 	beq	r2,r3,1000928c <_sbrk_r+0x44>
10009278:	dfc00217 	ldw	ra,8(sp)
1000927c:	dc400117 	ldw	r17,4(sp)
10009280:	dc000017 	ldw	r16,0(sp)
10009284:	dec00304 	addi	sp,sp,12
10009288:	f800283a 	ret
1000928c:	80c00017 	ldw	r3,0(r16)
10009290:	183ff926 	beq	r3,zero,10009278 <__alt_data_end+0xf8009278>
10009294:	88c00015 	stw	r3,0(r17)
10009298:	003ff706 	br	10009278 <__alt_data_end+0xf8009278>

1000929c <__sread>:
1000929c:	defffe04 	addi	sp,sp,-8
100092a0:	dc000015 	stw	r16,0(sp)
100092a4:	2821883a 	mov	r16,r5
100092a8:	2940038f 	ldh	r5,14(r5)
100092ac:	dfc00115 	stw	ra,4(sp)
100092b0:	000af580 	call	1000af58 <_read_r>
100092b4:	10000716 	blt	r2,zero,100092d4 <__sread+0x38>
100092b8:	80c01417 	ldw	r3,80(r16)
100092bc:	1887883a 	add	r3,r3,r2
100092c0:	80c01415 	stw	r3,80(r16)
100092c4:	dfc00117 	ldw	ra,4(sp)
100092c8:	dc000017 	ldw	r16,0(sp)
100092cc:	dec00204 	addi	sp,sp,8
100092d0:	f800283a 	ret
100092d4:	80c0030b 	ldhu	r3,12(r16)
100092d8:	18fbffcc 	andi	r3,r3,61439
100092dc:	80c0030d 	sth	r3,12(r16)
100092e0:	dfc00117 	ldw	ra,4(sp)
100092e4:	dc000017 	ldw	r16,0(sp)
100092e8:	dec00204 	addi	sp,sp,8
100092ec:	f800283a 	ret

100092f0 <__seofread>:
100092f0:	0005883a 	mov	r2,zero
100092f4:	f800283a 	ret

100092f8 <__swrite>:
100092f8:	2880030b 	ldhu	r2,12(r5)
100092fc:	defffb04 	addi	sp,sp,-20
10009300:	dcc00315 	stw	r19,12(sp)
10009304:	dc800215 	stw	r18,8(sp)
10009308:	dc400115 	stw	r17,4(sp)
1000930c:	dc000015 	stw	r16,0(sp)
10009310:	dfc00415 	stw	ra,16(sp)
10009314:	10c0400c 	andi	r3,r2,256
10009318:	2821883a 	mov	r16,r5
1000931c:	2027883a 	mov	r19,r4
10009320:	3025883a 	mov	r18,r6
10009324:	3823883a 	mov	r17,r7
10009328:	18000526 	beq	r3,zero,10009340 <__swrite+0x48>
1000932c:	2940038f 	ldh	r5,14(r5)
10009330:	000d883a 	mov	r6,zero
10009334:	01c00084 	movi	r7,2
10009338:	000aefc0 	call	1000aefc <_lseek_r>
1000933c:	8080030b 	ldhu	r2,12(r16)
10009340:	8140038f 	ldh	r5,14(r16)
10009344:	10bbffcc 	andi	r2,r2,61439
10009348:	9809883a 	mov	r4,r19
1000934c:	900d883a 	mov	r6,r18
10009350:	880f883a 	mov	r7,r17
10009354:	8080030d 	sth	r2,12(r16)
10009358:	dfc00417 	ldw	ra,16(sp)
1000935c:	dcc00317 	ldw	r19,12(sp)
10009360:	dc800217 	ldw	r18,8(sp)
10009364:	dc400117 	ldw	r17,4(sp)
10009368:	dc000017 	ldw	r16,0(sp)
1000936c:	dec00504 	addi	sp,sp,20
10009370:	000a9d81 	jmpi	1000a9d8 <_write_r>

10009374 <__sseek>:
10009374:	defffe04 	addi	sp,sp,-8
10009378:	dc000015 	stw	r16,0(sp)
1000937c:	2821883a 	mov	r16,r5
10009380:	2940038f 	ldh	r5,14(r5)
10009384:	dfc00115 	stw	ra,4(sp)
10009388:	000aefc0 	call	1000aefc <_lseek_r>
1000938c:	00ffffc4 	movi	r3,-1
10009390:	10c00826 	beq	r2,r3,100093b4 <__sseek+0x40>
10009394:	80c0030b 	ldhu	r3,12(r16)
10009398:	80801415 	stw	r2,80(r16)
1000939c:	18c40014 	ori	r3,r3,4096
100093a0:	80c0030d 	sth	r3,12(r16)
100093a4:	dfc00117 	ldw	ra,4(sp)
100093a8:	dc000017 	ldw	r16,0(sp)
100093ac:	dec00204 	addi	sp,sp,8
100093b0:	f800283a 	ret
100093b4:	80c0030b 	ldhu	r3,12(r16)
100093b8:	18fbffcc 	andi	r3,r3,61439
100093bc:	80c0030d 	sth	r3,12(r16)
100093c0:	dfc00117 	ldw	ra,4(sp)
100093c4:	dc000017 	ldw	r16,0(sp)
100093c8:	dec00204 	addi	sp,sp,8
100093cc:	f800283a 	ret

100093d0 <__sclose>:
100093d0:	2940038f 	ldh	r5,14(r5)
100093d4:	000aa341 	jmpi	1000aa34 <_close_r>

100093d8 <strcmp>:
100093d8:	2144b03a 	or	r2,r4,r5
100093dc:	108000cc 	andi	r2,r2,3
100093e0:	1000171e 	bne	r2,zero,10009440 <strcmp+0x68>
100093e4:	20800017 	ldw	r2,0(r4)
100093e8:	28c00017 	ldw	r3,0(r5)
100093ec:	10c0141e 	bne	r2,r3,10009440 <strcmp+0x68>
100093f0:	027fbff4 	movhi	r9,65279
100093f4:	4a7fbfc4 	addi	r9,r9,-257
100093f8:	0086303a 	nor	r3,zero,r2
100093fc:	02202074 	movhi	r8,32897
10009400:	1245883a 	add	r2,r2,r9
10009404:	42202004 	addi	r8,r8,-32640
10009408:	10c4703a 	and	r2,r2,r3
1000940c:	1204703a 	and	r2,r2,r8
10009410:	10000226 	beq	r2,zero,1000941c <strcmp+0x44>
10009414:	00001706 	br	10009474 <strcmp+0x9c>
10009418:	1000161e 	bne	r2,zero,10009474 <strcmp+0x9c>
1000941c:	21000104 	addi	r4,r4,4
10009420:	20c00017 	ldw	r3,0(r4)
10009424:	29400104 	addi	r5,r5,4
10009428:	29800017 	ldw	r6,0(r5)
1000942c:	1a4f883a 	add	r7,r3,r9
10009430:	00c4303a 	nor	r2,zero,r3
10009434:	3884703a 	and	r2,r7,r2
10009438:	1204703a 	and	r2,r2,r8
1000943c:	19bff626 	beq	r3,r6,10009418 <__alt_data_end+0xf8009418>
10009440:	20800007 	ldb	r2,0(r4)
10009444:	1000051e 	bne	r2,zero,1000945c <strcmp+0x84>
10009448:	00000606 	br	10009464 <strcmp+0x8c>
1000944c:	21000044 	addi	r4,r4,1
10009450:	20800007 	ldb	r2,0(r4)
10009454:	29400044 	addi	r5,r5,1
10009458:	10000226 	beq	r2,zero,10009464 <strcmp+0x8c>
1000945c:	28c00007 	ldb	r3,0(r5)
10009460:	10fffa26 	beq	r2,r3,1000944c <__alt_data_end+0xf800944c>
10009464:	20800003 	ldbu	r2,0(r4)
10009468:	28c00003 	ldbu	r3,0(r5)
1000946c:	10c5c83a 	sub	r2,r2,r3
10009470:	f800283a 	ret
10009474:	0005883a 	mov	r2,zero
10009478:	f800283a 	ret

1000947c <__sprint_r.part.0>:
1000947c:	28801917 	ldw	r2,100(r5)
10009480:	defff604 	addi	sp,sp,-40
10009484:	dd400515 	stw	r21,20(sp)
10009488:	dcc00315 	stw	r19,12(sp)
1000948c:	dfc00915 	stw	ra,36(sp)
10009490:	df000815 	stw	fp,32(sp)
10009494:	ddc00715 	stw	r23,28(sp)
10009498:	dd800615 	stw	r22,24(sp)
1000949c:	dd000415 	stw	r20,16(sp)
100094a0:	dc800215 	stw	r18,8(sp)
100094a4:	dc400115 	stw	r17,4(sp)
100094a8:	dc000015 	stw	r16,0(sp)
100094ac:	1088000c 	andi	r2,r2,8192
100094b0:	2827883a 	mov	r19,r5
100094b4:	302b883a 	mov	r21,r6
100094b8:	10002d26 	beq	r2,zero,10009570 <__sprint_r.part.0+0xf4>
100094bc:	30800217 	ldw	r2,8(r6)
100094c0:	35800017 	ldw	r22,0(r6)
100094c4:	10002826 	beq	r2,zero,10009568 <__sprint_r.part.0+0xec>
100094c8:	2029883a 	mov	r20,r4
100094cc:	b5c00104 	addi	r23,r22,4
100094d0:	04bfffc4 	movi	r18,-1
100094d4:	bc400017 	ldw	r17,0(r23)
100094d8:	b4000017 	ldw	r16,0(r22)
100094dc:	0039883a 	mov	fp,zero
100094e0:	8822d0ba 	srli	r17,r17,2
100094e4:	04400316 	blt	zero,r17,100094f4 <__sprint_r.part.0+0x78>
100094e8:	00001706 	br	10009548 <__sprint_r.part.0+0xcc>
100094ec:	84000104 	addi	r16,r16,4
100094f0:	8f001526 	beq	r17,fp,10009548 <__sprint_r.part.0+0xcc>
100094f4:	81400017 	ldw	r5,0(r16)
100094f8:	a009883a 	mov	r4,r20
100094fc:	980d883a 	mov	r6,r19
10009500:	000ac740 	call	1000ac74 <_fputwc_r>
10009504:	e7000044 	addi	fp,fp,1
10009508:	14bff81e 	bne	r2,r18,100094ec <__alt_data_end+0xf80094ec>
1000950c:	9005883a 	mov	r2,r18
10009510:	a8000215 	stw	zero,8(r21)
10009514:	a8000115 	stw	zero,4(r21)
10009518:	dfc00917 	ldw	ra,36(sp)
1000951c:	df000817 	ldw	fp,32(sp)
10009520:	ddc00717 	ldw	r23,28(sp)
10009524:	dd800617 	ldw	r22,24(sp)
10009528:	dd400517 	ldw	r21,20(sp)
1000952c:	dd000417 	ldw	r20,16(sp)
10009530:	dcc00317 	ldw	r19,12(sp)
10009534:	dc800217 	ldw	r18,8(sp)
10009538:	dc400117 	ldw	r17,4(sp)
1000953c:	dc000017 	ldw	r16,0(sp)
10009540:	dec00a04 	addi	sp,sp,40
10009544:	f800283a 	ret
10009548:	a8c00217 	ldw	r3,8(r21)
1000954c:	8c63883a 	add	r17,r17,r17
10009550:	8c63883a 	add	r17,r17,r17
10009554:	1c45c83a 	sub	r2,r3,r17
10009558:	a8800215 	stw	r2,8(r21)
1000955c:	b5800204 	addi	r22,r22,8
10009560:	bdc00204 	addi	r23,r23,8
10009564:	103fdb1e 	bne	r2,zero,100094d4 <__alt_data_end+0xf80094d4>
10009568:	0005883a 	mov	r2,zero
1000956c:	003fe806 	br	10009510 <__alt_data_end+0xf8009510>
10009570:	00066f80 	call	100066f8 <__sfvwrite_r>
10009574:	003fe606 	br	10009510 <__alt_data_end+0xf8009510>

10009578 <__sprint_r>:
10009578:	30c00217 	ldw	r3,8(r6)
1000957c:	18000126 	beq	r3,zero,10009584 <__sprint_r+0xc>
10009580:	000947c1 	jmpi	1000947c <__sprint_r.part.0>
10009584:	30000115 	stw	zero,4(r6)
10009588:	0005883a 	mov	r2,zero
1000958c:	f800283a 	ret

10009590 <___vfiprintf_internal_r>:
10009590:	defeca04 	addi	sp,sp,-1240
10009594:	dcc12f15 	stw	r19,1212(sp)
10009598:	dfc13515 	stw	ra,1236(sp)
1000959c:	df013415 	stw	fp,1232(sp)
100095a0:	ddc13315 	stw	r23,1228(sp)
100095a4:	dd813215 	stw	r22,1224(sp)
100095a8:	dd413115 	stw	r21,1220(sp)
100095ac:	dd013015 	stw	r20,1216(sp)
100095b0:	dc812e15 	stw	r18,1208(sp)
100095b4:	dc412d15 	stw	r17,1204(sp)
100095b8:	dc012c15 	stw	r16,1200(sp)
100095bc:	d9012115 	stw	r4,1156(sp)
100095c0:	d9412015 	stw	r5,1152(sp)
100095c4:	d9c12315 	stw	r7,1164(sp)
100095c8:	3027883a 	mov	r19,r6
100095cc:	20000226 	beq	r4,zero,100095d8 <___vfiprintf_internal_r+0x48>
100095d0:	20800e17 	ldw	r2,56(r4)
100095d4:	1000f726 	beq	r2,zero,100099b4 <___vfiprintf_internal_r+0x424>
100095d8:	d8812017 	ldw	r2,1152(sp)
100095dc:	10c0030b 	ldhu	r3,12(r2)
100095e0:	1908000c 	andi	r4,r3,8192
100095e4:	1805883a 	mov	r2,r3
100095e8:	2000081e 	bne	r4,zero,1000960c <___vfiprintf_internal_r+0x7c>
100095ec:	d9412017 	ldw	r5,1152(sp)
100095f0:	18880014 	ori	r2,r3,8192
100095f4:	00f7ffc4 	movi	r3,-8193
100095f8:	29001917 	ldw	r4,100(r5)
100095fc:	2880030d 	sth	r2,12(r5)
10009600:	20c8703a 	and	r4,r4,r3
10009604:	29001915 	stw	r4,100(r5)
10009608:	1007883a 	mov	r3,r2
1000960c:	1100020c 	andi	r4,r2,8
10009610:	2000a726 	beq	r4,zero,100098b0 <___vfiprintf_internal_r+0x320>
10009614:	d9412017 	ldw	r5,1152(sp)
10009618:	29000417 	ldw	r4,16(r5)
1000961c:	2000a426 	beq	r4,zero,100098b0 <___vfiprintf_internal_r+0x320>
10009620:	1080068c 	andi	r2,r2,26
10009624:	01000284 	movi	r4,10
10009628:	1100ab26 	beq	r2,r4,100098d8 <___vfiprintf_internal_r+0x348>
1000962c:	d9010a04 	addi	r4,sp,1064
10009630:	d94109c4 	addi	r5,sp,1063
10009634:	07040074 	movhi	fp,4097
10009638:	04440074 	movhi	r17,4097
1000963c:	2145c83a 	sub	r2,r4,r5
10009640:	e7007c04 	addi	fp,fp,496
10009644:	8c407804 	addi	r17,r17,480
10009648:	d9011e15 	stw	r4,1144(sp)
1000964c:	d9411f15 	stw	r5,1148(sp)
10009650:	dec11a15 	stw	sp,1128(sp)
10009654:	d8011c15 	stw	zero,1136(sp)
10009658:	d8011b15 	stw	zero,1132(sp)
1000965c:	d8012715 	stw	zero,1180(sp)
10009660:	d8012515 	stw	zero,1172(sp)
10009664:	d811883a 	mov	r8,sp
10009668:	d8812815 	stw	r2,1184(sp)
1000966c:	982f883a 	mov	r23,r19
10009670:	b8800007 	ldb	r2,0(r23)
10009674:	1003b026 	beq	r2,zero,1000a538 <___vfiprintf_internal_r+0xfa8>
10009678:	01000944 	movi	r4,37
1000967c:	1103ae26 	beq	r2,r4,1000a538 <___vfiprintf_internal_r+0xfa8>
10009680:	b805883a 	mov	r2,r23
10009684:	00000106 	br	1000968c <___vfiprintf_internal_r+0xfc>
10009688:	19000326 	beq	r3,r4,10009698 <___vfiprintf_internal_r+0x108>
1000968c:	10800044 	addi	r2,r2,1
10009690:	10c00007 	ldb	r3,0(r2)
10009694:	183ffc1e 	bne	r3,zero,10009688 <__alt_data_end+0xf8009688>
10009698:	15e1c83a 	sub	r16,r2,r23
1000969c:	1029883a 	mov	r20,r2
100096a0:	80001026 	beq	r16,zero,100096e4 <___vfiprintf_internal_r+0x154>
100096a4:	d8c11c17 	ldw	r3,1136(sp)
100096a8:	d8811b17 	ldw	r2,1132(sp)
100096ac:	45c00015 	stw	r23,0(r8)
100096b0:	80c7883a 	add	r3,r16,r3
100096b4:	10800044 	addi	r2,r2,1
100096b8:	44000115 	stw	r16,4(r8)
100096bc:	d8c11c15 	stw	r3,1136(sp)
100096c0:	d8811b15 	stw	r2,1132(sp)
100096c4:	010001c4 	movi	r4,7
100096c8:	2080740e 	bge	r4,r2,1000989c <___vfiprintf_internal_r+0x30c>
100096cc:	1803a71e 	bne	r3,zero,1000a56c <___vfiprintf_internal_r+0xfdc>
100096d0:	d8c12517 	ldw	r3,1172(sp)
100096d4:	d8011b15 	stw	zero,1132(sp)
100096d8:	d811883a 	mov	r8,sp
100096dc:	1c07883a 	add	r3,r3,r16
100096e0:	d8c12515 	stw	r3,1172(sp)
100096e4:	a0800007 	ldb	r2,0(r20)
100096e8:	1002bf26 	beq	r2,zero,1000a1e8 <___vfiprintf_internal_r+0xc58>
100096ec:	a5c00044 	addi	r23,r20,1
100096f0:	a1800047 	ldb	r6,1(r20)
100096f4:	d8011d85 	stb	zero,1142(sp)
100096f8:	d8012205 	stb	zero,1160(sp)
100096fc:	043fffc4 	movi	r16,-1
10009700:	d8012415 	stw	zero,1168(sp)
10009704:	0025883a 	mov	r18,zero
10009708:	05001604 	movi	r20,88
1000970c:	05400244 	movi	r21,9
10009710:	4027883a 	mov	r19,r8
10009714:	bdc00044 	addi	r23,r23,1
10009718:	30bff804 	addi	r2,r6,-32
1000971c:	a0825636 	bltu	r20,r2,1000a078 <___vfiprintf_internal_r+0xae8>
10009720:	100490ba 	slli	r2,r2,2
10009724:	01040074 	movhi	r4,4097
10009728:	2125ce04 	addi	r4,r4,-26824
1000972c:	1105883a 	add	r2,r2,r4
10009730:	10800017 	ldw	r2,0(r2)
10009734:	1000683a 	jmp	r2
10009738:	1000a008 	cmpgei	zero,r2,640
1000973c:	1000a078 	rdprs	zero,r2,641
10009740:	1000a078 	rdprs	zero,r2,641
10009744:	1000a06c 	andhi	zero,r2,641
10009748:	1000a078 	rdprs	zero,r2,641
1000974c:	1000a078 	rdprs	zero,r2,641
10009750:	1000a078 	rdprs	zero,r2,641
10009754:	1000a078 	rdprs	zero,r2,641
10009758:	1000a078 	rdprs	zero,r2,641
1000975c:	1000a078 	rdprs	zero,r2,641
10009760:	10009df8 	rdprs	zero,r2,631
10009764:	1000a020 	cmpeqi	zero,r2,640
10009768:	1000a078 	rdprs	zero,r2,641
1000976c:	100099cc 	andi	zero,r2,615
10009770:	10009e1c 	xori	zero,r2,632
10009774:	1000a078 	rdprs	zero,r2,641
10009778:	100099d8 	cmpnei	zero,r2,615
1000977c:	100099e4 	muli	zero,r2,615
10009780:	100099e4 	muli	zero,r2,615
10009784:	100099e4 	muli	zero,r2,615
10009788:	100099e4 	muli	zero,r2,615
1000978c:	100099e4 	muli	zero,r2,615
10009790:	100099e4 	muli	zero,r2,615
10009794:	100099e4 	muli	zero,r2,615
10009798:	100099e4 	muli	zero,r2,615
1000979c:	100099e4 	muli	zero,r2,615
100097a0:	1000a078 	rdprs	zero,r2,641
100097a4:	1000a078 	rdprs	zero,r2,641
100097a8:	1000a078 	rdprs	zero,r2,641
100097ac:	1000a078 	rdprs	zero,r2,641
100097b0:	1000a078 	rdprs	zero,r2,641
100097b4:	1000a078 	rdprs	zero,r2,641
100097b8:	1000a078 	rdprs	zero,r2,641
100097bc:	1000a078 	rdprs	zero,r2,641
100097c0:	1000a078 	rdprs	zero,r2,641
100097c4:	1000a078 	rdprs	zero,r2,641
100097c8:	10009a24 	muli	zero,r2,616
100097cc:	1000a078 	rdprs	zero,r2,641
100097d0:	1000a078 	rdprs	zero,r2,641
100097d4:	1000a078 	rdprs	zero,r2,641
100097d8:	1000a078 	rdprs	zero,r2,641
100097dc:	1000a078 	rdprs	zero,r2,641
100097e0:	1000a078 	rdprs	zero,r2,641
100097e4:	1000a078 	rdprs	zero,r2,641
100097e8:	1000a078 	rdprs	zero,r2,641
100097ec:	1000a078 	rdprs	zero,r2,641
100097f0:	1000a078 	rdprs	zero,r2,641
100097f4:	10009d14 	ori	zero,r2,628
100097f8:	1000a078 	rdprs	zero,r2,641
100097fc:	1000a078 	rdprs	zero,r2,641
10009800:	1000a078 	rdprs	zero,r2,641
10009804:	1000a078 	rdprs	zero,r2,641
10009808:	1000a078 	rdprs	zero,r2,641
1000980c:	10009d54 	ori	zero,r2,629
10009810:	1000a078 	rdprs	zero,r2,641
10009814:	1000a078 	rdprs	zero,r2,641
10009818:	10009d98 	cmpnei	zero,r2,630
1000981c:	1000a078 	rdprs	zero,r2,641
10009820:	1000a078 	rdprs	zero,r2,641
10009824:	1000a078 	rdprs	zero,r2,641
10009828:	1000a078 	rdprs	zero,r2,641
1000982c:	1000a078 	rdprs	zero,r2,641
10009830:	1000a078 	rdprs	zero,r2,641
10009834:	1000a078 	rdprs	zero,r2,641
10009838:	1000a078 	rdprs	zero,r2,641
1000983c:	1000a078 	rdprs	zero,r2,641
10009840:	1000a078 	rdprs	zero,r2,641
10009844:	10009ce0 	cmpeqi	zero,r2,627
10009848:	1000a030 	cmpltui	zero,r2,640
1000984c:	1000a078 	rdprs	zero,r2,641
10009850:	1000a078 	rdprs	zero,r2,641
10009854:	1000a078 	rdprs	zero,r2,641
10009858:	10009e6c 	andhi	zero,r2,633
1000985c:	1000a030 	cmpltui	zero,r2,640
10009860:	1000a078 	rdprs	zero,r2,641
10009864:	1000a078 	rdprs	zero,r2,641
10009868:	10009d84 	addi	zero,r2,630
1000986c:	1000a078 	rdprs	zero,r2,641
10009870:	10009fd0 	cmplti	zero,r2,639
10009874:	10009f58 	cmpnei	zero,r2,637
10009878:	10009f8c 	andi	zero,r2,638
1000987c:	10009e78 	rdprs	zero,r2,633
10009880:	1000a078 	rdprs	zero,r2,641
10009884:	10009e84 	addi	zero,r2,634
10009888:	1000a078 	rdprs	zero,r2,641
1000988c:	10009ee0 	cmpeqi	zero,r2,635
10009890:	1000a078 	rdprs	zero,r2,641
10009894:	1000a078 	rdprs	zero,r2,641
10009898:	10009f14 	ori	zero,r2,636
1000989c:	42000204 	addi	r8,r8,8
100098a0:	d8c12517 	ldw	r3,1172(sp)
100098a4:	1c07883a 	add	r3,r3,r16
100098a8:	d8c12515 	stw	r3,1172(sp)
100098ac:	003f8d06 	br	100096e4 <__alt_data_end+0xf80096e4>
100098b0:	d9012117 	ldw	r4,1156(sp)
100098b4:	d9412017 	ldw	r5,1152(sp)
100098b8:	00042580 	call	10004258 <__swsetup_r>
100098bc:	1000301e 	bne	r2,zero,10009980 <___vfiprintf_internal_r+0x3f0>
100098c0:	d8812017 	ldw	r2,1152(sp)
100098c4:	01000284 	movi	r4,10
100098c8:	10c0030b 	ldhu	r3,12(r2)
100098cc:	1805883a 	mov	r2,r3
100098d0:	1080068c 	andi	r2,r2,26
100098d4:	113f551e 	bne	r2,r4,1000962c <__alt_data_end+0xf800962c>
100098d8:	d9012017 	ldw	r4,1152(sp)
100098dc:	2080038b 	ldhu	r2,14(r4)
100098e0:	113fffcc 	andi	r4,r2,65535
100098e4:	2120001c 	xori	r4,r4,32768
100098e8:	21200004 	addi	r4,r4,-32768
100098ec:	203f4f16 	blt	r4,zero,1000962c <__alt_data_end+0xf800962c>
100098f0:	d9412017 	ldw	r5,1152(sp)
100098f4:	d9012117 	ldw	r4,1156(sp)
100098f8:	d9c12317 	ldw	r7,1164(sp)
100098fc:	2b001917 	ldw	r12,100(r5)
10009900:	2ac00717 	ldw	r11,28(r5)
10009904:	2a800917 	ldw	r10,36(r5)
10009908:	02010004 	movi	r8,1024
1000990c:	18ffff4c 	andi	r3,r3,65533
10009910:	da0b883a 	add	r5,sp,r8
10009914:	980d883a 	mov	r6,r19
10009918:	d8c1030d 	sth	r3,1036(sp)
1000991c:	db011915 	stw	r12,1124(sp)
10009920:	d881038d 	sth	r2,1038(sp)
10009924:	dac10715 	stw	r11,1052(sp)
10009928:	da810915 	stw	r10,1060(sp)
1000992c:	dec10015 	stw	sp,1024(sp)
10009930:	dec10415 	stw	sp,1040(sp)
10009934:	da010215 	stw	r8,1032(sp)
10009938:	da010515 	stw	r8,1044(sp)
1000993c:	d8010615 	stw	zero,1048(sp)
10009940:	00095900 	call	10009590 <___vfiprintf_internal_r>
10009944:	1021883a 	mov	r16,r2
10009948:	10000416 	blt	r2,zero,1000995c <___vfiprintf_internal_r+0x3cc>
1000994c:	d9012117 	ldw	r4,1156(sp)
10009950:	d9410004 	addi	r5,sp,1024
10009954:	0005cd80 	call	10005cd8 <_fflush_r>
10009958:	10040f1e 	bne	r2,zero,1000a998 <___vfiprintf_internal_r+0x1408>
1000995c:	d881030b 	ldhu	r2,1036(sp)
10009960:	1080100c 	andi	r2,r2,64
10009964:	10000426 	beq	r2,zero,10009978 <___vfiprintf_internal_r+0x3e8>
10009968:	d8c12017 	ldw	r3,1152(sp)
1000996c:	1880030b 	ldhu	r2,12(r3)
10009970:	10801014 	ori	r2,r2,64
10009974:	1880030d 	sth	r2,12(r3)
10009978:	8005883a 	mov	r2,r16
1000997c:	00000106 	br	10009984 <___vfiprintf_internal_r+0x3f4>
10009980:	00bfffc4 	movi	r2,-1
10009984:	dfc13517 	ldw	ra,1236(sp)
10009988:	df013417 	ldw	fp,1232(sp)
1000998c:	ddc13317 	ldw	r23,1228(sp)
10009990:	dd813217 	ldw	r22,1224(sp)
10009994:	dd413117 	ldw	r21,1220(sp)
10009998:	dd013017 	ldw	r20,1216(sp)
1000999c:	dcc12f17 	ldw	r19,1212(sp)
100099a0:	dc812e17 	ldw	r18,1208(sp)
100099a4:	dc412d17 	ldw	r17,1204(sp)
100099a8:	dc012c17 	ldw	r16,1200(sp)
100099ac:	dec13604 	addi	sp,sp,1240
100099b0:	f800283a 	ret
100099b4:	00062940 	call	10006294 <__sinit>
100099b8:	003f0706 	br	100095d8 <__alt_data_end+0xf80095d8>
100099bc:	d8c12417 	ldw	r3,1168(sp)
100099c0:	d8812315 	stw	r2,1164(sp)
100099c4:	00c7c83a 	sub	r3,zero,r3
100099c8:	d8c12415 	stw	r3,1168(sp)
100099cc:	94800114 	ori	r18,r18,4
100099d0:	b9800007 	ldb	r6,0(r23)
100099d4:	003f4f06 	br	10009714 <__alt_data_end+0xf8009714>
100099d8:	94802014 	ori	r18,r18,128
100099dc:	b9800007 	ldb	r6,0(r23)
100099e0:	003f4c06 	br	10009714 <__alt_data_end+0xf8009714>
100099e4:	dc012615 	stw	r16,1176(sp)
100099e8:	d8012415 	stw	zero,1168(sp)
100099ec:	35bff404 	addi	r22,r6,-48
100099f0:	0009883a 	mov	r4,zero
100099f4:	b821883a 	mov	r16,r23
100099f8:	01400284 	movi	r5,10
100099fc:	000c0ac0 	call	1000c0ac <__mulsi3>
10009a00:	81800007 	ldb	r6,0(r16)
10009a04:	1589883a 	add	r4,r2,r22
10009a08:	bdc00044 	addi	r23,r23,1
10009a0c:	35bff404 	addi	r22,r6,-48
10009a10:	b821883a 	mov	r16,r23
10009a14:	adbff82e 	bgeu	r21,r22,100099f8 <__alt_data_end+0xf80099f8>
10009a18:	d9012415 	stw	r4,1168(sp)
10009a1c:	dc012617 	ldw	r16,1176(sp)
10009a20:	003f3d06 	br	10009718 <__alt_data_end+0xf8009718>
10009a24:	d8c12203 	ldbu	r3,1160(sp)
10009a28:	94800414 	ori	r18,r18,16
10009a2c:	9080080c 	andi	r2,r18,32
10009a30:	d8c11d85 	stb	r3,1142(sp)
10009a34:	9811883a 	mov	r8,r19
10009a38:	d8c12317 	ldw	r3,1164(sp)
10009a3c:	10018226 	beq	r2,zero,1000a048 <___vfiprintf_internal_r+0xab8>
10009a40:	d9012317 	ldw	r4,1164(sp)
10009a44:	18800117 	ldw	r2,4(r3)
10009a48:	1cc00017 	ldw	r19,0(r3)
10009a4c:	21000204 	addi	r4,r4,8
10009a50:	d9012315 	stw	r4,1164(sp)
10009a54:	102b883a 	mov	r21,r2
10009a58:	10030016 	blt	r2,zero,1000a65c <___vfiprintf_internal_r+0x10cc>
10009a5c:	dd811d83 	ldbu	r22,1142(sp)
10009a60:	8029883a 	mov	r20,r16
10009a64:	00800044 	movi	r2,1
10009a68:	9d46b03a 	or	r3,r19,r21
10009a6c:	80000216 	blt	r16,zero,10009a78 <___vfiprintf_internal_r+0x4e8>
10009a70:	013fdfc4 	movi	r4,-129
10009a74:	9124703a 	and	r18,r18,r4
10009a78:	1801b41e 	bne	r3,zero,1000a14c <___vfiprintf_internal_r+0xbbc>
10009a7c:	80028126 	beq	r16,zero,1000a484 <___vfiprintf_internal_r+0xef4>
10009a80:	10803fcc 	andi	r2,r2,255
10009a84:	00c00044 	movi	r3,1
10009a88:	10c1d126 	beq	r2,r3,1000a1d0 <___vfiprintf_internal_r+0xc40>
10009a8c:	00c00084 	movi	r3,2
10009a90:	10c28626 	beq	r2,r3,1000a4ac <___vfiprintf_internal_r+0xf1c>
10009a94:	d8c10a04 	addi	r3,sp,1064
10009a98:	9808d0fa 	srli	r4,r19,3
10009a9c:	a80a977a 	slli	r5,r21,29
10009aa0:	a82ad0fa 	srli	r21,r21,3
10009aa4:	9cc001cc 	andi	r19,r19,7
10009aa8:	98800c04 	addi	r2,r19,48
10009aac:	18ffffc4 	addi	r3,r3,-1
10009ab0:	2926b03a 	or	r19,r5,r4
10009ab4:	18800005 	stb	r2,0(r3)
10009ab8:	9d48b03a 	or	r4,r19,r21
10009abc:	203ff61e 	bne	r4,zero,10009a98 <__alt_data_end+0xf8009a98>
10009ac0:	9100004c 	andi	r4,r18,1
10009ac4:	d8c12215 	stw	r3,1160(sp)
10009ac8:	2002b31e 	bne	r4,zero,1000a598 <___vfiprintf_internal_r+0x1008>
10009acc:	d9411e17 	ldw	r5,1144(sp)
10009ad0:	28e9c83a 	sub	r20,r5,r3
10009ad4:	a02b883a 	mov	r21,r20
10009ad8:	a400010e 	bge	r20,r16,10009ae0 <___vfiprintf_internal_r+0x550>
10009adc:	802b883a 	mov	r21,r16
10009ae0:	b5803fcc 	andi	r22,r22,255
10009ae4:	b580201c 	xori	r22,r22,128
10009ae8:	b5bfe004 	addi	r22,r22,-128
10009aec:	b0000126 	beq	r22,zero,10009af4 <___vfiprintf_internal_r+0x564>
10009af0:	ad400044 	addi	r21,r21,1
10009af4:	9280008c 	andi	r10,r18,2
10009af8:	50000126 	beq	r10,zero,10009b00 <___vfiprintf_internal_r+0x570>
10009afc:	ad400084 	addi	r21,r21,2
10009b00:	9580210c 	andi	r22,r18,132
10009b04:	b001751e 	bne	r22,zero,1000a0dc <___vfiprintf_internal_r+0xb4c>
10009b08:	d9012417 	ldw	r4,1168(sp)
10009b0c:	2567c83a 	sub	r19,r4,r21
10009b10:	04c1720e 	bge	zero,r19,1000a0dc <___vfiprintf_internal_r+0xb4c>
10009b14:	01c00404 	movi	r7,16
10009b18:	d8c11c17 	ldw	r3,1136(sp)
10009b1c:	3cc36b0e 	bge	r7,r19,1000a8cc <___vfiprintf_internal_r+0x133c>
10009b20:	00840074 	movhi	r2,4097
10009b24:	10807c04 	addi	r2,r2,496
10009b28:	dc012915 	stw	r16,1188(sp)
10009b2c:	d9011b17 	ldw	r4,1132(sp)
10009b30:	9821883a 	mov	r16,r19
10009b34:	d8812615 	stw	r2,1176(sp)
10009b38:	030001c4 	movi	r12,7
10009b3c:	5027883a 	mov	r19,r10
10009b40:	00000506 	br	10009b58 <___vfiprintf_internal_r+0x5c8>
10009b44:	21400084 	addi	r5,r4,2
10009b48:	42000204 	addi	r8,r8,8
10009b4c:	1009883a 	mov	r4,r2
10009b50:	843ffc04 	addi	r16,r16,-16
10009b54:	3c000d0e 	bge	r7,r16,10009b8c <___vfiprintf_internal_r+0x5fc>
10009b58:	18c00404 	addi	r3,r3,16
10009b5c:	20800044 	addi	r2,r4,1
10009b60:	47000015 	stw	fp,0(r8)
10009b64:	41c00115 	stw	r7,4(r8)
10009b68:	d8c11c15 	stw	r3,1136(sp)
10009b6c:	d8811b15 	stw	r2,1132(sp)
10009b70:	60bff40e 	bge	r12,r2,10009b44 <__alt_data_end+0xf8009b44>
10009b74:	18014b1e 	bne	r3,zero,1000a0a4 <___vfiprintf_internal_r+0xb14>
10009b78:	843ffc04 	addi	r16,r16,-16
10009b7c:	0009883a 	mov	r4,zero
10009b80:	01400044 	movi	r5,1
10009b84:	d811883a 	mov	r8,sp
10009b88:	3c3ff316 	blt	r7,r16,10009b58 <__alt_data_end+0xf8009b58>
10009b8c:	9815883a 	mov	r10,r19
10009b90:	8027883a 	mov	r19,r16
10009b94:	dc012917 	ldw	r16,1188(sp)
10009b98:	d9012617 	ldw	r4,1176(sp)
10009b9c:	98c7883a 	add	r3,r19,r3
10009ba0:	44c00115 	stw	r19,4(r8)
10009ba4:	41000015 	stw	r4,0(r8)
10009ba8:	d8c11c15 	stw	r3,1136(sp)
10009bac:	d9411b15 	stw	r5,1132(sp)
10009bb0:	008001c4 	movi	r2,7
10009bb4:	11425116 	blt	r2,r5,1000a4fc <___vfiprintf_internal_r+0xf6c>
10009bb8:	d9011d87 	ldb	r4,1142(sp)
10009bbc:	42000204 	addi	r8,r8,8
10009bc0:	28800044 	addi	r2,r5,1
10009bc4:	20014a1e 	bne	r4,zero,1000a0f0 <___vfiprintf_internal_r+0xb60>
10009bc8:	50000c26 	beq	r10,zero,10009bfc <___vfiprintf_internal_r+0x66c>
10009bcc:	d9011d04 	addi	r4,sp,1140
10009bd0:	18c00084 	addi	r3,r3,2
10009bd4:	41000015 	stw	r4,0(r8)
10009bd8:	01000084 	movi	r4,2
10009bdc:	41000115 	stw	r4,4(r8)
10009be0:	d8c11c15 	stw	r3,1136(sp)
10009be4:	d8811b15 	stw	r2,1132(sp)
10009be8:	010001c4 	movi	r4,7
10009bec:	20822016 	blt	r4,r2,1000a470 <___vfiprintf_internal_r+0xee0>
10009bf0:	100b883a 	mov	r5,r2
10009bf4:	42000204 	addi	r8,r8,8
10009bf8:	10800044 	addi	r2,r2,1
10009bfc:	01002004 	movi	r4,128
10009c00:	b101de26 	beq	r22,r4,1000a37c <___vfiprintf_internal_r+0xdec>
10009c04:	8521c83a 	sub	r16,r16,r20
10009c08:	0400230e 	bge	zero,r16,10009c98 <___vfiprintf_internal_r+0x708>
10009c0c:	04c00404 	movi	r19,16
10009c10:	9c030d0e 	bge	r19,r16,1000a848 <___vfiprintf_internal_r+0x12b8>
10009c14:	00840074 	movhi	r2,4097
10009c18:	10807804 	addi	r2,r2,480
10009c1c:	d8812615 	stw	r2,1176(sp)
10009c20:	058001c4 	movi	r22,7
10009c24:	00000506 	br	10009c3c <___vfiprintf_internal_r+0x6ac>
10009c28:	28800084 	addi	r2,r5,2
10009c2c:	42000204 	addi	r8,r8,8
10009c30:	200b883a 	mov	r5,r4
10009c34:	843ffc04 	addi	r16,r16,-16
10009c38:	9c000d0e 	bge	r19,r16,10009c70 <___vfiprintf_internal_r+0x6e0>
10009c3c:	18c00404 	addi	r3,r3,16
10009c40:	29000044 	addi	r4,r5,1
10009c44:	44400015 	stw	r17,0(r8)
10009c48:	44c00115 	stw	r19,4(r8)
10009c4c:	d8c11c15 	stw	r3,1136(sp)
10009c50:	d9011b15 	stw	r4,1132(sp)
10009c54:	b13ff40e 	bge	r22,r4,10009c28 <__alt_data_end+0xf8009c28>
10009c58:	1801321e 	bne	r3,zero,1000a124 <___vfiprintf_internal_r+0xb94>
10009c5c:	843ffc04 	addi	r16,r16,-16
10009c60:	000b883a 	mov	r5,zero
10009c64:	00800044 	movi	r2,1
10009c68:	d811883a 	mov	r8,sp
10009c6c:	9c3ff316 	blt	r19,r16,10009c3c <__alt_data_end+0xf8009c3c>
10009c70:	d9012617 	ldw	r4,1176(sp)
10009c74:	1c07883a 	add	r3,r3,r16
10009c78:	44000115 	stw	r16,4(r8)
10009c7c:	41000015 	stw	r4,0(r8)
10009c80:	d8c11c15 	stw	r3,1136(sp)
10009c84:	d8811b15 	stw	r2,1132(sp)
10009c88:	010001c4 	movi	r4,7
10009c8c:	20816216 	blt	r4,r2,1000a218 <___vfiprintf_internal_r+0xc88>
10009c90:	42000204 	addi	r8,r8,8
10009c94:	10800044 	addi	r2,r2,1
10009c98:	d9012217 	ldw	r4,1160(sp)
10009c9c:	1d07883a 	add	r3,r3,r20
10009ca0:	45000115 	stw	r20,4(r8)
10009ca4:	41000015 	stw	r4,0(r8)
10009ca8:	d8c11c15 	stw	r3,1136(sp)
10009cac:	d8811b15 	stw	r2,1132(sp)
10009cb0:	010001c4 	movi	r4,7
10009cb4:	2081610e 	bge	r4,r2,1000a23c <___vfiprintf_internal_r+0xcac>
10009cb8:	1802211e 	bne	r3,zero,1000a540 <___vfiprintf_internal_r+0xfb0>
10009cbc:	d8011b15 	stw	zero,1132(sp)
10009cc0:	9480010c 	andi	r18,r18,4
10009cc4:	9002171e 	bne	r18,zero,1000a524 <___vfiprintf_internal_r+0xf94>
10009cc8:	d9412417 	ldw	r5,1168(sp)
10009ccc:	a9433716 	blt	r21,r5,1000a9ac <___vfiprintf_internal_r+0x141c>
10009cd0:	d8812517 	ldw	r2,1172(sp)
10009cd4:	1545883a 	add	r2,r2,r21
10009cd8:	d8812515 	stw	r2,1172(sp)
10009cdc:	00019a06 	br	1000a348 <___vfiprintf_internal_r+0xdb8>
10009ce0:	d8c12317 	ldw	r3,1164(sp)
10009ce4:	05400044 	movi	r21,1
10009ce8:	9811883a 	mov	r8,r19
10009cec:	18800017 	ldw	r2,0(r3)
10009cf0:	18c00104 	addi	r3,r3,4
10009cf4:	d8c12315 	stw	r3,1164(sp)
10009cf8:	d8c10004 	addi	r3,sp,1024
10009cfc:	d8011d85 	stb	zero,1142(sp)
10009d00:	d8810005 	stb	r2,1024(sp)
10009d04:	a829883a 	mov	r20,r21
10009d08:	d8c12215 	stw	r3,1160(sp)
10009d0c:	0021883a 	mov	r16,zero
10009d10:	003f7806 	br	10009af4 <__alt_data_end+0xf8009af4>
10009d14:	94800414 	ori	r18,r18,16
10009d18:	9080080c 	andi	r2,r18,32
10009d1c:	9811883a 	mov	r8,r19
10009d20:	10009026 	beq	r2,zero,10009f64 <___vfiprintf_internal_r+0x9d4>
10009d24:	d8812317 	ldw	r2,1164(sp)
10009d28:	d8c12317 	ldw	r3,1164(sp)
10009d2c:	14c00017 	ldw	r19,0(r2)
10009d30:	15400117 	ldw	r21,4(r2)
10009d34:	18c00204 	addi	r3,r3,8
10009d38:	d8c12315 	stw	r3,1164(sp)
10009d3c:	0005883a 	mov	r2,zero
10009d40:	9d46b03a 	or	r3,r19,r21
10009d44:	d8011d85 	stb	zero,1142(sp)
10009d48:	8029883a 	mov	r20,r16
10009d4c:	002d883a 	mov	r22,zero
10009d50:	003f4606 	br	10009a6c <__alt_data_end+0xf8009a6c>
10009d54:	94800414 	ori	r18,r18,16
10009d58:	9080080c 	andi	r2,r18,32
10009d5c:	9811883a 	mov	r8,r19
10009d60:	10006226 	beq	r2,zero,10009eec <___vfiprintf_internal_r+0x95c>
10009d64:	d9012317 	ldw	r4,1164(sp)
10009d68:	00800044 	movi	r2,1
10009d6c:	24c00017 	ldw	r19,0(r4)
10009d70:	25400117 	ldw	r21,4(r4)
10009d74:	21000204 	addi	r4,r4,8
10009d78:	d9012315 	stw	r4,1164(sp)
10009d7c:	9d46b03a 	or	r3,r19,r21
10009d80:	003ff006 	br	10009d44 <__alt_data_end+0xf8009d44>
10009d84:	b9800007 	ldb	r6,0(r23)
10009d88:	00801b04 	movi	r2,108
10009d8c:	3082b226 	beq	r6,r2,1000a858 <___vfiprintf_internal_r+0x12c8>
10009d90:	94800414 	ori	r18,r18,16
10009d94:	003e5f06 	br	10009714 <__alt_data_end+0xf8009714>
10009d98:	d8c12203 	ldbu	r3,1160(sp)
10009d9c:	01040074 	movhi	r4,4097
10009da0:	21001204 	addi	r4,r4,72
10009da4:	d8c11d85 	stb	r3,1142(sp)
10009da8:	d9012715 	stw	r4,1180(sp)
10009dac:	90c0080c 	andi	r3,r18,32
10009db0:	9811883a 	mov	r8,r19
10009db4:	d8812317 	ldw	r2,1164(sp)
10009db8:	18005f26 	beq	r3,zero,10009f38 <___vfiprintf_internal_r+0x9a8>
10009dbc:	d9012317 	ldw	r4,1164(sp)
10009dc0:	14c00017 	ldw	r19,0(r2)
10009dc4:	15400117 	ldw	r21,4(r2)
10009dc8:	21000204 	addi	r4,r4,8
10009dcc:	d9012315 	stw	r4,1164(sp)
10009dd0:	9080004c 	andi	r2,r18,1
10009dd4:	1001e226 	beq	r2,zero,1000a560 <___vfiprintf_internal_r+0xfd0>
10009dd8:	9d46b03a 	or	r3,r19,r21
10009ddc:	18024e26 	beq	r3,zero,1000a718 <___vfiprintf_internal_r+0x1188>
10009de0:	00800c04 	movi	r2,48
10009de4:	d8811d05 	stb	r2,1140(sp)
10009de8:	d9811d45 	stb	r6,1141(sp)
10009dec:	94800094 	ori	r18,r18,2
10009df0:	00800084 	movi	r2,2
10009df4:	003fd306 	br	10009d44 <__alt_data_end+0xf8009d44>
10009df8:	d9012317 	ldw	r4,1164(sp)
10009dfc:	d9412317 	ldw	r5,1164(sp)
10009e00:	21000017 	ldw	r4,0(r4)
10009e04:	28800104 	addi	r2,r5,4
10009e08:	d9012415 	stw	r4,1168(sp)
10009e0c:	203eeb16 	blt	r4,zero,100099bc <__alt_data_end+0xf80099bc>
10009e10:	d8812315 	stw	r2,1164(sp)
10009e14:	b9800007 	ldb	r6,0(r23)
10009e18:	003e3e06 	br	10009714 <__alt_data_end+0xf8009714>
10009e1c:	b9800007 	ldb	r6,0(r23)
10009e20:	01000a84 	movi	r4,42
10009e24:	b8800044 	addi	r2,r23,1
10009e28:	3102d226 	beq	r6,r4,1000a974 <___vfiprintf_internal_r+0x13e4>
10009e2c:	35bff404 	addi	r22,r6,-48
10009e30:	102f883a 	mov	r23,r2
10009e34:	0021883a 	mov	r16,zero
10009e38:	adbe3736 	bltu	r21,r22,10009718 <__alt_data_end+0xf8009718>
10009e3c:	0009883a 	mov	r4,zero
10009e40:	01400284 	movi	r5,10
10009e44:	000c0ac0 	call	1000c0ac <__mulsi3>
10009e48:	b9800007 	ldb	r6,0(r23)
10009e4c:	b089883a 	add	r4,r22,r2
10009e50:	bdc00044 	addi	r23,r23,1
10009e54:	35bff404 	addi	r22,r6,-48
10009e58:	adbff92e 	bgeu	r21,r22,10009e40 <__alt_data_end+0xf8009e40>
10009e5c:	2021883a 	mov	r16,r4
10009e60:	203e2d0e 	bge	r4,zero,10009718 <__alt_data_end+0xf8009718>
10009e64:	043fffc4 	movi	r16,-1
10009e68:	003e2b06 	br	10009718 <__alt_data_end+0xf8009718>
10009e6c:	94801014 	ori	r18,r18,64
10009e70:	b9800007 	ldb	r6,0(r23)
10009e74:	003e2706 	br	10009714 <__alt_data_end+0xf8009714>
10009e78:	94800814 	ori	r18,r18,32
10009e7c:	b9800007 	ldb	r6,0(r23)
10009e80:	003e2406 	br	10009714 <__alt_data_end+0xf8009714>
10009e84:	d9412317 	ldw	r5,1164(sp)
10009e88:	d8812317 	ldw	r2,1164(sp)
10009e8c:	d8011d85 	stb	zero,1142(sp)
10009e90:	29400017 	ldw	r5,0(r5)
10009e94:	9811883a 	mov	r8,r19
10009e98:	14c00104 	addi	r19,r2,4
10009e9c:	d9412215 	stw	r5,1160(sp)
10009ea0:	28029026 	beq	r5,zero,1000a8e4 <___vfiprintf_internal_r+0x1354>
10009ea4:	d9012217 	ldw	r4,1160(sp)
10009ea8:	80027616 	blt	r16,zero,1000a884 <___vfiprintf_internal_r+0x12f4>
10009eac:	000b883a 	mov	r5,zero
10009eb0:	800d883a 	mov	r6,r16
10009eb4:	da012a15 	stw	r8,1192(sp)
10009eb8:	000774c0 	call	1000774c <memchr>
10009ebc:	da012a17 	ldw	r8,1192(sp)
10009ec0:	1002a026 	beq	r2,zero,1000a944 <___vfiprintf_internal_r+0x13b4>
10009ec4:	d8c12217 	ldw	r3,1160(sp)
10009ec8:	10e9c83a 	sub	r20,r2,r3
10009ecc:	85023816 	blt	r16,r20,1000a7b0 <___vfiprintf_internal_r+0x1220>
10009ed0:	dd811d83 	ldbu	r22,1142(sp)
10009ed4:	dcc12315 	stw	r19,1164(sp)
10009ed8:	0021883a 	mov	r16,zero
10009edc:	003efd06 	br	10009ad4 <__alt_data_end+0xf8009ad4>
10009ee0:	9080080c 	andi	r2,r18,32
10009ee4:	9811883a 	mov	r8,r19
10009ee8:	103f9e1e 	bne	r2,zero,10009d64 <__alt_data_end+0xf8009d64>
10009eec:	9080040c 	andi	r2,r18,16
10009ef0:	10021726 	beq	r2,zero,1000a750 <___vfiprintf_internal_r+0x11c0>
10009ef4:	d9412317 	ldw	r5,1164(sp)
10009ef8:	002b883a 	mov	r21,zero
10009efc:	00800044 	movi	r2,1
10009f00:	2cc00017 	ldw	r19,0(r5)
10009f04:	29400104 	addi	r5,r5,4
10009f08:	d9412315 	stw	r5,1164(sp)
10009f0c:	9807883a 	mov	r3,r19
10009f10:	003f8c06 	br	10009d44 <__alt_data_end+0xf8009d44>
10009f14:	d8c12203 	ldbu	r3,1160(sp)
10009f18:	01040074 	movhi	r4,4097
10009f1c:	21001704 	addi	r4,r4,92
10009f20:	d8c11d85 	stb	r3,1142(sp)
10009f24:	d9012715 	stw	r4,1180(sp)
10009f28:	90c0080c 	andi	r3,r18,32
10009f2c:	9811883a 	mov	r8,r19
10009f30:	d8812317 	ldw	r2,1164(sp)
10009f34:	183fa11e 	bne	r3,zero,10009dbc <__alt_data_end+0xf8009dbc>
10009f38:	90c0040c 	andi	r3,r18,16
10009f3c:	1801e526 	beq	r3,zero,1000a6d4 <___vfiprintf_internal_r+0x1144>
10009f40:	d9412317 	ldw	r5,1164(sp)
10009f44:	14c00017 	ldw	r19,0(r2)
10009f48:	002b883a 	mov	r21,zero
10009f4c:	29400104 	addi	r5,r5,4
10009f50:	d9412315 	stw	r5,1164(sp)
10009f54:	003f9e06 	br	10009dd0 <__alt_data_end+0xf8009dd0>
10009f58:	9080080c 	andi	r2,r18,32
10009f5c:	9811883a 	mov	r8,r19
10009f60:	103f701e 	bne	r2,zero,10009d24 <__alt_data_end+0xf8009d24>
10009f64:	9080040c 	andi	r2,r18,16
10009f68:	1001ef26 	beq	r2,zero,1000a728 <___vfiprintf_internal_r+0x1198>
10009f6c:	d9012317 	ldw	r4,1164(sp)
10009f70:	002b883a 	mov	r21,zero
10009f74:	0005883a 	mov	r2,zero
10009f78:	24c00017 	ldw	r19,0(r4)
10009f7c:	21000104 	addi	r4,r4,4
10009f80:	d9012315 	stw	r4,1164(sp)
10009f84:	9807883a 	mov	r3,r19
10009f88:	003f6e06 	br	10009d44 <__alt_data_end+0xf8009d44>
10009f8c:	d8c12317 	ldw	r3,1164(sp)
10009f90:	9811883a 	mov	r8,r19
10009f94:	00800c04 	movi	r2,48
10009f98:	1cc00017 	ldw	r19,0(r3)
10009f9c:	01040074 	movhi	r4,4097
10009fa0:	18c00104 	addi	r3,r3,4
10009fa4:	d8811d05 	stb	r2,1140(sp)
10009fa8:	21001704 	addi	r4,r4,92
10009fac:	00801e04 	movi	r2,120
10009fb0:	d8811d45 	stb	r2,1141(sp)
10009fb4:	d8c12315 	stw	r3,1164(sp)
10009fb8:	002b883a 	mov	r21,zero
10009fbc:	94800094 	ori	r18,r18,2
10009fc0:	d9012715 	stw	r4,1180(sp)
10009fc4:	00800084 	movi	r2,2
10009fc8:	9807883a 	mov	r3,r19
10009fcc:	003f5d06 	br	10009d44 <__alt_data_end+0xf8009d44>
10009fd0:	d8c12203 	ldbu	r3,1160(sp)
10009fd4:	9080080c 	andi	r2,r18,32
10009fd8:	9811883a 	mov	r8,r19
10009fdc:	d8c11d85 	stb	r3,1142(sp)
10009fe0:	1001b126 	beq	r2,zero,1000a6a8 <___vfiprintf_internal_r+0x1118>
10009fe4:	d9012317 	ldw	r4,1164(sp)
10009fe8:	d9412517 	ldw	r5,1172(sp)
10009fec:	20800017 	ldw	r2,0(r4)
10009ff0:	2807d7fa 	srai	r3,r5,31
10009ff4:	21000104 	addi	r4,r4,4
10009ff8:	d9012315 	stw	r4,1164(sp)
10009ffc:	11400015 	stw	r5,0(r2)
1000a000:	10c00115 	stw	r3,4(r2)
1000a004:	003d9a06 	br	10009670 <__alt_data_end+0xf8009670>
1000a008:	d8812207 	ldb	r2,1160(sp)
1000a00c:	1001c41e 	bne	r2,zero,1000a720 <___vfiprintf_internal_r+0x1190>
1000a010:	00c00804 	movi	r3,32
1000a014:	d8c12205 	stb	r3,1160(sp)
1000a018:	b9800007 	ldb	r6,0(r23)
1000a01c:	003dbd06 	br	10009714 <__alt_data_end+0xf8009714>
1000a020:	00c00ac4 	movi	r3,43
1000a024:	d8c12205 	stb	r3,1160(sp)
1000a028:	b9800007 	ldb	r6,0(r23)
1000a02c:	003db906 	br	10009714 <__alt_data_end+0xf8009714>
1000a030:	d8c12203 	ldbu	r3,1160(sp)
1000a034:	9080080c 	andi	r2,r18,32
1000a038:	9811883a 	mov	r8,r19
1000a03c:	d8c11d85 	stb	r3,1142(sp)
1000a040:	d8c12317 	ldw	r3,1164(sp)
1000a044:	103e7e1e 	bne	r2,zero,10009a40 <__alt_data_end+0xf8009a40>
1000a048:	9080040c 	andi	r2,r18,16
1000a04c:	1001a926 	beq	r2,zero,1000a6f4 <___vfiprintf_internal_r+0x1164>
1000a050:	1cc00017 	ldw	r19,0(r3)
1000a054:	d9412317 	ldw	r5,1164(sp)
1000a058:	982bd7fa 	srai	r21,r19,31
1000a05c:	29400104 	addi	r5,r5,4
1000a060:	d9412315 	stw	r5,1164(sp)
1000a064:	a805883a 	mov	r2,r21
1000a068:	003e7b06 	br	10009a58 <__alt_data_end+0xf8009a58>
1000a06c:	94800054 	ori	r18,r18,1
1000a070:	b9800007 	ldb	r6,0(r23)
1000a074:	003da706 	br	10009714 <__alt_data_end+0xf8009714>
1000a078:	d8c12203 	ldbu	r3,1160(sp)
1000a07c:	9811883a 	mov	r8,r19
1000a080:	d8c11d85 	stb	r3,1142(sp)
1000a084:	30005826 	beq	r6,zero,1000a1e8 <___vfiprintf_internal_r+0xc58>
1000a088:	05400044 	movi	r21,1
1000a08c:	d8c10004 	addi	r3,sp,1024
1000a090:	d9810005 	stb	r6,1024(sp)
1000a094:	d8011d85 	stb	zero,1142(sp)
1000a098:	a829883a 	mov	r20,r21
1000a09c:	d8c12215 	stw	r3,1160(sp)
1000a0a0:	003f1a06 	br	10009d0c <__alt_data_end+0xf8009d0c>
1000a0a4:	d9012117 	ldw	r4,1156(sp)
1000a0a8:	d9412017 	ldw	r5,1152(sp)
1000a0ac:	d9811a04 	addi	r6,sp,1128
1000a0b0:	d9c12a15 	stw	r7,1192(sp)
1000a0b4:	db012b15 	stw	r12,1196(sp)
1000a0b8:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a0bc:	d9c12a17 	ldw	r7,1192(sp)
1000a0c0:	db012b17 	ldw	r12,1196(sp)
1000a0c4:	10004e1e 	bne	r2,zero,1000a200 <___vfiprintf_internal_r+0xc70>
1000a0c8:	d9011b17 	ldw	r4,1132(sp)
1000a0cc:	d8c11c17 	ldw	r3,1136(sp)
1000a0d0:	d811883a 	mov	r8,sp
1000a0d4:	21400044 	addi	r5,r4,1
1000a0d8:	003e9d06 	br	10009b50 <__alt_data_end+0xf8009b50>
1000a0dc:	d9411b17 	ldw	r5,1132(sp)
1000a0e0:	d8c11c17 	ldw	r3,1136(sp)
1000a0e4:	28800044 	addi	r2,r5,1
1000a0e8:	d9011d87 	ldb	r4,1142(sp)
1000a0ec:	203eb626 	beq	r4,zero,10009bc8 <__alt_data_end+0xf8009bc8>
1000a0f0:	01000044 	movi	r4,1
1000a0f4:	d9411d84 	addi	r5,sp,1142
1000a0f8:	1907883a 	add	r3,r3,r4
1000a0fc:	41400015 	stw	r5,0(r8)
1000a100:	41000115 	stw	r4,4(r8)
1000a104:	d8c11c15 	stw	r3,1136(sp)
1000a108:	d8811b15 	stw	r2,1132(sp)
1000a10c:	014001c4 	movi	r5,7
1000a110:	2880ce16 	blt	r5,r2,1000a44c <___vfiprintf_internal_r+0xebc>
1000a114:	100b883a 	mov	r5,r2
1000a118:	42000204 	addi	r8,r8,8
1000a11c:	10800044 	addi	r2,r2,1
1000a120:	003ea906 	br	10009bc8 <__alt_data_end+0xf8009bc8>
1000a124:	d9012117 	ldw	r4,1156(sp)
1000a128:	d9412017 	ldw	r5,1152(sp)
1000a12c:	d9811a04 	addi	r6,sp,1128
1000a130:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a134:	1000321e 	bne	r2,zero,1000a200 <___vfiprintf_internal_r+0xc70>
1000a138:	d9411b17 	ldw	r5,1132(sp)
1000a13c:	d8c11c17 	ldw	r3,1136(sp)
1000a140:	d811883a 	mov	r8,sp
1000a144:	28800044 	addi	r2,r5,1
1000a148:	003eba06 	br	10009c34 <__alt_data_end+0xf8009c34>
1000a14c:	10803fcc 	andi	r2,r2,255
1000a150:	00c00044 	movi	r3,1
1000a154:	10fe4d1e 	bne	r2,r3,10009a8c <__alt_data_end+0xf8009a8c>
1000a158:	a800021e 	bne	r21,zero,1000a164 <___vfiprintf_internal_r+0xbd4>
1000a15c:	00800244 	movi	r2,9
1000a160:	14c01b2e 	bgeu	r2,r19,1000a1d0 <___vfiprintf_internal_r+0xc40>
1000a164:	dc012215 	stw	r16,1160(sp)
1000a168:	dd010a04 	addi	r20,sp,1064
1000a16c:	a821883a 	mov	r16,r21
1000a170:	402b883a 	mov	r21,r8
1000a174:	9809883a 	mov	r4,r19
1000a178:	800b883a 	mov	r5,r16
1000a17c:	01800284 	movi	r6,10
1000a180:	000f883a 	mov	r7,zero
1000a184:	000b9640 	call	1000b964 <__umoddi3>
1000a188:	10800c04 	addi	r2,r2,48
1000a18c:	a53fffc4 	addi	r20,r20,-1
1000a190:	9809883a 	mov	r4,r19
1000a194:	800b883a 	mov	r5,r16
1000a198:	01800284 	movi	r6,10
1000a19c:	000f883a 	mov	r7,zero
1000a1a0:	a0800005 	stb	r2,0(r20)
1000a1a4:	000b3240 	call	1000b324 <__udivdi3>
1000a1a8:	1027883a 	mov	r19,r2
1000a1ac:	10c4b03a 	or	r2,r2,r3
1000a1b0:	1821883a 	mov	r16,r3
1000a1b4:	103fef1e 	bne	r2,zero,1000a174 <__alt_data_end+0xf800a174>
1000a1b8:	d9011e17 	ldw	r4,1144(sp)
1000a1bc:	dc012217 	ldw	r16,1160(sp)
1000a1c0:	a811883a 	mov	r8,r21
1000a1c4:	dd012215 	stw	r20,1160(sp)
1000a1c8:	2529c83a 	sub	r20,r4,r20
1000a1cc:	003e4106 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a1d0:	9cc00c04 	addi	r19,r19,48
1000a1d4:	d8c109c4 	addi	r3,sp,1063
1000a1d8:	dcc109c5 	stb	r19,1063(sp)
1000a1dc:	dd012817 	ldw	r20,1184(sp)
1000a1e0:	d8c12215 	stw	r3,1160(sp)
1000a1e4:	003e3b06 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a1e8:	d8811c17 	ldw	r2,1136(sp)
1000a1ec:	10000426 	beq	r2,zero,1000a200 <___vfiprintf_internal_r+0xc70>
1000a1f0:	d9012117 	ldw	r4,1156(sp)
1000a1f4:	d9412017 	ldw	r5,1152(sp)
1000a1f8:	d9811a04 	addi	r6,sp,1128
1000a1fc:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a200:	d9412017 	ldw	r5,1152(sp)
1000a204:	2880030b 	ldhu	r2,12(r5)
1000a208:	1080100c 	andi	r2,r2,64
1000a20c:	103ddc1e 	bne	r2,zero,10009980 <__alt_data_end+0xf8009980>
1000a210:	d8812517 	ldw	r2,1172(sp)
1000a214:	003ddb06 	br	10009984 <__alt_data_end+0xf8009984>
1000a218:	1801061e 	bne	r3,zero,1000a634 <___vfiprintf_internal_r+0x10a4>
1000a21c:	d8c12217 	ldw	r3,1160(sp)
1000a220:	00800044 	movi	r2,1
1000a224:	dd000115 	stw	r20,4(sp)
1000a228:	d8c00015 	stw	r3,0(sp)
1000a22c:	dd011c15 	stw	r20,1136(sp)
1000a230:	d8811b15 	stw	r2,1132(sp)
1000a234:	a007883a 	mov	r3,r20
1000a238:	d811883a 	mov	r8,sp
1000a23c:	42000204 	addi	r8,r8,8
1000a240:	9480010c 	andi	r18,r18,4
1000a244:	90003426 	beq	r18,zero,1000a318 <___vfiprintf_internal_r+0xd88>
1000a248:	d9412417 	ldw	r5,1168(sp)
1000a24c:	2d65c83a 	sub	r18,r5,r21
1000a250:	0480310e 	bge	zero,r18,1000a318 <___vfiprintf_internal_r+0xd88>
1000a254:	04000404 	movi	r16,16
1000a258:	8481ad0e 	bge	r16,r18,1000a910 <___vfiprintf_internal_r+0x1380>
1000a25c:	01440074 	movhi	r5,4097
1000a260:	29407c04 	addi	r5,r5,496
1000a264:	d9011b17 	ldw	r4,1132(sp)
1000a268:	d9412615 	stw	r5,1176(sp)
1000a26c:	04c001c4 	movi	r19,7
1000a270:	dd012117 	ldw	r20,1156(sp)
1000a274:	dd812017 	ldw	r22,1152(sp)
1000a278:	00000506 	br	1000a290 <___vfiprintf_internal_r+0xd00>
1000a27c:	21400084 	addi	r5,r4,2
1000a280:	42000204 	addi	r8,r8,8
1000a284:	1009883a 	mov	r4,r2
1000a288:	94bffc04 	addi	r18,r18,-16
1000a28c:	84800d0e 	bge	r16,r18,1000a2c4 <___vfiprintf_internal_r+0xd34>
1000a290:	18c00404 	addi	r3,r3,16
1000a294:	20800044 	addi	r2,r4,1
1000a298:	47000015 	stw	fp,0(r8)
1000a29c:	44000115 	stw	r16,4(r8)
1000a2a0:	d8c11c15 	stw	r3,1136(sp)
1000a2a4:	d8811b15 	stw	r2,1132(sp)
1000a2a8:	98bff40e 	bge	r19,r2,1000a27c <__alt_data_end+0xf800a27c>
1000a2ac:	1800291e 	bne	r3,zero,1000a354 <___vfiprintf_internal_r+0xdc4>
1000a2b0:	94bffc04 	addi	r18,r18,-16
1000a2b4:	0009883a 	mov	r4,zero
1000a2b8:	01400044 	movi	r5,1
1000a2bc:	d811883a 	mov	r8,sp
1000a2c0:	84bff316 	blt	r16,r18,1000a290 <__alt_data_end+0xf800a290>
1000a2c4:	d8812617 	ldw	r2,1176(sp)
1000a2c8:	1c87883a 	add	r3,r3,r18
1000a2cc:	44800115 	stw	r18,4(r8)
1000a2d0:	40800015 	stw	r2,0(r8)
1000a2d4:	d8c11c15 	stw	r3,1136(sp)
1000a2d8:	d9411b15 	stw	r5,1132(sp)
1000a2dc:	008001c4 	movi	r2,7
1000a2e0:	11400d0e 	bge	r2,r5,1000a318 <___vfiprintf_internal_r+0xd88>
1000a2e4:	1800061e 	bne	r3,zero,1000a300 <___vfiprintf_internal_r+0xd70>
1000a2e8:	d8c12417 	ldw	r3,1168(sp)
1000a2ec:	a8c12e16 	blt	r21,r3,1000a7a8 <___vfiprintf_internal_r+0x1218>
1000a2f0:	d9012517 	ldw	r4,1172(sp)
1000a2f4:	2549883a 	add	r4,r4,r21
1000a2f8:	d9012515 	stw	r4,1172(sp)
1000a2fc:	00001206 	br	1000a348 <___vfiprintf_internal_r+0xdb8>
1000a300:	d9012117 	ldw	r4,1156(sp)
1000a304:	d9412017 	ldw	r5,1152(sp)
1000a308:	d9811a04 	addi	r6,sp,1128
1000a30c:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a310:	103fbb1e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a314:	d8c11c17 	ldw	r3,1136(sp)
1000a318:	d8812417 	ldw	r2,1168(sp)
1000a31c:	a880010e 	bge	r21,r2,1000a324 <___vfiprintf_internal_r+0xd94>
1000a320:	102b883a 	mov	r21,r2
1000a324:	d9012517 	ldw	r4,1172(sp)
1000a328:	2549883a 	add	r4,r4,r21
1000a32c:	d9012515 	stw	r4,1172(sp)
1000a330:	18000526 	beq	r3,zero,1000a348 <___vfiprintf_internal_r+0xdb8>
1000a334:	d9012117 	ldw	r4,1156(sp)
1000a338:	d9412017 	ldw	r5,1152(sp)
1000a33c:	d9811a04 	addi	r6,sp,1128
1000a340:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a344:	103fae1e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a348:	d8011b15 	stw	zero,1132(sp)
1000a34c:	d811883a 	mov	r8,sp
1000a350:	003cc706 	br	10009670 <__alt_data_end+0xf8009670>
1000a354:	a009883a 	mov	r4,r20
1000a358:	b00b883a 	mov	r5,r22
1000a35c:	d9811a04 	addi	r6,sp,1128
1000a360:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a364:	103fa61e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a368:	d9011b17 	ldw	r4,1132(sp)
1000a36c:	d8c11c17 	ldw	r3,1136(sp)
1000a370:	d811883a 	mov	r8,sp
1000a374:	21400044 	addi	r5,r4,1
1000a378:	003fc306 	br	1000a288 <__alt_data_end+0xf800a288>
1000a37c:	d9012417 	ldw	r4,1168(sp)
1000a380:	256dc83a 	sub	r22,r4,r21
1000a384:	05be1f0e 	bge	zero,r22,10009c04 <__alt_data_end+0xf8009c04>
1000a388:	04c00404 	movi	r19,16
1000a38c:	9d81720e 	bge	r19,r22,1000a958 <___vfiprintf_internal_r+0x13c8>
1000a390:	00840074 	movhi	r2,4097
1000a394:	10807804 	addi	r2,r2,480
1000a398:	d8812615 	stw	r2,1176(sp)
1000a39c:	028001c4 	movi	r10,7
1000a3a0:	00000506 	br	1000a3b8 <___vfiprintf_internal_r+0xe28>
1000a3a4:	29000084 	addi	r4,r5,2
1000a3a8:	42000204 	addi	r8,r8,8
1000a3ac:	100b883a 	mov	r5,r2
1000a3b0:	b5bffc04 	addi	r22,r22,-16
1000a3b4:	9d800d0e 	bge	r19,r22,1000a3ec <___vfiprintf_internal_r+0xe5c>
1000a3b8:	18c00404 	addi	r3,r3,16
1000a3bc:	28800044 	addi	r2,r5,1
1000a3c0:	44400015 	stw	r17,0(r8)
1000a3c4:	44c00115 	stw	r19,4(r8)
1000a3c8:	d8c11c15 	stw	r3,1136(sp)
1000a3cc:	d8811b15 	stw	r2,1132(sp)
1000a3d0:	50bff40e 	bge	r10,r2,1000a3a4 <__alt_data_end+0xf800a3a4>
1000a3d4:	1800111e 	bne	r3,zero,1000a41c <___vfiprintf_internal_r+0xe8c>
1000a3d8:	b5bffc04 	addi	r22,r22,-16
1000a3dc:	000b883a 	mov	r5,zero
1000a3e0:	01000044 	movi	r4,1
1000a3e4:	d811883a 	mov	r8,sp
1000a3e8:	9dbff316 	blt	r19,r22,1000a3b8 <__alt_data_end+0xf800a3b8>
1000a3ec:	d9412617 	ldw	r5,1176(sp)
1000a3f0:	1d87883a 	add	r3,r3,r22
1000a3f4:	45800115 	stw	r22,4(r8)
1000a3f8:	41400015 	stw	r5,0(r8)
1000a3fc:	d8c11c15 	stw	r3,1136(sp)
1000a400:	d9011b15 	stw	r4,1132(sp)
1000a404:	008001c4 	movi	r2,7
1000a408:	11008516 	blt	r2,r4,1000a620 <___vfiprintf_internal_r+0x1090>
1000a40c:	42000204 	addi	r8,r8,8
1000a410:	20800044 	addi	r2,r4,1
1000a414:	200b883a 	mov	r5,r4
1000a418:	003dfa06 	br	10009c04 <__alt_data_end+0xf8009c04>
1000a41c:	d9012117 	ldw	r4,1156(sp)
1000a420:	d9412017 	ldw	r5,1152(sp)
1000a424:	d9811a04 	addi	r6,sp,1128
1000a428:	da812a15 	stw	r10,1192(sp)
1000a42c:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a430:	da812a17 	ldw	r10,1192(sp)
1000a434:	103f721e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a438:	d9411b17 	ldw	r5,1132(sp)
1000a43c:	d8c11c17 	ldw	r3,1136(sp)
1000a440:	d811883a 	mov	r8,sp
1000a444:	29000044 	addi	r4,r5,1
1000a448:	003fd906 	br	1000a3b0 <__alt_data_end+0xf800a3b0>
1000a44c:	1800681e 	bne	r3,zero,1000a5f0 <___vfiprintf_internal_r+0x1060>
1000a450:	50004d26 	beq	r10,zero,1000a588 <___vfiprintf_internal_r+0xff8>
1000a454:	d8811d04 	addi	r2,sp,1140
1000a458:	00c00084 	movi	r3,2
1000a45c:	d8800015 	stw	r2,0(sp)
1000a460:	d8c00115 	stw	r3,4(sp)
1000a464:	2005883a 	mov	r2,r4
1000a468:	d811883a 	mov	r8,sp
1000a46c:	003de006 	br	10009bf0 <__alt_data_end+0xf8009bf0>
1000a470:	1800551e 	bne	r3,zero,1000a5c8 <___vfiprintf_internal_r+0x1038>
1000a474:	000b883a 	mov	r5,zero
1000a478:	00800044 	movi	r2,1
1000a47c:	d811883a 	mov	r8,sp
1000a480:	003dde06 	br	10009bfc <__alt_data_end+0xf8009bfc>
1000a484:	10803fcc 	andi	r2,r2,255
1000a488:	1000191e 	bne	r2,zero,1000a4f0 <___vfiprintf_internal_r+0xf60>
1000a48c:	9080004c 	andi	r2,r18,1
1000a490:	10001726 	beq	r2,zero,1000a4f0 <___vfiprintf_internal_r+0xf60>
1000a494:	00800c04 	movi	r2,48
1000a498:	d8c109c4 	addi	r3,sp,1063
1000a49c:	d88109c5 	stb	r2,1063(sp)
1000a4a0:	dd012817 	ldw	r20,1184(sp)
1000a4a4:	d8c12215 	stw	r3,1160(sp)
1000a4a8:	003d8a06 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a4ac:	d9012717 	ldw	r4,1180(sp)
1000a4b0:	dd010a04 	addi	r20,sp,1064
1000a4b4:	988003cc 	andi	r2,r19,15
1000a4b8:	a806973a 	slli	r3,r21,28
1000a4bc:	2085883a 	add	r2,r4,r2
1000a4c0:	9826d13a 	srli	r19,r19,4
1000a4c4:	10800003 	ldbu	r2,0(r2)
1000a4c8:	a82ad13a 	srli	r21,r21,4
1000a4cc:	a53fffc4 	addi	r20,r20,-1
1000a4d0:	1ce6b03a 	or	r19,r3,r19
1000a4d4:	a0800005 	stb	r2,0(r20)
1000a4d8:	9d44b03a 	or	r2,r19,r21
1000a4dc:	103ff51e 	bne	r2,zero,1000a4b4 <__alt_data_end+0xf800a4b4>
1000a4e0:	d9411e17 	ldw	r5,1144(sp)
1000a4e4:	dd012215 	stw	r20,1160(sp)
1000a4e8:	2d29c83a 	sub	r20,r5,r20
1000a4ec:	003d7906 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a4f0:	d8c10a04 	addi	r3,sp,1064
1000a4f4:	d8c12215 	stw	r3,1160(sp)
1000a4f8:	003d7606 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a4fc:	18009e1e 	bne	r3,zero,1000a778 <___vfiprintf_internal_r+0x11e8>
1000a500:	d8811d87 	ldb	r2,1142(sp)
1000a504:	10005f26 	beq	r2,zero,1000a684 <___vfiprintf_internal_r+0x10f4>
1000a508:	00c00044 	movi	r3,1
1000a50c:	d9011d84 	addi	r4,sp,1142
1000a510:	1805883a 	mov	r2,r3
1000a514:	d9000015 	stw	r4,0(sp)
1000a518:	d8c00115 	stw	r3,4(sp)
1000a51c:	d811883a 	mov	r8,sp
1000a520:	003efc06 	br	1000a114 <__alt_data_end+0xf800a114>
1000a524:	d9412417 	ldw	r5,1168(sp)
1000a528:	d811883a 	mov	r8,sp
1000a52c:	2d65c83a 	sub	r18,r5,r21
1000a530:	04bf4816 	blt	zero,r18,1000a254 <__alt_data_end+0xf800a254>
1000a534:	003f6c06 	br	1000a2e8 <__alt_data_end+0xf800a2e8>
1000a538:	b829883a 	mov	r20,r23
1000a53c:	003c6906 	br	100096e4 <__alt_data_end+0xf80096e4>
1000a540:	d9012117 	ldw	r4,1156(sp)
1000a544:	d9412017 	ldw	r5,1152(sp)
1000a548:	d9811a04 	addi	r6,sp,1128
1000a54c:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a550:	103f2b1e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a554:	d8c11c17 	ldw	r3,1136(sp)
1000a558:	d811883a 	mov	r8,sp
1000a55c:	003f3806 	br	1000a240 <__alt_data_end+0xf800a240>
1000a560:	00800084 	movi	r2,2
1000a564:	9d46b03a 	or	r3,r19,r21
1000a568:	003df606 	br	10009d44 <__alt_data_end+0xf8009d44>
1000a56c:	d9012117 	ldw	r4,1156(sp)
1000a570:	d9412017 	ldw	r5,1152(sp)
1000a574:	d9811a04 	addi	r6,sp,1128
1000a578:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a57c:	103f201e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a580:	d811883a 	mov	r8,sp
1000a584:	003cc606 	br	100098a0 <__alt_data_end+0xf80098a0>
1000a588:	000b883a 	mov	r5,zero
1000a58c:	2005883a 	mov	r2,r4
1000a590:	d811883a 	mov	r8,sp
1000a594:	003d9906 	br	10009bfc <__alt_data_end+0xf8009bfc>
1000a598:	10803fcc 	andi	r2,r2,255
1000a59c:	1080201c 	xori	r2,r2,128
1000a5a0:	10bfe004 	addi	r2,r2,-128
1000a5a4:	01000c04 	movi	r4,48
1000a5a8:	1100b226 	beq	r2,r4,1000a874 <___vfiprintf_internal_r+0x12e4>
1000a5ac:	d9412217 	ldw	r5,1160(sp)
1000a5b0:	d8811e17 	ldw	r2,1144(sp)
1000a5b4:	193fffc5 	stb	r4,-1(r3)
1000a5b8:	297fffc4 	addi	r5,r5,-1
1000a5bc:	d9412215 	stw	r5,1160(sp)
1000a5c0:	1169c83a 	sub	r20,r2,r5
1000a5c4:	003d4306 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a5c8:	d9012117 	ldw	r4,1156(sp)
1000a5cc:	d9412017 	ldw	r5,1152(sp)
1000a5d0:	d9811a04 	addi	r6,sp,1128
1000a5d4:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a5d8:	103f091e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a5dc:	d9411b17 	ldw	r5,1132(sp)
1000a5e0:	d8c11c17 	ldw	r3,1136(sp)
1000a5e4:	d811883a 	mov	r8,sp
1000a5e8:	28800044 	addi	r2,r5,1
1000a5ec:	003d8306 	br	10009bfc <__alt_data_end+0xf8009bfc>
1000a5f0:	d9012117 	ldw	r4,1156(sp)
1000a5f4:	d9412017 	ldw	r5,1152(sp)
1000a5f8:	d9811a04 	addi	r6,sp,1128
1000a5fc:	da812a15 	stw	r10,1192(sp)
1000a600:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a604:	da812a17 	ldw	r10,1192(sp)
1000a608:	103efd1e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a60c:	d9411b17 	ldw	r5,1132(sp)
1000a610:	d8c11c17 	ldw	r3,1136(sp)
1000a614:	d811883a 	mov	r8,sp
1000a618:	28800044 	addi	r2,r5,1
1000a61c:	003d6a06 	br	10009bc8 <__alt_data_end+0xf8009bc8>
1000a620:	1800a01e 	bne	r3,zero,1000a8a4 <___vfiprintf_internal_r+0x1314>
1000a624:	000b883a 	mov	r5,zero
1000a628:	00800044 	movi	r2,1
1000a62c:	d811883a 	mov	r8,sp
1000a630:	003d7406 	br	10009c04 <__alt_data_end+0xf8009c04>
1000a634:	d9012117 	ldw	r4,1156(sp)
1000a638:	d9412017 	ldw	r5,1152(sp)
1000a63c:	d9811a04 	addi	r6,sp,1128
1000a640:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a644:	103eee1e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a648:	d8811b17 	ldw	r2,1132(sp)
1000a64c:	d8c11c17 	ldw	r3,1136(sp)
1000a650:	d811883a 	mov	r8,sp
1000a654:	10800044 	addi	r2,r2,1
1000a658:	003d8f06 	br	10009c98 <__alt_data_end+0xf8009c98>
1000a65c:	04e7c83a 	sub	r19,zero,r19
1000a660:	9804c03a 	cmpne	r2,r19,zero
1000a664:	056bc83a 	sub	r21,zero,r21
1000a668:	a8abc83a 	sub	r21,r21,r2
1000a66c:	05800b44 	movi	r22,45
1000a670:	dd811d85 	stb	r22,1142(sp)
1000a674:	8029883a 	mov	r20,r16
1000a678:	00800044 	movi	r2,1
1000a67c:	9d46b03a 	or	r3,r19,r21
1000a680:	003cfa06 	br	10009a6c <__alt_data_end+0xf8009a6c>
1000a684:	000b883a 	mov	r5,zero
1000a688:	00800044 	movi	r2,1
1000a68c:	d811883a 	mov	r8,sp
1000a690:	503d5a26 	beq	r10,zero,10009bfc <__alt_data_end+0xf8009bfc>
1000a694:	00c00084 	movi	r3,2
1000a698:	d9011d04 	addi	r4,sp,1140
1000a69c:	d9000015 	stw	r4,0(sp)
1000a6a0:	d8c00115 	stw	r3,4(sp)
1000a6a4:	003d5206 	br	10009bf0 <__alt_data_end+0xf8009bf0>
1000a6a8:	9080040c 	andi	r2,r18,16
1000a6ac:	1000421e 	bne	r2,zero,1000a7b8 <___vfiprintf_internal_r+0x1228>
1000a6b0:	9480100c 	andi	r18,r18,64
1000a6b4:	90009c26 	beq	r18,zero,1000a928 <___vfiprintf_internal_r+0x1398>
1000a6b8:	d9412317 	ldw	r5,1164(sp)
1000a6bc:	d8c12517 	ldw	r3,1172(sp)
1000a6c0:	28800017 	ldw	r2,0(r5)
1000a6c4:	29400104 	addi	r5,r5,4
1000a6c8:	d9412315 	stw	r5,1164(sp)
1000a6cc:	10c0000d 	sth	r3,0(r2)
1000a6d0:	003be706 	br	10009670 <__alt_data_end+0xf8009670>
1000a6d4:	90c0100c 	andi	r3,r18,64
1000a6d8:	18003e26 	beq	r3,zero,1000a7d4 <___vfiprintf_internal_r+0x1244>
1000a6dc:	d8c12317 	ldw	r3,1164(sp)
1000a6e0:	14c0000b 	ldhu	r19,0(r2)
1000a6e4:	002b883a 	mov	r21,zero
1000a6e8:	18c00104 	addi	r3,r3,4
1000a6ec:	d8c12315 	stw	r3,1164(sp)
1000a6f0:	003db706 	br	10009dd0 <__alt_data_end+0xf8009dd0>
1000a6f4:	9080100c 	andi	r2,r18,64
1000a6f8:	10004c26 	beq	r2,zero,1000a82c <___vfiprintf_internal_r+0x129c>
1000a6fc:	1cc0000f 	ldh	r19,0(r3)
1000a700:	d8812317 	ldw	r2,1164(sp)
1000a704:	982bd7fa 	srai	r21,r19,31
1000a708:	10800104 	addi	r2,r2,4
1000a70c:	d8812315 	stw	r2,1164(sp)
1000a710:	a805883a 	mov	r2,r21
1000a714:	003cd006 	br	10009a58 <__alt_data_end+0xf8009a58>
1000a718:	00800084 	movi	r2,2
1000a71c:	003d8906 	br	10009d44 <__alt_data_end+0xf8009d44>
1000a720:	b9800007 	ldb	r6,0(r23)
1000a724:	003bfb06 	br	10009714 <__alt_data_end+0xf8009714>
1000a728:	9080100c 	andi	r2,r18,64
1000a72c:	10003726 	beq	r2,zero,1000a80c <___vfiprintf_internal_r+0x127c>
1000a730:	d9412317 	ldw	r5,1164(sp)
1000a734:	002b883a 	mov	r21,zero
1000a738:	0005883a 	mov	r2,zero
1000a73c:	2cc0000b 	ldhu	r19,0(r5)
1000a740:	29400104 	addi	r5,r5,4
1000a744:	d9412315 	stw	r5,1164(sp)
1000a748:	9807883a 	mov	r3,r19
1000a74c:	003d7d06 	br	10009d44 <__alt_data_end+0xf8009d44>
1000a750:	9080100c 	andi	r2,r18,64
1000a754:	10002526 	beq	r2,zero,1000a7ec <___vfiprintf_internal_r+0x125c>
1000a758:	d8812317 	ldw	r2,1164(sp)
1000a75c:	002b883a 	mov	r21,zero
1000a760:	14c0000b 	ldhu	r19,0(r2)
1000a764:	10800104 	addi	r2,r2,4
1000a768:	d8812315 	stw	r2,1164(sp)
1000a76c:	9807883a 	mov	r3,r19
1000a770:	00800044 	movi	r2,1
1000a774:	003d7306 	br	10009d44 <__alt_data_end+0xf8009d44>
1000a778:	d9012117 	ldw	r4,1156(sp)
1000a77c:	d9412017 	ldw	r5,1152(sp)
1000a780:	d9811a04 	addi	r6,sp,1128
1000a784:	da812a15 	stw	r10,1192(sp)
1000a788:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a78c:	da812a17 	ldw	r10,1192(sp)
1000a790:	103e9b1e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a794:	d9411b17 	ldw	r5,1132(sp)
1000a798:	d8c11c17 	ldw	r3,1136(sp)
1000a79c:	d811883a 	mov	r8,sp
1000a7a0:	28800044 	addi	r2,r5,1
1000a7a4:	003e5006 	br	1000a0e8 <__alt_data_end+0xf800a0e8>
1000a7a8:	182b883a 	mov	r21,r3
1000a7ac:	003ed006 	br	1000a2f0 <__alt_data_end+0xf800a2f0>
1000a7b0:	8029883a 	mov	r20,r16
1000a7b4:	003dc606 	br	10009ed0 <__alt_data_end+0xf8009ed0>
1000a7b8:	d8c12317 	ldw	r3,1164(sp)
1000a7bc:	d9012517 	ldw	r4,1172(sp)
1000a7c0:	18800017 	ldw	r2,0(r3)
1000a7c4:	18c00104 	addi	r3,r3,4
1000a7c8:	d8c12315 	stw	r3,1164(sp)
1000a7cc:	11000015 	stw	r4,0(r2)
1000a7d0:	003ba706 	br	10009670 <__alt_data_end+0xf8009670>
1000a7d4:	d9012317 	ldw	r4,1164(sp)
1000a7d8:	14c00017 	ldw	r19,0(r2)
1000a7dc:	002b883a 	mov	r21,zero
1000a7e0:	21000104 	addi	r4,r4,4
1000a7e4:	d9012315 	stw	r4,1164(sp)
1000a7e8:	003d7906 	br	10009dd0 <__alt_data_end+0xf8009dd0>
1000a7ec:	d8c12317 	ldw	r3,1164(sp)
1000a7f0:	002b883a 	mov	r21,zero
1000a7f4:	00800044 	movi	r2,1
1000a7f8:	1cc00017 	ldw	r19,0(r3)
1000a7fc:	18c00104 	addi	r3,r3,4
1000a800:	d8c12315 	stw	r3,1164(sp)
1000a804:	9807883a 	mov	r3,r19
1000a808:	003d4e06 	br	10009d44 <__alt_data_end+0xf8009d44>
1000a80c:	d8812317 	ldw	r2,1164(sp)
1000a810:	002b883a 	mov	r21,zero
1000a814:	14c00017 	ldw	r19,0(r2)
1000a818:	10800104 	addi	r2,r2,4
1000a81c:	d8812315 	stw	r2,1164(sp)
1000a820:	9807883a 	mov	r3,r19
1000a824:	0005883a 	mov	r2,zero
1000a828:	003d4606 	br	10009d44 <__alt_data_end+0xf8009d44>
1000a82c:	1cc00017 	ldw	r19,0(r3)
1000a830:	d8c12317 	ldw	r3,1164(sp)
1000a834:	982bd7fa 	srai	r21,r19,31
1000a838:	18c00104 	addi	r3,r3,4
1000a83c:	d8c12315 	stw	r3,1164(sp)
1000a840:	a805883a 	mov	r2,r21
1000a844:	003c8406 	br	10009a58 <__alt_data_end+0xf8009a58>
1000a848:	01040074 	movhi	r4,4097
1000a84c:	21007804 	addi	r4,r4,480
1000a850:	d9012615 	stw	r4,1176(sp)
1000a854:	003d0606 	br	10009c70 <__alt_data_end+0xf8009c70>
1000a858:	b9800043 	ldbu	r6,1(r23)
1000a85c:	94800814 	ori	r18,r18,32
1000a860:	bdc00044 	addi	r23,r23,1
1000a864:	31803fcc 	andi	r6,r6,255
1000a868:	3180201c 	xori	r6,r6,128
1000a86c:	31bfe004 	addi	r6,r6,-128
1000a870:	003ba806 	br	10009714 <__alt_data_end+0xf8009714>
1000a874:	d8811e17 	ldw	r2,1144(sp)
1000a878:	d8c12217 	ldw	r3,1160(sp)
1000a87c:	10e9c83a 	sub	r20,r2,r3
1000a880:	003c9406 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a884:	da012a15 	stw	r8,1192(sp)
1000a888:	00020a00 	call	100020a0 <strlen>
1000a88c:	1029883a 	mov	r20,r2
1000a890:	dd811d83 	ldbu	r22,1142(sp)
1000a894:	dcc12315 	stw	r19,1164(sp)
1000a898:	0021883a 	mov	r16,zero
1000a89c:	da012a17 	ldw	r8,1192(sp)
1000a8a0:	003c8c06 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a8a4:	d9012117 	ldw	r4,1156(sp)
1000a8a8:	d9412017 	ldw	r5,1152(sp)
1000a8ac:	d9811a04 	addi	r6,sp,1128
1000a8b0:	000947c0 	call	1000947c <__sprint_r.part.0>
1000a8b4:	103e521e 	bne	r2,zero,1000a200 <__alt_data_end+0xf800a200>
1000a8b8:	d9411b17 	ldw	r5,1132(sp)
1000a8bc:	d8c11c17 	ldw	r3,1136(sp)
1000a8c0:	d811883a 	mov	r8,sp
1000a8c4:	28800044 	addi	r2,r5,1
1000a8c8:	003cce06 	br	10009c04 <__alt_data_end+0xf8009c04>
1000a8cc:	01440074 	movhi	r5,4097
1000a8d0:	29407c04 	addi	r5,r5,496
1000a8d4:	d9412615 	stw	r5,1176(sp)
1000a8d8:	d9411b17 	ldw	r5,1132(sp)
1000a8dc:	29400044 	addi	r5,r5,1
1000a8e0:	003cad06 	br	10009b98 <__alt_data_end+0xf8009b98>
1000a8e4:	00800184 	movi	r2,6
1000a8e8:	1400012e 	bgeu	r2,r16,1000a8f0 <___vfiprintf_internal_r+0x1360>
1000a8ec:	1021883a 	mov	r16,r2
1000a8f0:	8029883a 	mov	r20,r16
1000a8f4:	802b883a 	mov	r21,r16
1000a8f8:	80001c16 	blt	r16,zero,1000a96c <___vfiprintf_internal_r+0x13dc>
1000a8fc:	00c40074 	movhi	r3,4097
1000a900:	18c01c04 	addi	r3,r3,112
1000a904:	dcc12315 	stw	r19,1164(sp)
1000a908:	d8c12215 	stw	r3,1160(sp)
1000a90c:	003cff06 	br	10009d0c <__alt_data_end+0xf8009d0c>
1000a910:	d9411b17 	ldw	r5,1132(sp)
1000a914:	00840074 	movhi	r2,4097
1000a918:	10807c04 	addi	r2,r2,496
1000a91c:	d8812615 	stw	r2,1176(sp)
1000a920:	29400044 	addi	r5,r5,1
1000a924:	003e6706 	br	1000a2c4 <__alt_data_end+0xf800a2c4>
1000a928:	d9012317 	ldw	r4,1164(sp)
1000a92c:	d9412517 	ldw	r5,1172(sp)
1000a930:	20800017 	ldw	r2,0(r4)
1000a934:	21000104 	addi	r4,r4,4
1000a938:	d9012315 	stw	r4,1164(sp)
1000a93c:	11400015 	stw	r5,0(r2)
1000a940:	003b4b06 	br	10009670 <__alt_data_end+0xf8009670>
1000a944:	8029883a 	mov	r20,r16
1000a948:	dd811d83 	ldbu	r22,1142(sp)
1000a94c:	dcc12315 	stw	r19,1164(sp)
1000a950:	0021883a 	mov	r16,zero
1000a954:	003c5f06 	br	10009ad4 <__alt_data_end+0xf8009ad4>
1000a958:	01040074 	movhi	r4,4097
1000a95c:	21007804 	addi	r4,r4,480
1000a960:	d9012615 	stw	r4,1176(sp)
1000a964:	1009883a 	mov	r4,r2
1000a968:	003ea006 	br	1000a3ec <__alt_data_end+0xf800a3ec>
1000a96c:	002b883a 	mov	r21,zero
1000a970:	003fe206 	br	1000a8fc <__alt_data_end+0xf800a8fc>
1000a974:	d9412317 	ldw	r5,1164(sp)
1000a978:	b807883a 	mov	r3,r23
1000a97c:	102f883a 	mov	r23,r2
1000a980:	2c000017 	ldw	r16,0(r5)
1000a984:	29000104 	addi	r4,r5,4
1000a988:	d9012315 	stw	r4,1164(sp)
1000a98c:	80000416 	blt	r16,zero,1000a9a0 <___vfiprintf_internal_r+0x1410>
1000a990:	19800047 	ldb	r6,1(r3)
1000a994:	003b5f06 	br	10009714 <__alt_data_end+0xf8009714>
1000a998:	043fffc4 	movi	r16,-1
1000a99c:	003bef06 	br	1000995c <__alt_data_end+0xf800995c>
1000a9a0:	043fffc4 	movi	r16,-1
1000a9a4:	19800047 	ldb	r6,1(r3)
1000a9a8:	003b5a06 	br	10009714 <__alt_data_end+0xf8009714>
1000a9ac:	282b883a 	mov	r21,r5
1000a9b0:	003cc706 	br	10009cd0 <__alt_data_end+0xf8009cd0>

1000a9b4 <__vfiprintf_internal>:
1000a9b4:	2007883a 	mov	r3,r4
1000a9b8:	01040074 	movhi	r4,4097
1000a9bc:	21035704 	addi	r4,r4,3420
1000a9c0:	21000017 	ldw	r4,0(r4)
1000a9c4:	2805883a 	mov	r2,r5
1000a9c8:	300f883a 	mov	r7,r6
1000a9cc:	180b883a 	mov	r5,r3
1000a9d0:	100d883a 	mov	r6,r2
1000a9d4:	00095901 	jmpi	10009590 <___vfiprintf_internal_r>

1000a9d8 <_write_r>:
1000a9d8:	defffd04 	addi	sp,sp,-12
1000a9dc:	dc000015 	stw	r16,0(sp)
1000a9e0:	04040074 	movhi	r16,4097
1000a9e4:	dc400115 	stw	r17,4(sp)
1000a9e8:	84060a04 	addi	r16,r16,6184
1000a9ec:	2023883a 	mov	r17,r4
1000a9f0:	2809883a 	mov	r4,r5
1000a9f4:	300b883a 	mov	r5,r6
1000a9f8:	380d883a 	mov	r6,r7
1000a9fc:	dfc00215 	stw	ra,8(sp)
1000aa00:	80000015 	stw	zero,0(r16)
1000aa04:	000f1d80 	call	1000f1d8 <write>
1000aa08:	00ffffc4 	movi	r3,-1
1000aa0c:	10c00526 	beq	r2,r3,1000aa24 <_write_r+0x4c>
1000aa10:	dfc00217 	ldw	ra,8(sp)
1000aa14:	dc400117 	ldw	r17,4(sp)
1000aa18:	dc000017 	ldw	r16,0(sp)
1000aa1c:	dec00304 	addi	sp,sp,12
1000aa20:	f800283a 	ret
1000aa24:	80c00017 	ldw	r3,0(r16)
1000aa28:	183ff926 	beq	r3,zero,1000aa10 <__alt_data_end+0xf800aa10>
1000aa2c:	88c00015 	stw	r3,0(r17)
1000aa30:	003ff706 	br	1000aa10 <__alt_data_end+0xf800aa10>

1000aa34 <_close_r>:
1000aa34:	defffd04 	addi	sp,sp,-12
1000aa38:	dc000015 	stw	r16,0(sp)
1000aa3c:	04040074 	movhi	r16,4097
1000aa40:	dc400115 	stw	r17,4(sp)
1000aa44:	84060a04 	addi	r16,r16,6184
1000aa48:	2023883a 	mov	r17,r4
1000aa4c:	2809883a 	mov	r4,r5
1000aa50:	dfc00215 	stw	ra,8(sp)
1000aa54:	80000015 	stw	zero,0(r16)
1000aa58:	000e9200 	call	1000e920 <close>
1000aa5c:	00ffffc4 	movi	r3,-1
1000aa60:	10c00526 	beq	r2,r3,1000aa78 <_close_r+0x44>
1000aa64:	dfc00217 	ldw	ra,8(sp)
1000aa68:	dc400117 	ldw	r17,4(sp)
1000aa6c:	dc000017 	ldw	r16,0(sp)
1000aa70:	dec00304 	addi	sp,sp,12
1000aa74:	f800283a 	ret
1000aa78:	80c00017 	ldw	r3,0(r16)
1000aa7c:	183ff926 	beq	r3,zero,1000aa64 <__alt_data_end+0xf800aa64>
1000aa80:	88c00015 	stw	r3,0(r17)
1000aa84:	003ff706 	br	1000aa64 <__alt_data_end+0xf800aa64>

1000aa88 <_calloc_r>:
1000aa88:	defffe04 	addi	sp,sp,-8
1000aa8c:	dc000015 	stw	r16,0(sp)
1000aa90:	2021883a 	mov	r16,r4
1000aa94:	2809883a 	mov	r4,r5
1000aa98:	300b883a 	mov	r5,r6
1000aa9c:	dfc00115 	stw	ra,4(sp)
1000aaa0:	000c0ac0 	call	1000c0ac <__mulsi3>
1000aaa4:	8009883a 	mov	r4,r16
1000aaa8:	100b883a 	mov	r5,r2
1000aaac:	0006fa40 	call	10006fa4 <_malloc_r>
1000aab0:	1021883a 	mov	r16,r2
1000aab4:	10002826 	beq	r2,zero,1000ab58 <_calloc_r+0xd0>
1000aab8:	11bfff17 	ldw	r6,-4(r2)
1000aabc:	00bfff04 	movi	r2,-4
1000aac0:	00c00904 	movi	r3,36
1000aac4:	308c703a 	and	r6,r6,r2
1000aac8:	308d883a 	add	r6,r6,r2
1000aacc:	19801436 	bltu	r3,r6,1000ab20 <_calloc_r+0x98>
1000aad0:	008004c4 	movi	r2,19
1000aad4:	11800936 	bltu	r2,r6,1000aafc <_calloc_r+0x74>
1000aad8:	8005883a 	mov	r2,r16
1000aadc:	10000015 	stw	zero,0(r2)
1000aae0:	10000115 	stw	zero,4(r2)
1000aae4:	10000215 	stw	zero,8(r2)
1000aae8:	8005883a 	mov	r2,r16
1000aaec:	dfc00117 	ldw	ra,4(sp)
1000aaf0:	dc000017 	ldw	r16,0(sp)
1000aaf4:	dec00204 	addi	sp,sp,8
1000aaf8:	f800283a 	ret
1000aafc:	80000015 	stw	zero,0(r16)
1000ab00:	80000115 	stw	zero,4(r16)
1000ab04:	008006c4 	movi	r2,27
1000ab08:	11800d2e 	bgeu	r2,r6,1000ab40 <_calloc_r+0xb8>
1000ab0c:	80000215 	stw	zero,8(r16)
1000ab10:	80000315 	stw	zero,12(r16)
1000ab14:	30c00c26 	beq	r6,r3,1000ab48 <_calloc_r+0xc0>
1000ab18:	80800404 	addi	r2,r16,16
1000ab1c:	003fef06 	br	1000aadc <__alt_data_end+0xf800aadc>
1000ab20:	8009883a 	mov	r4,r16
1000ab24:	000b883a 	mov	r5,zero
1000ab28:	0007ac80 	call	10007ac8 <memset>
1000ab2c:	8005883a 	mov	r2,r16
1000ab30:	dfc00117 	ldw	ra,4(sp)
1000ab34:	dc000017 	ldw	r16,0(sp)
1000ab38:	dec00204 	addi	sp,sp,8
1000ab3c:	f800283a 	ret
1000ab40:	80800204 	addi	r2,r16,8
1000ab44:	003fe506 	br	1000aadc <__alt_data_end+0xf800aadc>
1000ab48:	80000415 	stw	zero,16(r16)
1000ab4c:	80800604 	addi	r2,r16,24
1000ab50:	80000515 	stw	zero,20(r16)
1000ab54:	003fe106 	br	1000aadc <__alt_data_end+0xf800aadc>
1000ab58:	0005883a 	mov	r2,zero
1000ab5c:	003fe306 	br	1000aaec <__alt_data_end+0xf800aaec>

1000ab60 <_fclose_r>:
1000ab60:	28003226 	beq	r5,zero,1000ac2c <_fclose_r+0xcc>
1000ab64:	defffc04 	addi	sp,sp,-16
1000ab68:	dc400115 	stw	r17,4(sp)
1000ab6c:	2023883a 	mov	r17,r4
1000ab70:	dc000015 	stw	r16,0(sp)
1000ab74:	dfc00315 	stw	ra,12(sp)
1000ab78:	dc800215 	stw	r18,8(sp)
1000ab7c:	2821883a 	mov	r16,r5
1000ab80:	00062a40 	call	100062a4 <__sfp_lock_acquire>
1000ab84:	88000226 	beq	r17,zero,1000ab90 <_fclose_r+0x30>
1000ab88:	88800e17 	ldw	r2,56(r17)
1000ab8c:	10002926 	beq	r2,zero,1000ac34 <_fclose_r+0xd4>
1000ab90:	8080030f 	ldh	r2,12(r16)
1000ab94:	10002226 	beq	r2,zero,1000ac20 <_fclose_r+0xc0>
1000ab98:	8809883a 	mov	r4,r17
1000ab9c:	800b883a 	mov	r5,r16
1000aba0:	0005cd80 	call	10005cd8 <_fflush_r>
1000aba4:	1025883a 	mov	r18,r2
1000aba8:	80800b17 	ldw	r2,44(r16)
1000abac:	10000426 	beq	r2,zero,1000abc0 <_fclose_r+0x60>
1000abb0:	81400717 	ldw	r5,28(r16)
1000abb4:	8809883a 	mov	r4,r17
1000abb8:	103ee83a 	callr	r2
1000abbc:	10002616 	blt	r2,zero,1000ac58 <_fclose_r+0xf8>
1000abc0:	8080030b 	ldhu	r2,12(r16)
1000abc4:	1080200c 	andi	r2,r2,128
1000abc8:	10001f1e 	bne	r2,zero,1000ac48 <_fclose_r+0xe8>
1000abcc:	81400c17 	ldw	r5,48(r16)
1000abd0:	28000526 	beq	r5,zero,1000abe8 <_fclose_r+0x88>
1000abd4:	80801004 	addi	r2,r16,64
1000abd8:	28800226 	beq	r5,r2,1000abe4 <_fclose_r+0x84>
1000abdc:	8809883a 	mov	r4,r17
1000abe0:	00064080 	call	10006408 <_free_r>
1000abe4:	80000c15 	stw	zero,48(r16)
1000abe8:	81401117 	ldw	r5,68(r16)
1000abec:	28000326 	beq	r5,zero,1000abfc <_fclose_r+0x9c>
1000abf0:	8809883a 	mov	r4,r17
1000abf4:	00064080 	call	10006408 <_free_r>
1000abf8:	80001115 	stw	zero,68(r16)
1000abfc:	8000030d 	sth	zero,12(r16)
1000ac00:	00062a80 	call	100062a8 <__sfp_lock_release>
1000ac04:	9005883a 	mov	r2,r18
1000ac08:	dfc00317 	ldw	ra,12(sp)
1000ac0c:	dc800217 	ldw	r18,8(sp)
1000ac10:	dc400117 	ldw	r17,4(sp)
1000ac14:	dc000017 	ldw	r16,0(sp)
1000ac18:	dec00404 	addi	sp,sp,16
1000ac1c:	f800283a 	ret
1000ac20:	00062a80 	call	100062a8 <__sfp_lock_release>
1000ac24:	0005883a 	mov	r2,zero
1000ac28:	003ff706 	br	1000ac08 <__alt_data_end+0xf800ac08>
1000ac2c:	0005883a 	mov	r2,zero
1000ac30:	f800283a 	ret
1000ac34:	8809883a 	mov	r4,r17
1000ac38:	00062940 	call	10006294 <__sinit>
1000ac3c:	8080030f 	ldh	r2,12(r16)
1000ac40:	103fd51e 	bne	r2,zero,1000ab98 <__alt_data_end+0xf800ab98>
1000ac44:	003ff606 	br	1000ac20 <__alt_data_end+0xf800ac20>
1000ac48:	81400417 	ldw	r5,16(r16)
1000ac4c:	8809883a 	mov	r4,r17
1000ac50:	00064080 	call	10006408 <_free_r>
1000ac54:	003fdd06 	br	1000abcc <__alt_data_end+0xf800abcc>
1000ac58:	04bfffc4 	movi	r18,-1
1000ac5c:	003fd806 	br	1000abc0 <__alt_data_end+0xf800abc0>

1000ac60 <fclose>:
1000ac60:	00840074 	movhi	r2,4097
1000ac64:	10835704 	addi	r2,r2,3420
1000ac68:	200b883a 	mov	r5,r4
1000ac6c:	11000017 	ldw	r4,0(r2)
1000ac70:	000ab601 	jmpi	1000ab60 <_fclose_r>

1000ac74 <_fputwc_r>:
1000ac74:	3080030b 	ldhu	r2,12(r6)
1000ac78:	defff804 	addi	sp,sp,-32
1000ac7c:	dcc00415 	stw	r19,16(sp)
1000ac80:	dc800315 	stw	r18,12(sp)
1000ac84:	dc000115 	stw	r16,4(sp)
1000ac88:	dfc00715 	stw	ra,28(sp)
1000ac8c:	dd400615 	stw	r21,24(sp)
1000ac90:	dd000515 	stw	r20,20(sp)
1000ac94:	dc400215 	stw	r17,8(sp)
1000ac98:	10c8000c 	andi	r3,r2,8192
1000ac9c:	3021883a 	mov	r16,r6
1000aca0:	2027883a 	mov	r19,r4
1000aca4:	2825883a 	mov	r18,r5
1000aca8:	1800051e 	bne	r3,zero,1000acc0 <_fputwc_r+0x4c>
1000acac:	30c01917 	ldw	r3,100(r6)
1000acb0:	10880014 	ori	r2,r2,8192
1000acb4:	3080030d 	sth	r2,12(r6)
1000acb8:	18880014 	ori	r2,r3,8192
1000acbc:	30801915 	stw	r2,100(r6)
1000acc0:	0006d940 	call	10006d94 <__locale_mb_cur_max>
1000acc4:	00c00044 	movi	r3,1
1000acc8:	10c03e26 	beq	r2,r3,1000adc4 <_fputwc_r+0x150>
1000accc:	9809883a 	mov	r4,r19
1000acd0:	d80b883a 	mov	r5,sp
1000acd4:	900d883a 	mov	r6,r18
1000acd8:	81c01704 	addi	r7,r16,92
1000acdc:	000b1240 	call	1000b124 <_wcrtomb_r>
1000ace0:	1029883a 	mov	r20,r2
1000ace4:	00bfffc4 	movi	r2,-1
1000ace8:	a0802026 	beq	r20,r2,1000ad6c <_fputwc_r+0xf8>
1000acec:	d9400003 	ldbu	r5,0(sp)
1000acf0:	a0001c26 	beq	r20,zero,1000ad64 <_fputwc_r+0xf0>
1000acf4:	0023883a 	mov	r17,zero
1000acf8:	05400284 	movi	r21,10
1000acfc:	00000906 	br	1000ad24 <_fputwc_r+0xb0>
1000ad00:	80800017 	ldw	r2,0(r16)
1000ad04:	11400005 	stb	r5,0(r2)
1000ad08:	80c00017 	ldw	r3,0(r16)
1000ad0c:	18c00044 	addi	r3,r3,1
1000ad10:	80c00015 	stw	r3,0(r16)
1000ad14:	8c400044 	addi	r17,r17,1
1000ad18:	dc45883a 	add	r2,sp,r17
1000ad1c:	8d00112e 	bgeu	r17,r20,1000ad64 <_fputwc_r+0xf0>
1000ad20:	11400003 	ldbu	r5,0(r2)
1000ad24:	80c00217 	ldw	r3,8(r16)
1000ad28:	18ffffc4 	addi	r3,r3,-1
1000ad2c:	80c00215 	stw	r3,8(r16)
1000ad30:	183ff30e 	bge	r3,zero,1000ad00 <__alt_data_end+0xf800ad00>
1000ad34:	80800617 	ldw	r2,24(r16)
1000ad38:	18801916 	blt	r3,r2,1000ada0 <_fputwc_r+0x12c>
1000ad3c:	80800017 	ldw	r2,0(r16)
1000ad40:	11400005 	stb	r5,0(r2)
1000ad44:	80800017 	ldw	r2,0(r16)
1000ad48:	10c00003 	ldbu	r3,0(r2)
1000ad4c:	10800044 	addi	r2,r2,1
1000ad50:	1d402326 	beq	r3,r21,1000ade0 <_fputwc_r+0x16c>
1000ad54:	80800015 	stw	r2,0(r16)
1000ad58:	8c400044 	addi	r17,r17,1
1000ad5c:	dc45883a 	add	r2,sp,r17
1000ad60:	8d3fef36 	bltu	r17,r20,1000ad20 <__alt_data_end+0xf800ad20>
1000ad64:	9005883a 	mov	r2,r18
1000ad68:	00000406 	br	1000ad7c <_fputwc_r+0x108>
1000ad6c:	80c0030b 	ldhu	r3,12(r16)
1000ad70:	a005883a 	mov	r2,r20
1000ad74:	18c01014 	ori	r3,r3,64
1000ad78:	80c0030d 	sth	r3,12(r16)
1000ad7c:	dfc00717 	ldw	ra,28(sp)
1000ad80:	dd400617 	ldw	r21,24(sp)
1000ad84:	dd000517 	ldw	r20,20(sp)
1000ad88:	dcc00417 	ldw	r19,16(sp)
1000ad8c:	dc800317 	ldw	r18,12(sp)
1000ad90:	dc400217 	ldw	r17,8(sp)
1000ad94:	dc000117 	ldw	r16,4(sp)
1000ad98:	dec00804 	addi	sp,sp,32
1000ad9c:	f800283a 	ret
1000ada0:	9809883a 	mov	r4,r19
1000ada4:	29403fcc 	andi	r5,r5,255
1000ada8:	800d883a 	mov	r6,r16
1000adac:	000afb40 	call	1000afb4 <__swbuf_r>
1000adb0:	10bfffe0 	cmpeqi	r2,r2,-1
1000adb4:	10803fcc 	andi	r2,r2,255
1000adb8:	103fd626 	beq	r2,zero,1000ad14 <__alt_data_end+0xf800ad14>
1000adbc:	00bfffc4 	movi	r2,-1
1000adc0:	003fee06 	br	1000ad7c <__alt_data_end+0xf800ad7c>
1000adc4:	90ffffc4 	addi	r3,r18,-1
1000adc8:	01003f84 	movi	r4,254
1000adcc:	20ffbf36 	bltu	r4,r3,1000accc <__alt_data_end+0xf800accc>
1000add0:	900b883a 	mov	r5,r18
1000add4:	dc800005 	stb	r18,0(sp)
1000add8:	1029883a 	mov	r20,r2
1000addc:	003fc506 	br	1000acf4 <__alt_data_end+0xf800acf4>
1000ade0:	9809883a 	mov	r4,r19
1000ade4:	a80b883a 	mov	r5,r21
1000ade8:	800d883a 	mov	r6,r16
1000adec:	000afb40 	call	1000afb4 <__swbuf_r>
1000adf0:	10bfffe0 	cmpeqi	r2,r2,-1
1000adf4:	003fef06 	br	1000adb4 <__alt_data_end+0xf800adb4>

1000adf8 <fputwc>:
1000adf8:	defffc04 	addi	sp,sp,-16
1000adfc:	dc000115 	stw	r16,4(sp)
1000ae00:	04040074 	movhi	r16,4097
1000ae04:	84035704 	addi	r16,r16,3420
1000ae08:	dc400215 	stw	r17,8(sp)
1000ae0c:	2023883a 	mov	r17,r4
1000ae10:	81000017 	ldw	r4,0(r16)
1000ae14:	dfc00315 	stw	ra,12(sp)
1000ae18:	280d883a 	mov	r6,r5
1000ae1c:	20000626 	beq	r4,zero,1000ae38 <fputwc+0x40>
1000ae20:	20800e17 	ldw	r2,56(r4)
1000ae24:	1000041e 	bne	r2,zero,1000ae38 <fputwc+0x40>
1000ae28:	d9400015 	stw	r5,0(sp)
1000ae2c:	00062940 	call	10006294 <__sinit>
1000ae30:	81000017 	ldw	r4,0(r16)
1000ae34:	d9800017 	ldw	r6,0(sp)
1000ae38:	880b883a 	mov	r5,r17
1000ae3c:	dfc00317 	ldw	ra,12(sp)
1000ae40:	dc400217 	ldw	r17,8(sp)
1000ae44:	dc000117 	ldw	r16,4(sp)
1000ae48:	dec00404 	addi	sp,sp,16
1000ae4c:	000ac741 	jmpi	1000ac74 <_fputwc_r>

1000ae50 <_fstat_r>:
1000ae50:	defffd04 	addi	sp,sp,-12
1000ae54:	dc000015 	stw	r16,0(sp)
1000ae58:	04040074 	movhi	r16,4097
1000ae5c:	dc400115 	stw	r17,4(sp)
1000ae60:	84060a04 	addi	r16,r16,6184
1000ae64:	2023883a 	mov	r17,r4
1000ae68:	2809883a 	mov	r4,r5
1000ae6c:	300b883a 	mov	r5,r6
1000ae70:	dfc00215 	stw	ra,8(sp)
1000ae74:	80000015 	stw	zero,0(r16)
1000ae78:	000ea740 	call	1000ea74 <fstat>
1000ae7c:	00ffffc4 	movi	r3,-1
1000ae80:	10c00526 	beq	r2,r3,1000ae98 <_fstat_r+0x48>
1000ae84:	dfc00217 	ldw	ra,8(sp)
1000ae88:	dc400117 	ldw	r17,4(sp)
1000ae8c:	dc000017 	ldw	r16,0(sp)
1000ae90:	dec00304 	addi	sp,sp,12
1000ae94:	f800283a 	ret
1000ae98:	80c00017 	ldw	r3,0(r16)
1000ae9c:	183ff926 	beq	r3,zero,1000ae84 <__alt_data_end+0xf800ae84>
1000aea0:	88c00015 	stw	r3,0(r17)
1000aea4:	003ff706 	br	1000ae84 <__alt_data_end+0xf800ae84>

1000aea8 <_isatty_r>:
1000aea8:	defffd04 	addi	sp,sp,-12
1000aeac:	dc000015 	stw	r16,0(sp)
1000aeb0:	04040074 	movhi	r16,4097
1000aeb4:	dc400115 	stw	r17,4(sp)
1000aeb8:	84060a04 	addi	r16,r16,6184
1000aebc:	2023883a 	mov	r17,r4
1000aec0:	2809883a 	mov	r4,r5
1000aec4:	dfc00215 	stw	ra,8(sp)
1000aec8:	80000015 	stw	zero,0(r16)
1000aecc:	000eb7c0 	call	1000eb7c <isatty>
1000aed0:	00ffffc4 	movi	r3,-1
1000aed4:	10c00526 	beq	r2,r3,1000aeec <_isatty_r+0x44>
1000aed8:	dfc00217 	ldw	ra,8(sp)
1000aedc:	dc400117 	ldw	r17,4(sp)
1000aee0:	dc000017 	ldw	r16,0(sp)
1000aee4:	dec00304 	addi	sp,sp,12
1000aee8:	f800283a 	ret
1000aeec:	80c00017 	ldw	r3,0(r16)
1000aef0:	183ff926 	beq	r3,zero,1000aed8 <__alt_data_end+0xf800aed8>
1000aef4:	88c00015 	stw	r3,0(r17)
1000aef8:	003ff706 	br	1000aed8 <__alt_data_end+0xf800aed8>

1000aefc <_lseek_r>:
1000aefc:	defffd04 	addi	sp,sp,-12
1000af00:	dc000015 	stw	r16,0(sp)
1000af04:	04040074 	movhi	r16,4097
1000af08:	dc400115 	stw	r17,4(sp)
1000af0c:	84060a04 	addi	r16,r16,6184
1000af10:	2023883a 	mov	r17,r4
1000af14:	2809883a 	mov	r4,r5
1000af18:	300b883a 	mov	r5,r6
1000af1c:	380d883a 	mov	r6,r7
1000af20:	dfc00215 	stw	ra,8(sp)
1000af24:	80000015 	stw	zero,0(r16)
1000af28:	000ed5c0 	call	1000ed5c <lseek>
1000af2c:	00ffffc4 	movi	r3,-1
1000af30:	10c00526 	beq	r2,r3,1000af48 <_lseek_r+0x4c>
1000af34:	dfc00217 	ldw	ra,8(sp)
1000af38:	dc400117 	ldw	r17,4(sp)
1000af3c:	dc000017 	ldw	r16,0(sp)
1000af40:	dec00304 	addi	sp,sp,12
1000af44:	f800283a 	ret
1000af48:	80c00017 	ldw	r3,0(r16)
1000af4c:	183ff926 	beq	r3,zero,1000af34 <__alt_data_end+0xf800af34>
1000af50:	88c00015 	stw	r3,0(r17)
1000af54:	003ff706 	br	1000af34 <__alt_data_end+0xf800af34>

1000af58 <_read_r>:
1000af58:	defffd04 	addi	sp,sp,-12
1000af5c:	dc000015 	stw	r16,0(sp)
1000af60:	04040074 	movhi	r16,4097
1000af64:	dc400115 	stw	r17,4(sp)
1000af68:	84060a04 	addi	r16,r16,6184
1000af6c:	2023883a 	mov	r17,r4
1000af70:	2809883a 	mov	r4,r5
1000af74:	300b883a 	mov	r5,r6
1000af78:	380d883a 	mov	r6,r7
1000af7c:	dfc00215 	stw	ra,8(sp)
1000af80:	80000015 	stw	zero,0(r16)
1000af84:	000ef240 	call	1000ef24 <read>
1000af88:	00ffffc4 	movi	r3,-1
1000af8c:	10c00526 	beq	r2,r3,1000afa4 <_read_r+0x4c>
1000af90:	dfc00217 	ldw	ra,8(sp)
1000af94:	dc400117 	ldw	r17,4(sp)
1000af98:	dc000017 	ldw	r16,0(sp)
1000af9c:	dec00304 	addi	sp,sp,12
1000afa0:	f800283a 	ret
1000afa4:	80c00017 	ldw	r3,0(r16)
1000afa8:	183ff926 	beq	r3,zero,1000af90 <__alt_data_end+0xf800af90>
1000afac:	88c00015 	stw	r3,0(r17)
1000afb0:	003ff706 	br	1000af90 <__alt_data_end+0xf800af90>

1000afb4 <__swbuf_r>:
1000afb4:	defffc04 	addi	sp,sp,-16
1000afb8:	dc800215 	stw	r18,8(sp)
1000afbc:	dc400115 	stw	r17,4(sp)
1000afc0:	dc000015 	stw	r16,0(sp)
1000afc4:	dfc00315 	stw	ra,12(sp)
1000afc8:	2025883a 	mov	r18,r4
1000afcc:	2823883a 	mov	r17,r5
1000afd0:	3021883a 	mov	r16,r6
1000afd4:	20000226 	beq	r4,zero,1000afe0 <__swbuf_r+0x2c>
1000afd8:	20800e17 	ldw	r2,56(r4)
1000afdc:	10004126 	beq	r2,zero,1000b0e4 <__swbuf_r+0x130>
1000afe0:	80c00617 	ldw	r3,24(r16)
1000afe4:	8180030b 	ldhu	r6,12(r16)
1000afe8:	80c00215 	stw	r3,8(r16)
1000afec:	30c0020c 	andi	r3,r6,8
1000aff0:	18003526 	beq	r3,zero,1000b0c8 <__swbuf_r+0x114>
1000aff4:	80c00417 	ldw	r3,16(r16)
1000aff8:	18003326 	beq	r3,zero,1000b0c8 <__swbuf_r+0x114>
1000affc:	3088000c 	andi	r2,r6,8192
1000b000:	8c403fcc 	andi	r17,r17,255
1000b004:	10001726 	beq	r2,zero,1000b064 <__swbuf_r+0xb0>
1000b008:	80800017 	ldw	r2,0(r16)
1000b00c:	81000517 	ldw	r4,20(r16)
1000b010:	10c7c83a 	sub	r3,r2,r3
1000b014:	19001d0e 	bge	r3,r4,1000b08c <__swbuf_r+0xd8>
1000b018:	18c00044 	addi	r3,r3,1
1000b01c:	81400217 	ldw	r5,8(r16)
1000b020:	11000044 	addi	r4,r2,1
1000b024:	81000015 	stw	r4,0(r16)
1000b028:	297fffc4 	addi	r5,r5,-1
1000b02c:	81400215 	stw	r5,8(r16)
1000b030:	14400005 	stb	r17,0(r2)
1000b034:	80800517 	ldw	r2,20(r16)
1000b038:	10c01d26 	beq	r2,r3,1000b0b0 <__swbuf_r+0xfc>
1000b03c:	8080030b 	ldhu	r2,12(r16)
1000b040:	1080004c 	andi	r2,r2,1
1000b044:	1000181e 	bne	r2,zero,1000b0a8 <__swbuf_r+0xf4>
1000b048:	8805883a 	mov	r2,r17
1000b04c:	dfc00317 	ldw	ra,12(sp)
1000b050:	dc800217 	ldw	r18,8(sp)
1000b054:	dc400117 	ldw	r17,4(sp)
1000b058:	dc000017 	ldw	r16,0(sp)
1000b05c:	dec00404 	addi	sp,sp,16
1000b060:	f800283a 	ret
1000b064:	81001917 	ldw	r4,100(r16)
1000b068:	00b7ffc4 	movi	r2,-8193
1000b06c:	31880014 	ori	r6,r6,8192
1000b070:	2084703a 	and	r2,r4,r2
1000b074:	80801915 	stw	r2,100(r16)
1000b078:	80800017 	ldw	r2,0(r16)
1000b07c:	81000517 	ldw	r4,20(r16)
1000b080:	8180030d 	sth	r6,12(r16)
1000b084:	10c7c83a 	sub	r3,r2,r3
1000b088:	193fe316 	blt	r3,r4,1000b018 <__alt_data_end+0xf800b018>
1000b08c:	9009883a 	mov	r4,r18
1000b090:	800b883a 	mov	r5,r16
1000b094:	0005cd80 	call	10005cd8 <_fflush_r>
1000b098:	1000091e 	bne	r2,zero,1000b0c0 <__swbuf_r+0x10c>
1000b09c:	80800017 	ldw	r2,0(r16)
1000b0a0:	00c00044 	movi	r3,1
1000b0a4:	003fdd06 	br	1000b01c <__alt_data_end+0xf800b01c>
1000b0a8:	00800284 	movi	r2,10
1000b0ac:	88bfe61e 	bne	r17,r2,1000b048 <__alt_data_end+0xf800b048>
1000b0b0:	9009883a 	mov	r4,r18
1000b0b4:	800b883a 	mov	r5,r16
1000b0b8:	0005cd80 	call	10005cd8 <_fflush_r>
1000b0bc:	103fe226 	beq	r2,zero,1000b048 <__alt_data_end+0xf800b048>
1000b0c0:	00bfffc4 	movi	r2,-1
1000b0c4:	003fe106 	br	1000b04c <__alt_data_end+0xf800b04c>
1000b0c8:	9009883a 	mov	r4,r18
1000b0cc:	800b883a 	mov	r5,r16
1000b0d0:	00042580 	call	10004258 <__swsetup_r>
1000b0d4:	1000051e 	bne	r2,zero,1000b0ec <__swbuf_r+0x138>
1000b0d8:	8180030b 	ldhu	r6,12(r16)
1000b0dc:	80c00417 	ldw	r3,16(r16)
1000b0e0:	003fc606 	br	1000affc <__alt_data_end+0xf800affc>
1000b0e4:	00062940 	call	10006294 <__sinit>
1000b0e8:	003fbd06 	br	1000afe0 <__alt_data_end+0xf800afe0>
1000b0ec:	80c0030b 	ldhu	r3,12(r16)
1000b0f0:	00bfffc4 	movi	r2,-1
1000b0f4:	18c01014 	ori	r3,r3,64
1000b0f8:	80c0030d 	sth	r3,12(r16)
1000b0fc:	00c00244 	movi	r3,9
1000b100:	90c00015 	stw	r3,0(r18)
1000b104:	003fd106 	br	1000b04c <__alt_data_end+0xf800b04c>

1000b108 <__swbuf>:
1000b108:	00c40074 	movhi	r3,4097
1000b10c:	18c35704 	addi	r3,r3,3420
1000b110:	2005883a 	mov	r2,r4
1000b114:	19000017 	ldw	r4,0(r3)
1000b118:	280d883a 	mov	r6,r5
1000b11c:	100b883a 	mov	r5,r2
1000b120:	000afb41 	jmpi	1000afb4 <__swbuf_r>

1000b124 <_wcrtomb_r>:
1000b124:	defff604 	addi	sp,sp,-40
1000b128:	00840074 	movhi	r2,4097
1000b12c:	dc800815 	stw	r18,32(sp)
1000b130:	dc400715 	stw	r17,28(sp)
1000b134:	dc000615 	stw	r16,24(sp)
1000b138:	10835b04 	addi	r2,r2,3436
1000b13c:	dfc00915 	stw	ra,36(sp)
1000b140:	2021883a 	mov	r16,r4
1000b144:	3823883a 	mov	r17,r7
1000b148:	14800017 	ldw	r18,0(r2)
1000b14c:	28001426 	beq	r5,zero,1000b1a0 <_wcrtomb_r+0x7c>
1000b150:	d9400415 	stw	r5,16(sp)
1000b154:	d9800515 	stw	r6,20(sp)
1000b158:	0006d880 	call	10006d88 <__locale_charset>
1000b15c:	d9400417 	ldw	r5,16(sp)
1000b160:	d9800517 	ldw	r6,20(sp)
1000b164:	8009883a 	mov	r4,r16
1000b168:	dc400015 	stw	r17,0(sp)
1000b16c:	100f883a 	mov	r7,r2
1000b170:	903ee83a 	callr	r18
1000b174:	00ffffc4 	movi	r3,-1
1000b178:	10c0031e 	bne	r2,r3,1000b188 <_wcrtomb_r+0x64>
1000b17c:	88000015 	stw	zero,0(r17)
1000b180:	00c02284 	movi	r3,138
1000b184:	80c00015 	stw	r3,0(r16)
1000b188:	dfc00917 	ldw	ra,36(sp)
1000b18c:	dc800817 	ldw	r18,32(sp)
1000b190:	dc400717 	ldw	r17,28(sp)
1000b194:	dc000617 	ldw	r16,24(sp)
1000b198:	dec00a04 	addi	sp,sp,40
1000b19c:	f800283a 	ret
1000b1a0:	0006d880 	call	10006d88 <__locale_charset>
1000b1a4:	8009883a 	mov	r4,r16
1000b1a8:	dc400015 	stw	r17,0(sp)
1000b1ac:	d9400104 	addi	r5,sp,4
1000b1b0:	000d883a 	mov	r6,zero
1000b1b4:	100f883a 	mov	r7,r2
1000b1b8:	903ee83a 	callr	r18
1000b1bc:	003fed06 	br	1000b174 <__alt_data_end+0xf800b174>

1000b1c0 <wcrtomb>:
1000b1c0:	defff504 	addi	sp,sp,-44
1000b1c4:	dc400515 	stw	r17,20(sp)
1000b1c8:	dc000415 	stw	r16,16(sp)
1000b1cc:	dfc00a15 	stw	ra,40(sp)
1000b1d0:	dd400915 	stw	r21,36(sp)
1000b1d4:	dd000815 	stw	r20,32(sp)
1000b1d8:	dcc00715 	stw	r19,28(sp)
1000b1dc:	dc800615 	stw	r18,24(sp)
1000b1e0:	2021883a 	mov	r16,r4
1000b1e4:	3023883a 	mov	r17,r6
1000b1e8:	20001d26 	beq	r4,zero,1000b260 <wcrtomb+0xa0>
1000b1ec:	04840074 	movhi	r18,4097
1000b1f0:	94835704 	addi	r18,r18,3420
1000b1f4:	00840074 	movhi	r2,4097
1000b1f8:	95400017 	ldw	r21,0(r18)
1000b1fc:	10835b04 	addi	r2,r2,3436
1000b200:	15000017 	ldw	r20,0(r2)
1000b204:	2827883a 	mov	r19,r5
1000b208:	0006d880 	call	10006d88 <__locale_charset>
1000b20c:	a809883a 	mov	r4,r21
1000b210:	dc400015 	stw	r17,0(sp)
1000b214:	800b883a 	mov	r5,r16
1000b218:	980d883a 	mov	r6,r19
1000b21c:	100f883a 	mov	r7,r2
1000b220:	a03ee83a 	callr	r20
1000b224:	00ffffc4 	movi	r3,-1
1000b228:	10c0041e 	bne	r2,r3,1000b23c <wcrtomb+0x7c>
1000b22c:	90c00017 	ldw	r3,0(r18)
1000b230:	01002284 	movi	r4,138
1000b234:	88000015 	stw	zero,0(r17)
1000b238:	19000015 	stw	r4,0(r3)
1000b23c:	dfc00a17 	ldw	ra,40(sp)
1000b240:	dd400917 	ldw	r21,36(sp)
1000b244:	dd000817 	ldw	r20,32(sp)
1000b248:	dcc00717 	ldw	r19,28(sp)
1000b24c:	dc800617 	ldw	r18,24(sp)
1000b250:	dc400517 	ldw	r17,20(sp)
1000b254:	dc000417 	ldw	r16,16(sp)
1000b258:	dec00b04 	addi	sp,sp,44
1000b25c:	f800283a 	ret
1000b260:	04840074 	movhi	r18,4097
1000b264:	94835704 	addi	r18,r18,3420
1000b268:	00840074 	movhi	r2,4097
1000b26c:	94c00017 	ldw	r19,0(r18)
1000b270:	10835b04 	addi	r2,r2,3436
1000b274:	14000017 	ldw	r16,0(r2)
1000b278:	0006d880 	call	10006d88 <__locale_charset>
1000b27c:	9809883a 	mov	r4,r19
1000b280:	dc400015 	stw	r17,0(sp)
1000b284:	d9400104 	addi	r5,sp,4
1000b288:	000d883a 	mov	r6,zero
1000b28c:	100f883a 	mov	r7,r2
1000b290:	803ee83a 	callr	r16
1000b294:	003fe306 	br	1000b224 <__alt_data_end+0xf800b224>

1000b298 <__ascii_wctomb>:
1000b298:	28000526 	beq	r5,zero,1000b2b0 <__ascii_wctomb+0x18>
1000b29c:	00803fc4 	movi	r2,255
1000b2a0:	11800536 	bltu	r2,r6,1000b2b8 <__ascii_wctomb+0x20>
1000b2a4:	29800005 	stb	r6,0(r5)
1000b2a8:	00800044 	movi	r2,1
1000b2ac:	f800283a 	ret
1000b2b0:	0005883a 	mov	r2,zero
1000b2b4:	f800283a 	ret
1000b2b8:	00802284 	movi	r2,138
1000b2bc:	20800015 	stw	r2,0(r4)
1000b2c0:	00bfffc4 	movi	r2,-1
1000b2c4:	f800283a 	ret

1000b2c8 <_wctomb_r>:
1000b2c8:	00840074 	movhi	r2,4097
1000b2cc:	defff904 	addi	sp,sp,-28
1000b2d0:	10835b04 	addi	r2,r2,3436
1000b2d4:	dfc00615 	stw	ra,24(sp)
1000b2d8:	dc400515 	stw	r17,20(sp)
1000b2dc:	dc000415 	stw	r16,16(sp)
1000b2e0:	3823883a 	mov	r17,r7
1000b2e4:	14000017 	ldw	r16,0(r2)
1000b2e8:	d9000115 	stw	r4,4(sp)
1000b2ec:	d9400215 	stw	r5,8(sp)
1000b2f0:	d9800315 	stw	r6,12(sp)
1000b2f4:	0006d880 	call	10006d88 <__locale_charset>
1000b2f8:	d9000117 	ldw	r4,4(sp)
1000b2fc:	d9400217 	ldw	r5,8(sp)
1000b300:	d9800317 	ldw	r6,12(sp)
1000b304:	dc400015 	stw	r17,0(sp)
1000b308:	100f883a 	mov	r7,r2
1000b30c:	803ee83a 	callr	r16
1000b310:	dfc00617 	ldw	ra,24(sp)
1000b314:	dc400517 	ldw	r17,20(sp)
1000b318:	dc000417 	ldw	r16,16(sp)
1000b31c:	dec00704 	addi	sp,sp,28
1000b320:	f800283a 	ret

1000b324 <__udivdi3>:
1000b324:	defff504 	addi	sp,sp,-44
1000b328:	dcc00415 	stw	r19,16(sp)
1000b32c:	dc000115 	stw	r16,4(sp)
1000b330:	dfc00a15 	stw	ra,40(sp)
1000b334:	df000915 	stw	fp,36(sp)
1000b338:	ddc00815 	stw	r23,32(sp)
1000b33c:	dd800715 	stw	r22,28(sp)
1000b340:	dd400615 	stw	r21,24(sp)
1000b344:	dd000515 	stw	r20,20(sp)
1000b348:	dc800315 	stw	r18,12(sp)
1000b34c:	dc400215 	stw	r17,8(sp)
1000b350:	2027883a 	mov	r19,r4
1000b354:	2821883a 	mov	r16,r5
1000b358:	3800471e 	bne	r7,zero,1000b478 <__udivdi3+0x154>
1000b35c:	3025883a 	mov	r18,r6
1000b360:	2023883a 	mov	r17,r4
1000b364:	2980592e 	bgeu	r5,r6,1000b4cc <__udivdi3+0x1a8>
1000b368:	00bfffd4 	movui	r2,65535
1000b36c:	2829883a 	mov	r20,r5
1000b370:	1180b236 	bltu	r2,r6,1000b63c <__udivdi3+0x318>
1000b374:	00803fc4 	movi	r2,255
1000b378:	1181622e 	bgeu	r2,r6,1000b904 <__udivdi3+0x5e0>
1000b37c:	00800204 	movi	r2,8
1000b380:	1007883a 	mov	r3,r2
1000b384:	3084d83a 	srl	r2,r6,r2
1000b388:	01040074 	movhi	r4,4097
1000b38c:	21008004 	addi	r4,r4,512
1000b390:	2085883a 	add	r2,r4,r2
1000b394:	11000003 	ldbu	r4,0(r2)
1000b398:	20c9883a 	add	r4,r4,r3
1000b39c:	00c00804 	movi	r3,32
1000b3a0:	1907c83a 	sub	r3,r3,r4
1000b3a4:	18000526 	beq	r3,zero,1000b3bc <__udivdi3+0x98>
1000b3a8:	80e0983a 	sll	r16,r16,r3
1000b3ac:	9908d83a 	srl	r4,r19,r4
1000b3b0:	30e4983a 	sll	r18,r6,r3
1000b3b4:	98e2983a 	sll	r17,r19,r3
1000b3b8:	8128b03a 	or	r20,r16,r4
1000b3bc:	902ad43a 	srli	r21,r18,16
1000b3c0:	a009883a 	mov	r4,r20
1000b3c4:	95bfffcc 	andi	r22,r18,65535
1000b3c8:	a80b883a 	mov	r5,r21
1000b3cc:	000c0a40 	call	1000c0a4 <__umodsi3>
1000b3d0:	a009883a 	mov	r4,r20
1000b3d4:	a80b883a 	mov	r5,r21
1000b3d8:	102f883a 	mov	r23,r2
1000b3dc:	000c09c0 	call	1000c09c <__udivsi3>
1000b3e0:	1009883a 	mov	r4,r2
1000b3e4:	b00b883a 	mov	r5,r22
1000b3e8:	1021883a 	mov	r16,r2
1000b3ec:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b3f0:	b82e943a 	slli	r23,r23,16
1000b3f4:	8808d43a 	srli	r4,r17,16
1000b3f8:	b906b03a 	or	r3,r23,r4
1000b3fc:	1880052e 	bgeu	r3,r2,1000b414 <__udivdi3+0xf0>
1000b400:	1c87883a 	add	r3,r3,r18
1000b404:	813fffc4 	addi	r4,r16,-1
1000b408:	1c800136 	bltu	r3,r18,1000b410 <__udivdi3+0xec>
1000b40c:	18815236 	bltu	r3,r2,1000b958 <__udivdi3+0x634>
1000b410:	2021883a 	mov	r16,r4
1000b414:	18a7c83a 	sub	r19,r3,r2
1000b418:	9809883a 	mov	r4,r19
1000b41c:	a80b883a 	mov	r5,r21
1000b420:	000c0a40 	call	1000c0a4 <__umodsi3>
1000b424:	1029883a 	mov	r20,r2
1000b428:	9809883a 	mov	r4,r19
1000b42c:	a80b883a 	mov	r5,r21
1000b430:	a028943a 	slli	r20,r20,16
1000b434:	000c09c0 	call	1000c09c <__udivsi3>
1000b438:	1009883a 	mov	r4,r2
1000b43c:	b00b883a 	mov	r5,r22
1000b440:	8c7fffcc 	andi	r17,r17,65535
1000b444:	1027883a 	mov	r19,r2
1000b448:	a462b03a 	or	r17,r20,r17
1000b44c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b450:	8880052e 	bgeu	r17,r2,1000b468 <__udivdi3+0x144>
1000b454:	8ca3883a 	add	r17,r17,r18
1000b458:	98ffffc4 	addi	r3,r19,-1
1000b45c:	8c811036 	bltu	r17,r18,1000b8a0 <__udivdi3+0x57c>
1000b460:	88810f2e 	bgeu	r17,r2,1000b8a0 <__udivdi3+0x57c>
1000b464:	9cffff84 	addi	r19,r19,-2
1000b468:	8020943a 	slli	r16,r16,16
1000b46c:	0007883a 	mov	r3,zero
1000b470:	9c04b03a 	or	r2,r19,r16
1000b474:	00006006 	br	1000b5f8 <__udivdi3+0x2d4>
1000b478:	29c05d36 	bltu	r5,r7,1000b5f0 <__udivdi3+0x2cc>
1000b47c:	00bfffd4 	movui	r2,65535
1000b480:	11c0692e 	bgeu	r2,r7,1000b628 <__udivdi3+0x304>
1000b484:	00804034 	movhi	r2,256
1000b488:	10bfffc4 	addi	r2,r2,-1
1000b48c:	11c10e2e 	bgeu	r2,r7,1000b8c8 <__udivdi3+0x5a4>
1000b490:	01400604 	movi	r5,24
1000b494:	2811883a 	mov	r8,r5
1000b498:	394ad83a 	srl	r5,r7,r5
1000b49c:	00840074 	movhi	r2,4097
1000b4a0:	10808004 	addi	r2,r2,512
1000b4a4:	114b883a 	add	r5,r2,r5
1000b4a8:	29400003 	ldbu	r5,0(r5)
1000b4ac:	00c00804 	movi	r3,32
1000b4b0:	2a0b883a 	add	r5,r5,r8
1000b4b4:	196fc83a 	sub	r23,r3,r5
1000b4b8:	b8006b1e 	bne	r23,zero,1000b668 <__udivdi3+0x344>
1000b4bc:	3c011436 	bltu	r7,r16,1000b910 <__udivdi3+0x5ec>
1000b4c0:	9985403a 	cmpgeu	r2,r19,r6
1000b4c4:	0007883a 	mov	r3,zero
1000b4c8:	00004b06 	br	1000b5f8 <__udivdi3+0x2d4>
1000b4cc:	3000041e 	bne	r6,zero,1000b4e0 <__udivdi3+0x1bc>
1000b4d0:	01000044 	movi	r4,1
1000b4d4:	000b883a 	mov	r5,zero
1000b4d8:	000c09c0 	call	1000c09c <__udivsi3>
1000b4dc:	1025883a 	mov	r18,r2
1000b4e0:	00bfffd4 	movui	r2,65535
1000b4e4:	14805b2e 	bgeu	r2,r18,1000b654 <__udivdi3+0x330>
1000b4e8:	00804034 	movhi	r2,256
1000b4ec:	10bfffc4 	addi	r2,r2,-1
1000b4f0:	1480fe2e 	bgeu	r2,r18,1000b8ec <__udivdi3+0x5c8>
1000b4f4:	00800604 	movi	r2,24
1000b4f8:	1007883a 	mov	r3,r2
1000b4fc:	9084d83a 	srl	r2,r18,r2
1000b500:	01040074 	movhi	r4,4097
1000b504:	21008004 	addi	r4,r4,512
1000b508:	2085883a 	add	r2,r4,r2
1000b50c:	11800003 	ldbu	r6,0(r2)
1000b510:	01c00804 	movi	r7,32
1000b514:	30c7883a 	add	r3,r6,r3
1000b518:	38cfc83a 	sub	r7,r7,r3
1000b51c:	3800a71e 	bne	r7,zero,1000b7bc <__udivdi3+0x498>
1000b520:	9028d43a 	srli	r20,r18,16
1000b524:	84a1c83a 	sub	r16,r16,r18
1000b528:	957fffcc 	andi	r21,r18,65535
1000b52c:	00c00044 	movi	r3,1
1000b530:	8009883a 	mov	r4,r16
1000b534:	a00b883a 	mov	r5,r20
1000b538:	d8c00015 	stw	r3,0(sp)
1000b53c:	000c0a40 	call	1000c0a4 <__umodsi3>
1000b540:	8009883a 	mov	r4,r16
1000b544:	a00b883a 	mov	r5,r20
1000b548:	102d883a 	mov	r22,r2
1000b54c:	000c09c0 	call	1000c09c <__udivsi3>
1000b550:	1009883a 	mov	r4,r2
1000b554:	a80b883a 	mov	r5,r21
1000b558:	1021883a 	mov	r16,r2
1000b55c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b560:	b02c943a 	slli	r22,r22,16
1000b564:	880ed43a 	srli	r7,r17,16
1000b568:	d8c00017 	ldw	r3,0(sp)
1000b56c:	b1ccb03a 	or	r6,r22,r7
1000b570:	3080052e 	bgeu	r6,r2,1000b588 <__udivdi3+0x264>
1000b574:	348d883a 	add	r6,r6,r18
1000b578:	813fffc4 	addi	r4,r16,-1
1000b57c:	34800136 	bltu	r6,r18,1000b584 <__udivdi3+0x260>
1000b580:	3080f236 	bltu	r6,r2,1000b94c <__udivdi3+0x628>
1000b584:	2021883a 	mov	r16,r4
1000b588:	30a7c83a 	sub	r19,r6,r2
1000b58c:	9809883a 	mov	r4,r19
1000b590:	a00b883a 	mov	r5,r20
1000b594:	d8c00015 	stw	r3,0(sp)
1000b598:	000c0a40 	call	1000c0a4 <__umodsi3>
1000b59c:	102d883a 	mov	r22,r2
1000b5a0:	9809883a 	mov	r4,r19
1000b5a4:	a00b883a 	mov	r5,r20
1000b5a8:	b02c943a 	slli	r22,r22,16
1000b5ac:	000c09c0 	call	1000c09c <__udivsi3>
1000b5b0:	1009883a 	mov	r4,r2
1000b5b4:	a80b883a 	mov	r5,r21
1000b5b8:	8c7fffcc 	andi	r17,r17,65535
1000b5bc:	1027883a 	mov	r19,r2
1000b5c0:	b462b03a 	or	r17,r22,r17
1000b5c4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b5c8:	d8c00017 	ldw	r3,0(sp)
1000b5cc:	8880052e 	bgeu	r17,r2,1000b5e4 <__udivdi3+0x2c0>
1000b5d0:	8ca3883a 	add	r17,r17,r18
1000b5d4:	993fffc4 	addi	r4,r19,-1
1000b5d8:	8c80af36 	bltu	r17,r18,1000b898 <__udivdi3+0x574>
1000b5dc:	8880ae2e 	bgeu	r17,r2,1000b898 <__udivdi3+0x574>
1000b5e0:	9cffff84 	addi	r19,r19,-2
1000b5e4:	8020943a 	slli	r16,r16,16
1000b5e8:	9c04b03a 	or	r2,r19,r16
1000b5ec:	00000206 	br	1000b5f8 <__udivdi3+0x2d4>
1000b5f0:	0007883a 	mov	r3,zero
1000b5f4:	0005883a 	mov	r2,zero
1000b5f8:	dfc00a17 	ldw	ra,40(sp)
1000b5fc:	df000917 	ldw	fp,36(sp)
1000b600:	ddc00817 	ldw	r23,32(sp)
1000b604:	dd800717 	ldw	r22,28(sp)
1000b608:	dd400617 	ldw	r21,24(sp)
1000b60c:	dd000517 	ldw	r20,20(sp)
1000b610:	dcc00417 	ldw	r19,16(sp)
1000b614:	dc800317 	ldw	r18,12(sp)
1000b618:	dc400217 	ldw	r17,8(sp)
1000b61c:	dc000117 	ldw	r16,4(sp)
1000b620:	dec00b04 	addi	sp,sp,44
1000b624:	f800283a 	ret
1000b628:	00803fc4 	movi	r2,255
1000b62c:	11c0a92e 	bgeu	r2,r7,1000b8d4 <__udivdi3+0x5b0>
1000b630:	01400204 	movi	r5,8
1000b634:	2811883a 	mov	r8,r5
1000b638:	003f9706 	br	1000b498 <__alt_data_end+0xf800b498>
1000b63c:	00804034 	movhi	r2,256
1000b640:	10bfffc4 	addi	r2,r2,-1
1000b644:	1180a62e 	bgeu	r2,r6,1000b8e0 <__udivdi3+0x5bc>
1000b648:	00800604 	movi	r2,24
1000b64c:	1007883a 	mov	r3,r2
1000b650:	003f4c06 	br	1000b384 <__alt_data_end+0xf800b384>
1000b654:	00803fc4 	movi	r2,255
1000b658:	1480a72e 	bgeu	r2,r18,1000b8f8 <__udivdi3+0x5d4>
1000b65c:	00800204 	movi	r2,8
1000b660:	1007883a 	mov	r3,r2
1000b664:	003fa506 	br	1000b4fc <__alt_data_end+0xf800b4fc>
1000b668:	3178d83a 	srl	fp,r6,r5
1000b66c:	3dce983a 	sll	r7,r7,r23
1000b670:	8168d83a 	srl	r20,r16,r5
1000b674:	9950d83a 	srl	r8,r19,r5
1000b678:	3f38b03a 	or	fp,r7,fp
1000b67c:	e024d43a 	srli	r18,fp,16
1000b680:	85e0983a 	sll	r16,r16,r23
1000b684:	a009883a 	mov	r4,r20
1000b688:	900b883a 	mov	r5,r18
1000b68c:	8220b03a 	or	r16,r16,r8
1000b690:	35ea983a 	sll	r21,r6,r23
1000b694:	000c0a40 	call	1000c0a4 <__umodsi3>
1000b698:	a009883a 	mov	r4,r20
1000b69c:	900b883a 	mov	r5,r18
1000b6a0:	1023883a 	mov	r17,r2
1000b6a4:	e5bfffcc 	andi	r22,fp,65535
1000b6a8:	000c09c0 	call	1000c09c <__udivsi3>
1000b6ac:	1009883a 	mov	r4,r2
1000b6b0:	b00b883a 	mov	r5,r22
1000b6b4:	1029883a 	mov	r20,r2
1000b6b8:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b6bc:	8806943a 	slli	r3,r17,16
1000b6c0:	8014d43a 	srli	r10,r16,16
1000b6c4:	1a92b03a 	or	r9,r3,r10
1000b6c8:	4880042e 	bgeu	r9,r2,1000b6dc <__udivdi3+0x3b8>
1000b6cc:	4f13883a 	add	r9,r9,fp
1000b6d0:	a0ffffc4 	addi	r3,r20,-1
1000b6d4:	4f00952e 	bgeu	r9,fp,1000b92c <__udivdi3+0x608>
1000b6d8:	1829883a 	mov	r20,r3
1000b6dc:	48a3c83a 	sub	r17,r9,r2
1000b6e0:	8809883a 	mov	r4,r17
1000b6e4:	900b883a 	mov	r5,r18
1000b6e8:	000c0a40 	call	1000c0a4 <__umodsi3>
1000b6ec:	8809883a 	mov	r4,r17
1000b6f0:	900b883a 	mov	r5,r18
1000b6f4:	d8800015 	stw	r2,0(sp)
1000b6f8:	000c09c0 	call	1000c09c <__udivsi3>
1000b6fc:	1009883a 	mov	r4,r2
1000b700:	b00b883a 	mov	r5,r22
1000b704:	1023883a 	mov	r17,r2
1000b708:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b70c:	d8c00017 	ldw	r3,0(sp)
1000b710:	823fffcc 	andi	r8,r16,65535
1000b714:	1806943a 	slli	r3,r3,16
1000b718:	1a20b03a 	or	r16,r3,r8
1000b71c:	8080042e 	bgeu	r16,r2,1000b730 <__udivdi3+0x40c>
1000b720:	8721883a 	add	r16,r16,fp
1000b724:	88ffffc4 	addi	r3,r17,-1
1000b728:	87007c2e 	bgeu	r16,fp,1000b91c <__udivdi3+0x5f8>
1000b72c:	1823883a 	mov	r17,r3
1000b730:	a028943a 	slli	r20,r20,16
1000b734:	acbfffcc 	andi	r18,r21,65535
1000b738:	900b883a 	mov	r5,r18
1000b73c:	8d28b03a 	or	r20,r17,r20
1000b740:	a022d43a 	srli	r17,r20,16
1000b744:	a5bfffcc 	andi	r22,r20,65535
1000b748:	b009883a 	mov	r4,r22
1000b74c:	a82ad43a 	srli	r21,r21,16
1000b750:	80a1c83a 	sub	r16,r16,r2
1000b754:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b758:	8809883a 	mov	r4,r17
1000b75c:	900b883a 	mov	r5,r18
1000b760:	1039883a 	mov	fp,r2
1000b764:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b768:	8809883a 	mov	r4,r17
1000b76c:	a80b883a 	mov	r5,r21
1000b770:	1025883a 	mov	r18,r2
1000b774:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b778:	b009883a 	mov	r4,r22
1000b77c:	a80b883a 	mov	r5,r21
1000b780:	1023883a 	mov	r17,r2
1000b784:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b788:	e006d43a 	srli	r3,fp,16
1000b78c:	9085883a 	add	r2,r18,r2
1000b790:	10c7883a 	add	r3,r2,r3
1000b794:	1c80022e 	bgeu	r3,r18,1000b7a0 <__udivdi3+0x47c>
1000b798:	00800074 	movhi	r2,1
1000b79c:	88a3883a 	add	r17,r17,r2
1000b7a0:	1808d43a 	srli	r4,r3,16
1000b7a4:	8909883a 	add	r4,r17,r4
1000b7a8:	81004436 	bltu	r16,r4,1000b8bc <__udivdi3+0x598>
1000b7ac:	81003e26 	beq	r16,r4,1000b8a8 <__udivdi3+0x584>
1000b7b0:	a005883a 	mov	r2,r20
1000b7b4:	0007883a 	mov	r3,zero
1000b7b8:	003f8f06 	br	1000b5f8 <__alt_data_end+0xf800b5f8>
1000b7bc:	91e4983a 	sll	r18,r18,r7
1000b7c0:	80eed83a 	srl	r23,r16,r3
1000b7c4:	81cc983a 	sll	r6,r16,r7
1000b7c8:	9028d43a 	srli	r20,r18,16
1000b7cc:	98c6d83a 	srl	r3,r19,r3
1000b7d0:	b809883a 	mov	r4,r23
1000b7d4:	a00b883a 	mov	r5,r20
1000b7d8:	30ecb03a 	or	r22,r6,r3
1000b7dc:	99e2983a 	sll	r17,r19,r7
1000b7e0:	000c0a40 	call	1000c0a4 <__umodsi3>
1000b7e4:	b809883a 	mov	r4,r23
1000b7e8:	a00b883a 	mov	r5,r20
1000b7ec:	1021883a 	mov	r16,r2
1000b7f0:	957fffcc 	andi	r21,r18,65535
1000b7f4:	000c09c0 	call	1000c09c <__udivsi3>
1000b7f8:	a80b883a 	mov	r5,r21
1000b7fc:	1009883a 	mov	r4,r2
1000b800:	102f883a 	mov	r23,r2
1000b804:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b808:	8020943a 	slli	r16,r16,16
1000b80c:	b00ad43a 	srli	r5,r22,16
1000b810:	814cb03a 	or	r6,r16,r5
1000b814:	3080062e 	bgeu	r6,r2,1000b830 <__udivdi3+0x50c>
1000b818:	348d883a 	add	r6,r6,r18
1000b81c:	b8ffffc4 	addi	r3,r23,-1
1000b820:	34804836 	bltu	r6,r18,1000b944 <__udivdi3+0x620>
1000b824:	3080472e 	bgeu	r6,r2,1000b944 <__udivdi3+0x620>
1000b828:	bdffff84 	addi	r23,r23,-2
1000b82c:	348d883a 	add	r6,r6,r18
1000b830:	30a7c83a 	sub	r19,r6,r2
1000b834:	9809883a 	mov	r4,r19
1000b838:	a00b883a 	mov	r5,r20
1000b83c:	000c0a40 	call	1000c0a4 <__umodsi3>
1000b840:	9809883a 	mov	r4,r19
1000b844:	a00b883a 	mov	r5,r20
1000b848:	1039883a 	mov	fp,r2
1000b84c:	000c09c0 	call	1000c09c <__udivsi3>
1000b850:	1009883a 	mov	r4,r2
1000b854:	a80b883a 	mov	r5,r21
1000b858:	e038943a 	slli	fp,fp,16
1000b85c:	1027883a 	mov	r19,r2
1000b860:	000c0ac0 	call	1000c0ac <__mulsi3>
1000b864:	b1bfffcc 	andi	r6,r22,65535
1000b868:	e18cb03a 	or	r6,fp,r6
1000b86c:	3080062e 	bgeu	r6,r2,1000b888 <__udivdi3+0x564>
1000b870:	348d883a 	add	r6,r6,r18
1000b874:	98ffffc4 	addi	r3,r19,-1
1000b878:	34803036 	bltu	r6,r18,1000b93c <__udivdi3+0x618>
1000b87c:	30802f2e 	bgeu	r6,r2,1000b93c <__udivdi3+0x618>
1000b880:	9cffff84 	addi	r19,r19,-2
1000b884:	348d883a 	add	r6,r6,r18
1000b888:	b82e943a 	slli	r23,r23,16
1000b88c:	30a1c83a 	sub	r16,r6,r2
1000b890:	9dc6b03a 	or	r3,r19,r23
1000b894:	003f2606 	br	1000b530 <__alt_data_end+0xf800b530>
1000b898:	2027883a 	mov	r19,r4
1000b89c:	003f5106 	br	1000b5e4 <__alt_data_end+0xf800b5e4>
1000b8a0:	1827883a 	mov	r19,r3
1000b8a4:	003ef006 	br	1000b468 <__alt_data_end+0xf800b468>
1000b8a8:	1808943a 	slli	r4,r3,16
1000b8ac:	9dc6983a 	sll	r3,r19,r23
1000b8b0:	e73fffcc 	andi	fp,fp,65535
1000b8b4:	2709883a 	add	r4,r4,fp
1000b8b8:	193fbd2e 	bgeu	r3,r4,1000b7b0 <__alt_data_end+0xf800b7b0>
1000b8bc:	a0bfffc4 	addi	r2,r20,-1
1000b8c0:	0007883a 	mov	r3,zero
1000b8c4:	003f4c06 	br	1000b5f8 <__alt_data_end+0xf800b5f8>
1000b8c8:	01400404 	movi	r5,16
1000b8cc:	2811883a 	mov	r8,r5
1000b8d0:	003ef106 	br	1000b498 <__alt_data_end+0xf800b498>
1000b8d4:	000b883a 	mov	r5,zero
1000b8d8:	0011883a 	mov	r8,zero
1000b8dc:	003eee06 	br	1000b498 <__alt_data_end+0xf800b498>
1000b8e0:	00800404 	movi	r2,16
1000b8e4:	1007883a 	mov	r3,r2
1000b8e8:	003ea606 	br	1000b384 <__alt_data_end+0xf800b384>
1000b8ec:	00800404 	movi	r2,16
1000b8f0:	1007883a 	mov	r3,r2
1000b8f4:	003f0106 	br	1000b4fc <__alt_data_end+0xf800b4fc>
1000b8f8:	0005883a 	mov	r2,zero
1000b8fc:	0007883a 	mov	r3,zero
1000b900:	003efe06 	br	1000b4fc <__alt_data_end+0xf800b4fc>
1000b904:	0005883a 	mov	r2,zero
1000b908:	0007883a 	mov	r3,zero
1000b90c:	003e9d06 	br	1000b384 <__alt_data_end+0xf800b384>
1000b910:	0007883a 	mov	r3,zero
1000b914:	00800044 	movi	r2,1
1000b918:	003f3706 	br	1000b5f8 <__alt_data_end+0xf800b5f8>
1000b91c:	80bf832e 	bgeu	r16,r2,1000b72c <__alt_data_end+0xf800b72c>
1000b920:	8c7fff84 	addi	r17,r17,-2
1000b924:	8721883a 	add	r16,r16,fp
1000b928:	003f8106 	br	1000b730 <__alt_data_end+0xf800b730>
1000b92c:	48bf6a2e 	bgeu	r9,r2,1000b6d8 <__alt_data_end+0xf800b6d8>
1000b930:	a53fff84 	addi	r20,r20,-2
1000b934:	4f13883a 	add	r9,r9,fp
1000b938:	003f6806 	br	1000b6dc <__alt_data_end+0xf800b6dc>
1000b93c:	1827883a 	mov	r19,r3
1000b940:	003fd106 	br	1000b888 <__alt_data_end+0xf800b888>
1000b944:	182f883a 	mov	r23,r3
1000b948:	003fb906 	br	1000b830 <__alt_data_end+0xf800b830>
1000b94c:	843fff84 	addi	r16,r16,-2
1000b950:	348d883a 	add	r6,r6,r18
1000b954:	003f0c06 	br	1000b588 <__alt_data_end+0xf800b588>
1000b958:	843fff84 	addi	r16,r16,-2
1000b95c:	1c87883a 	add	r3,r3,r18
1000b960:	003eac06 	br	1000b414 <__alt_data_end+0xf800b414>

1000b964 <__umoddi3>:
1000b964:	defff404 	addi	sp,sp,-48
1000b968:	dd800815 	stw	r22,32(sp)
1000b96c:	dc400315 	stw	r17,12(sp)
1000b970:	dc000215 	stw	r16,8(sp)
1000b974:	dfc00b15 	stw	ra,44(sp)
1000b978:	df000a15 	stw	fp,40(sp)
1000b97c:	ddc00915 	stw	r23,36(sp)
1000b980:	dd400715 	stw	r21,28(sp)
1000b984:	dd000615 	stw	r20,24(sp)
1000b988:	dcc00515 	stw	r19,20(sp)
1000b98c:	dc800415 	stw	r18,16(sp)
1000b990:	2021883a 	mov	r16,r4
1000b994:	2823883a 	mov	r17,r5
1000b998:	282d883a 	mov	r22,r5
1000b99c:	38003c1e 	bne	r7,zero,1000ba90 <__umoddi3+0x12c>
1000b9a0:	3027883a 	mov	r19,r6
1000b9a4:	2029883a 	mov	r20,r4
1000b9a8:	2980522e 	bgeu	r5,r6,1000baf4 <__umoddi3+0x190>
1000b9ac:	00bfffd4 	movui	r2,65535
1000b9b0:	1180a436 	bltu	r2,r6,1000bc44 <__umoddi3+0x2e0>
1000b9b4:	00803fc4 	movi	r2,255
1000b9b8:	11815e2e 	bgeu	r2,r6,1000bf34 <__umoddi3+0x5d0>
1000b9bc:	01400204 	movi	r5,8
1000b9c0:	2805883a 	mov	r2,r5
1000b9c4:	314ad83a 	srl	r5,r6,r5
1000b9c8:	00c40074 	movhi	r3,4097
1000b9cc:	18c08004 	addi	r3,r3,512
1000b9d0:	194b883a 	add	r5,r3,r5
1000b9d4:	29000003 	ldbu	r4,0(r5)
1000b9d8:	2089883a 	add	r4,r4,r2
1000b9dc:	00800804 	movi	r2,32
1000b9e0:	1105c83a 	sub	r2,r2,r4
1000b9e4:	10010c26 	beq	r2,zero,1000be18 <__umoddi3+0x4b4>
1000b9e8:	88a2983a 	sll	r17,r17,r2
1000b9ec:	8108d83a 	srl	r4,r16,r4
1000b9f0:	30a6983a 	sll	r19,r6,r2
1000b9f4:	80a8983a 	sll	r20,r16,r2
1000b9f8:	1025883a 	mov	r18,r2
1000b9fc:	892cb03a 	or	r22,r17,r4
1000ba00:	9822d43a 	srli	r17,r19,16
1000ba04:	b009883a 	mov	r4,r22
1000ba08:	9d7fffcc 	andi	r21,r19,65535
1000ba0c:	880b883a 	mov	r5,r17
1000ba10:	000c0a40 	call	1000c0a4 <__umodsi3>
1000ba14:	b009883a 	mov	r4,r22
1000ba18:	880b883a 	mov	r5,r17
1000ba1c:	102f883a 	mov	r23,r2
1000ba20:	000c09c0 	call	1000c09c <__udivsi3>
1000ba24:	1009883a 	mov	r4,r2
1000ba28:	a80b883a 	mov	r5,r21
1000ba2c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000ba30:	b82e943a 	slli	r23,r23,16
1000ba34:	a008d43a 	srli	r4,r20,16
1000ba38:	b906b03a 	or	r3,r23,r4
1000ba3c:	1880042e 	bgeu	r3,r2,1000ba50 <__umoddi3+0xec>
1000ba40:	1cc7883a 	add	r3,r3,r19
1000ba44:	1cc00236 	bltu	r3,r19,1000ba50 <__umoddi3+0xec>
1000ba48:	1880012e 	bgeu	r3,r2,1000ba50 <__umoddi3+0xec>
1000ba4c:	1cc7883a 	add	r3,r3,r19
1000ba50:	18a1c83a 	sub	r16,r3,r2
1000ba54:	8009883a 	mov	r4,r16
1000ba58:	880b883a 	mov	r5,r17
1000ba5c:	000c0a40 	call	1000c0a4 <__umodsi3>
1000ba60:	8009883a 	mov	r4,r16
1000ba64:	880b883a 	mov	r5,r17
1000ba68:	102d883a 	mov	r22,r2
1000ba6c:	000c09c0 	call	1000c09c <__udivsi3>
1000ba70:	1009883a 	mov	r4,r2
1000ba74:	a80b883a 	mov	r5,r21
1000ba78:	b02c943a 	slli	r22,r22,16
1000ba7c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000ba80:	a13fffcc 	andi	r4,r20,65535
1000ba84:	b106b03a 	or	r3,r22,r4
1000ba88:	1880572e 	bgeu	r3,r2,1000bbe8 <__umoddi3+0x284>
1000ba8c:	00005206 	br	1000bbd8 <__umoddi3+0x274>
1000ba90:	29c05936 	bltu	r5,r7,1000bbf8 <__umoddi3+0x294>
1000ba94:	00bfffd4 	movui	r2,65535
1000ba98:	11c0652e 	bgeu	r2,r7,1000bc30 <__umoddi3+0x2cc>
1000ba9c:	00804034 	movhi	r2,256
1000baa0:	10bfffc4 	addi	r2,r2,-1
1000baa4:	11c1172e 	bgeu	r2,r7,1000bf04 <__umoddi3+0x5a0>
1000baa8:	01400604 	movi	r5,24
1000baac:	282b883a 	mov	r21,r5
1000bab0:	394ad83a 	srl	r5,r7,r5
1000bab4:	00c40074 	movhi	r3,4097
1000bab8:	18c08004 	addi	r3,r3,512
1000babc:	194b883a 	add	r5,r3,r5
1000bac0:	28800003 	ldbu	r2,0(r5)
1000bac4:	00c00804 	movi	r3,32
1000bac8:	156b883a 	add	r21,r2,r21
1000bacc:	1d69c83a 	sub	r20,r3,r21
1000bad0:	a000671e 	bne	r20,zero,1000bc70 <__umoddi3+0x30c>
1000bad4:	3c400136 	bltu	r7,r17,1000badc <__umoddi3+0x178>
1000bad8:	81812336 	bltu	r16,r6,1000bf68 <__umoddi3+0x604>
1000badc:	8185c83a 	sub	r2,r16,r6
1000bae0:	89e3c83a 	sub	r17,r17,r7
1000bae4:	8087803a 	cmpltu	r3,r16,r2
1000bae8:	88edc83a 	sub	r22,r17,r3
1000baec:	b007883a 	mov	r3,r22
1000baf0:	00004306 	br	1000bc00 <__umoddi3+0x29c>
1000baf4:	3000041e 	bne	r6,zero,1000bb08 <__umoddi3+0x1a4>
1000baf8:	01000044 	movi	r4,1
1000bafc:	000b883a 	mov	r5,zero
1000bb00:	000c09c0 	call	1000c09c <__udivsi3>
1000bb04:	1027883a 	mov	r19,r2
1000bb08:	00bfffd4 	movui	r2,65535
1000bb0c:	14c0532e 	bgeu	r2,r19,1000bc5c <__umoddi3+0x2f8>
1000bb10:	00804034 	movhi	r2,256
1000bb14:	10bfffc4 	addi	r2,r2,-1
1000bb18:	14c1032e 	bgeu	r2,r19,1000bf28 <__umoddi3+0x5c4>
1000bb1c:	00800604 	movi	r2,24
1000bb20:	1007883a 	mov	r3,r2
1000bb24:	9884d83a 	srl	r2,r19,r2
1000bb28:	01040074 	movhi	r4,4097
1000bb2c:	21008004 	addi	r4,r4,512
1000bb30:	2085883a 	add	r2,r4,r2
1000bb34:	11000003 	ldbu	r4,0(r2)
1000bb38:	00800804 	movi	r2,32
1000bb3c:	20c7883a 	add	r3,r4,r3
1000bb40:	10c5c83a 	sub	r2,r2,r3
1000bb44:	1000b61e 	bne	r2,zero,1000be20 <__umoddi3+0x4bc>
1000bb48:	982ad43a 	srli	r21,r19,16
1000bb4c:	8ce3c83a 	sub	r17,r17,r19
1000bb50:	9dbfffcc 	andi	r22,r19,65535
1000bb54:	0025883a 	mov	r18,zero
1000bb58:	8809883a 	mov	r4,r17
1000bb5c:	a80b883a 	mov	r5,r21
1000bb60:	000c0a40 	call	1000c0a4 <__umodsi3>
1000bb64:	8809883a 	mov	r4,r17
1000bb68:	a80b883a 	mov	r5,r21
1000bb6c:	102f883a 	mov	r23,r2
1000bb70:	000c09c0 	call	1000c09c <__udivsi3>
1000bb74:	1009883a 	mov	r4,r2
1000bb78:	b00b883a 	mov	r5,r22
1000bb7c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000bb80:	b82e943a 	slli	r23,r23,16
1000bb84:	a008d43a 	srli	r4,r20,16
1000bb88:	b906b03a 	or	r3,r23,r4
1000bb8c:	1880032e 	bgeu	r3,r2,1000bb9c <__umoddi3+0x238>
1000bb90:	1cc7883a 	add	r3,r3,r19
1000bb94:	1cc00136 	bltu	r3,r19,1000bb9c <__umoddi3+0x238>
1000bb98:	1880f136 	bltu	r3,r2,1000bf60 <__umoddi3+0x5fc>
1000bb9c:	18a1c83a 	sub	r16,r3,r2
1000bba0:	8009883a 	mov	r4,r16
1000bba4:	a80b883a 	mov	r5,r21
1000bba8:	000c0a40 	call	1000c0a4 <__umodsi3>
1000bbac:	8009883a 	mov	r4,r16
1000bbb0:	a80b883a 	mov	r5,r21
1000bbb4:	1023883a 	mov	r17,r2
1000bbb8:	000c09c0 	call	1000c09c <__udivsi3>
1000bbbc:	1009883a 	mov	r4,r2
1000bbc0:	b00b883a 	mov	r5,r22
1000bbc4:	8822943a 	slli	r17,r17,16
1000bbc8:	000c0ac0 	call	1000c0ac <__mulsi3>
1000bbcc:	a13fffcc 	andi	r4,r20,65535
1000bbd0:	8906b03a 	or	r3,r17,r4
1000bbd4:	1880042e 	bgeu	r3,r2,1000bbe8 <__umoddi3+0x284>
1000bbd8:	1cc7883a 	add	r3,r3,r19
1000bbdc:	1cc00236 	bltu	r3,r19,1000bbe8 <__umoddi3+0x284>
1000bbe0:	1880012e 	bgeu	r3,r2,1000bbe8 <__umoddi3+0x284>
1000bbe4:	1cc7883a 	add	r3,r3,r19
1000bbe8:	1887c83a 	sub	r3,r3,r2
1000bbec:	1c84d83a 	srl	r2,r3,r18
1000bbf0:	0007883a 	mov	r3,zero
1000bbf4:	00000206 	br	1000bc00 <__umoddi3+0x29c>
1000bbf8:	2005883a 	mov	r2,r4
1000bbfc:	2807883a 	mov	r3,r5
1000bc00:	dfc00b17 	ldw	ra,44(sp)
1000bc04:	df000a17 	ldw	fp,40(sp)
1000bc08:	ddc00917 	ldw	r23,36(sp)
1000bc0c:	dd800817 	ldw	r22,32(sp)
1000bc10:	dd400717 	ldw	r21,28(sp)
1000bc14:	dd000617 	ldw	r20,24(sp)
1000bc18:	dcc00517 	ldw	r19,20(sp)
1000bc1c:	dc800417 	ldw	r18,16(sp)
1000bc20:	dc400317 	ldw	r17,12(sp)
1000bc24:	dc000217 	ldw	r16,8(sp)
1000bc28:	dec00c04 	addi	sp,sp,48
1000bc2c:	f800283a 	ret
1000bc30:	00803fc4 	movi	r2,255
1000bc34:	11c0b02e 	bgeu	r2,r7,1000bef8 <__umoddi3+0x594>
1000bc38:	01400204 	movi	r5,8
1000bc3c:	282b883a 	mov	r21,r5
1000bc40:	003f9b06 	br	1000bab0 <__alt_data_end+0xf800bab0>
1000bc44:	00804034 	movhi	r2,256
1000bc48:	10bfffc4 	addi	r2,r2,-1
1000bc4c:	1180b02e 	bgeu	r2,r6,1000bf10 <__umoddi3+0x5ac>
1000bc50:	01400604 	movi	r5,24
1000bc54:	2805883a 	mov	r2,r5
1000bc58:	003f5a06 	br	1000b9c4 <__alt_data_end+0xf800b9c4>
1000bc5c:	00803fc4 	movi	r2,255
1000bc60:	14c0ae2e 	bgeu	r2,r19,1000bf1c <__umoddi3+0x5b8>
1000bc64:	00800204 	movi	r2,8
1000bc68:	1007883a 	mov	r3,r2
1000bc6c:	003fad06 	br	1000bb24 <__alt_data_end+0xf800bb24>
1000bc70:	3d0a983a 	sll	r5,r7,r20
1000bc74:	356cd83a 	srl	r22,r6,r21
1000bc78:	8d78d83a 	srl	fp,r17,r21
1000bc7c:	8d10983a 	sll	r8,r17,r20
1000bc80:	2dacb03a 	or	r22,r5,r22
1000bc84:	b02ed43a 	srli	r23,r22,16
1000bc88:	8564d83a 	srl	r18,r16,r21
1000bc8c:	e009883a 	mov	r4,fp
1000bc90:	b80b883a 	mov	r5,r23
1000bc94:	44a4b03a 	or	r18,r8,r18
1000bc98:	3526983a 	sll	r19,r6,r20
1000bc9c:	000c0a40 	call	1000c0a4 <__umodsi3>
1000bca0:	e009883a 	mov	r4,fp
1000bca4:	b80b883a 	mov	r5,r23
1000bca8:	b47fffcc 	andi	r17,r22,65535
1000bcac:	d8800015 	stw	r2,0(sp)
1000bcb0:	000c09c0 	call	1000c09c <__udivsi3>
1000bcb4:	1009883a 	mov	r4,r2
1000bcb8:	880b883a 	mov	r5,r17
1000bcbc:	1039883a 	mov	fp,r2
1000bcc0:	000c0ac0 	call	1000c0ac <__mulsi3>
1000bcc4:	d9800017 	ldw	r6,0(sp)
1000bcc8:	9008d43a 	srli	r4,r18,16
1000bccc:	8520983a 	sll	r16,r16,r20
1000bcd0:	300c943a 	slli	r6,r6,16
1000bcd4:	3106b03a 	or	r3,r6,r4
1000bcd8:	1880042e 	bgeu	r3,r2,1000bcec <__umoddi3+0x388>
1000bcdc:	1d87883a 	add	r3,r3,r22
1000bce0:	e13fffc4 	addi	r4,fp,-1
1000bce4:	1d809a2e 	bgeu	r3,r22,1000bf50 <__umoddi3+0x5ec>
1000bce8:	2039883a 	mov	fp,r4
1000bcec:	1887c83a 	sub	r3,r3,r2
1000bcf0:	1809883a 	mov	r4,r3
1000bcf4:	b80b883a 	mov	r5,r23
1000bcf8:	d8c00115 	stw	r3,4(sp)
1000bcfc:	000c0a40 	call	1000c0a4 <__umodsi3>
1000bd00:	d8c00117 	ldw	r3,4(sp)
1000bd04:	b80b883a 	mov	r5,r23
1000bd08:	d8800015 	stw	r2,0(sp)
1000bd0c:	1809883a 	mov	r4,r3
1000bd10:	000c09c0 	call	1000c09c <__udivsi3>
1000bd14:	880b883a 	mov	r5,r17
1000bd18:	1009883a 	mov	r4,r2
1000bd1c:	102f883a 	mov	r23,r2
1000bd20:	000c0ac0 	call	1000c0ac <__mulsi3>
1000bd24:	d9800017 	ldw	r6,0(sp)
1000bd28:	947fffcc 	andi	r17,r18,65535
1000bd2c:	300c943a 	slli	r6,r6,16
1000bd30:	3464b03a 	or	r18,r6,r17
1000bd34:	9080042e 	bgeu	r18,r2,1000bd48 <__umoddi3+0x3e4>
1000bd38:	95a5883a 	add	r18,r18,r22
1000bd3c:	b8ffffc4 	addi	r3,r23,-1
1000bd40:	95807f2e 	bgeu	r18,r22,1000bf40 <__umoddi3+0x5dc>
1000bd44:	182f883a 	mov	r23,r3
1000bd48:	e038943a 	slli	fp,fp,16
1000bd4c:	980cd43a 	srli	r6,r19,16
1000bd50:	98ffffcc 	andi	r3,r19,65535
1000bd54:	bf38b03a 	or	fp,r23,fp
1000bd58:	e02ed43a 	srli	r23,fp,16
1000bd5c:	e73fffcc 	andi	fp,fp,65535
1000bd60:	180b883a 	mov	r5,r3
1000bd64:	e009883a 	mov	r4,fp
1000bd68:	d9800015 	stw	r6,0(sp)
1000bd6c:	d8c00115 	stw	r3,4(sp)
1000bd70:	90a5c83a 	sub	r18,r18,r2
1000bd74:	000c0ac0 	call	1000c0ac <__mulsi3>
1000bd78:	d8c00117 	ldw	r3,4(sp)
1000bd7c:	b809883a 	mov	r4,r23
1000bd80:	1023883a 	mov	r17,r2
1000bd84:	180b883a 	mov	r5,r3
1000bd88:	000c0ac0 	call	1000c0ac <__mulsi3>
1000bd8c:	d9800017 	ldw	r6,0(sp)
1000bd90:	b809883a 	mov	r4,r23
1000bd94:	d8800115 	stw	r2,4(sp)
1000bd98:	300b883a 	mov	r5,r6
1000bd9c:	302f883a 	mov	r23,r6
1000bda0:	000c0ac0 	call	1000c0ac <__mulsi3>
1000bda4:	e009883a 	mov	r4,fp
1000bda8:	b80b883a 	mov	r5,r23
1000bdac:	d8800015 	stw	r2,0(sp)
1000bdb0:	000c0ac0 	call	1000c0ac <__mulsi3>
1000bdb4:	d8c00117 	ldw	r3,4(sp)
1000bdb8:	880cd43a 	srli	r6,r17,16
1000bdbc:	d9c00017 	ldw	r7,0(sp)
1000bdc0:	1885883a 	add	r2,r3,r2
1000bdc4:	118d883a 	add	r6,r2,r6
1000bdc8:	30c0022e 	bgeu	r6,r3,1000bdd4 <__umoddi3+0x470>
1000bdcc:	00800074 	movhi	r2,1
1000bdd0:	388f883a 	add	r7,r7,r2
1000bdd4:	3006d43a 	srli	r3,r6,16
1000bdd8:	300c943a 	slli	r6,r6,16
1000bddc:	8c7fffcc 	andi	r17,r17,65535
1000bde0:	38c7883a 	add	r3,r7,r3
1000bde4:	3463883a 	add	r17,r6,r17
1000bde8:	90c03d36 	bltu	r18,r3,1000bee0 <__umoddi3+0x57c>
1000bdec:	90c06026 	beq	r18,r3,1000bf70 <__umoddi3+0x60c>
1000bdf0:	90c9c83a 	sub	r4,r18,r3
1000bdf4:	880f883a 	mov	r7,r17
1000bdf8:	81cfc83a 	sub	r7,r16,r7
1000bdfc:	81c7803a 	cmpltu	r3,r16,r7
1000be00:	20c7c83a 	sub	r3,r4,r3
1000be04:	1d44983a 	sll	r2,r3,r21
1000be08:	3d0ed83a 	srl	r7,r7,r20
1000be0c:	1d06d83a 	srl	r3,r3,r20
1000be10:	11c4b03a 	or	r2,r2,r7
1000be14:	003f7a06 	br	1000bc00 <__alt_data_end+0xf800bc00>
1000be18:	0025883a 	mov	r18,zero
1000be1c:	003ef806 	br	1000ba00 <__alt_data_end+0xf800ba00>
1000be20:	98a6983a 	sll	r19,r19,r2
1000be24:	88e8d83a 	srl	r20,r17,r3
1000be28:	80c6d83a 	srl	r3,r16,r3
1000be2c:	982ad43a 	srli	r21,r19,16
1000be30:	88a2983a 	sll	r17,r17,r2
1000be34:	a009883a 	mov	r4,r20
1000be38:	a80b883a 	mov	r5,r21
1000be3c:	88eeb03a 	or	r23,r17,r3
1000be40:	1025883a 	mov	r18,r2
1000be44:	000c0a40 	call	1000c0a4 <__umodsi3>
1000be48:	a009883a 	mov	r4,r20
1000be4c:	a80b883a 	mov	r5,r21
1000be50:	1023883a 	mov	r17,r2
1000be54:	9dbfffcc 	andi	r22,r19,65535
1000be58:	000c09c0 	call	1000c09c <__udivsi3>
1000be5c:	1009883a 	mov	r4,r2
1000be60:	b00b883a 	mov	r5,r22
1000be64:	000c0ac0 	call	1000c0ac <__mulsi3>
1000be68:	8822943a 	slli	r17,r17,16
1000be6c:	b808d43a 	srli	r4,r23,16
1000be70:	84a8983a 	sll	r20,r16,r18
1000be74:	8906b03a 	or	r3,r17,r4
1000be78:	1880042e 	bgeu	r3,r2,1000be8c <__umoddi3+0x528>
1000be7c:	1cc7883a 	add	r3,r3,r19
1000be80:	1cc00236 	bltu	r3,r19,1000be8c <__umoddi3+0x528>
1000be84:	1880012e 	bgeu	r3,r2,1000be8c <__umoddi3+0x528>
1000be88:	1cc7883a 	add	r3,r3,r19
1000be8c:	18a1c83a 	sub	r16,r3,r2
1000be90:	8009883a 	mov	r4,r16
1000be94:	a80b883a 	mov	r5,r21
1000be98:	000c0a40 	call	1000c0a4 <__umodsi3>
1000be9c:	8009883a 	mov	r4,r16
1000bea0:	a80b883a 	mov	r5,r21
1000bea4:	1039883a 	mov	fp,r2
1000bea8:	000c09c0 	call	1000c09c <__udivsi3>
1000beac:	1009883a 	mov	r4,r2
1000beb0:	b00b883a 	mov	r5,r22
1000beb4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000beb8:	e006943a 	slli	r3,fp,16
1000bebc:	b93fffcc 	andi	r4,r23,65535
1000bec0:	1906b03a 	or	r3,r3,r4
1000bec4:	1880042e 	bgeu	r3,r2,1000bed8 <__umoddi3+0x574>
1000bec8:	1cc7883a 	add	r3,r3,r19
1000becc:	1cc00236 	bltu	r3,r19,1000bed8 <__umoddi3+0x574>
1000bed0:	1880012e 	bgeu	r3,r2,1000bed8 <__umoddi3+0x574>
1000bed4:	1cc7883a 	add	r3,r3,r19
1000bed8:	18a3c83a 	sub	r17,r3,r2
1000bedc:	003f1e06 	br	1000bb58 <__alt_data_end+0xf800bb58>
1000bee0:	8ccfc83a 	sub	r7,r17,r19
1000bee4:	1d89c83a 	sub	r4,r3,r22
1000bee8:	89e3803a 	cmpltu	r17,r17,r7
1000beec:	2463c83a 	sub	r17,r4,r17
1000bef0:	9449c83a 	sub	r4,r18,r17
1000bef4:	003fc006 	br	1000bdf8 <__alt_data_end+0xf800bdf8>
1000bef8:	000b883a 	mov	r5,zero
1000befc:	002b883a 	mov	r21,zero
1000bf00:	003eeb06 	br	1000bab0 <__alt_data_end+0xf800bab0>
1000bf04:	01400404 	movi	r5,16
1000bf08:	282b883a 	mov	r21,r5
1000bf0c:	003ee806 	br	1000bab0 <__alt_data_end+0xf800bab0>
1000bf10:	01400404 	movi	r5,16
1000bf14:	2805883a 	mov	r2,r5
1000bf18:	003eaa06 	br	1000b9c4 <__alt_data_end+0xf800b9c4>
1000bf1c:	0005883a 	mov	r2,zero
1000bf20:	0007883a 	mov	r3,zero
1000bf24:	003eff06 	br	1000bb24 <__alt_data_end+0xf800bb24>
1000bf28:	00800404 	movi	r2,16
1000bf2c:	1007883a 	mov	r3,r2
1000bf30:	003efc06 	br	1000bb24 <__alt_data_end+0xf800bb24>
1000bf34:	000b883a 	mov	r5,zero
1000bf38:	0005883a 	mov	r2,zero
1000bf3c:	003ea106 	br	1000b9c4 <__alt_data_end+0xf800b9c4>
1000bf40:	90bf802e 	bgeu	r18,r2,1000bd44 <__alt_data_end+0xf800bd44>
1000bf44:	bdffff84 	addi	r23,r23,-2
1000bf48:	95a5883a 	add	r18,r18,r22
1000bf4c:	003f7e06 	br	1000bd48 <__alt_data_end+0xf800bd48>
1000bf50:	18bf652e 	bgeu	r3,r2,1000bce8 <__alt_data_end+0xf800bce8>
1000bf54:	e73fff84 	addi	fp,fp,-2
1000bf58:	1d87883a 	add	r3,r3,r22
1000bf5c:	003f6306 	br	1000bcec <__alt_data_end+0xf800bcec>
1000bf60:	1cc7883a 	add	r3,r3,r19
1000bf64:	003f0d06 	br	1000bb9c <__alt_data_end+0xf800bb9c>
1000bf68:	8005883a 	mov	r2,r16
1000bf6c:	003edf06 	br	1000baec <__alt_data_end+0xf800baec>
1000bf70:	847fdb36 	bltu	r16,r17,1000bee0 <__alt_data_end+0xf800bee0>
1000bf74:	880f883a 	mov	r7,r17
1000bf78:	0009883a 	mov	r4,zero
1000bf7c:	003f9e06 	br	1000bdf8 <__alt_data_end+0xf800bdf8>

1000bf80 <udivmodsi4>:
1000bf80:	2900182e 	bgeu	r5,r4,1000bfe4 <udivmodsi4+0x64>
1000bf84:	28001716 	blt	r5,zero,1000bfe4 <udivmodsi4+0x64>
1000bf88:	00800804 	movi	r2,32
1000bf8c:	00c00044 	movi	r3,1
1000bf90:	00000206 	br	1000bf9c <udivmodsi4+0x1c>
1000bf94:	10001126 	beq	r2,zero,1000bfdc <udivmodsi4+0x5c>
1000bf98:	28000516 	blt	r5,zero,1000bfb0 <udivmodsi4+0x30>
1000bf9c:	294b883a 	add	r5,r5,r5
1000bfa0:	10bfffc4 	addi	r2,r2,-1
1000bfa4:	18c7883a 	add	r3,r3,r3
1000bfa8:	293ffa36 	bltu	r5,r4,1000bf94 <__alt_data_end+0xf800bf94>
1000bfac:	18000b26 	beq	r3,zero,1000bfdc <udivmodsi4+0x5c>
1000bfb0:	0005883a 	mov	r2,zero
1000bfb4:	21400236 	bltu	r4,r5,1000bfc0 <udivmodsi4+0x40>
1000bfb8:	2149c83a 	sub	r4,r4,r5
1000bfbc:	10c4b03a 	or	r2,r2,r3
1000bfc0:	1806d07a 	srli	r3,r3,1
1000bfc4:	280ad07a 	srli	r5,r5,1
1000bfc8:	183ffa1e 	bne	r3,zero,1000bfb4 <__alt_data_end+0xf800bfb4>
1000bfcc:	3000011e 	bne	r6,zero,1000bfd4 <udivmodsi4+0x54>
1000bfd0:	f800283a 	ret
1000bfd4:	2005883a 	mov	r2,r4
1000bfd8:	f800283a 	ret
1000bfdc:	0005883a 	mov	r2,zero
1000bfe0:	003ffa06 	br	1000bfcc <__alt_data_end+0xf800bfcc>
1000bfe4:	00c00044 	movi	r3,1
1000bfe8:	003ff106 	br	1000bfb0 <__alt_data_end+0xf800bfb0>

1000bfec <__divsi3>:
1000bfec:	defffe04 	addi	sp,sp,-8
1000bff0:	dfc00115 	stw	ra,4(sp)
1000bff4:	dc000015 	stw	r16,0(sp)
1000bff8:	20000b16 	blt	r4,zero,1000c028 <__divsi3+0x3c>
1000bffc:	0021883a 	mov	r16,zero
1000c000:	28000c16 	blt	r5,zero,1000c034 <__divsi3+0x48>
1000c004:	000d883a 	mov	r6,zero
1000c008:	000bf800 	call	1000bf80 <udivmodsi4>
1000c00c:	0407c83a 	sub	r3,zero,r16
1000c010:	1884f03a 	xor	r2,r3,r2
1000c014:	1405883a 	add	r2,r2,r16
1000c018:	dfc00117 	ldw	ra,4(sp)
1000c01c:	dc000017 	ldw	r16,0(sp)
1000c020:	dec00204 	addi	sp,sp,8
1000c024:	f800283a 	ret
1000c028:	0109c83a 	sub	r4,zero,r4
1000c02c:	04000044 	movi	r16,1
1000c030:	283ff40e 	bge	r5,zero,1000c004 <__alt_data_end+0xf800c004>
1000c034:	014bc83a 	sub	r5,zero,r5
1000c038:	8400005c 	xori	r16,r16,1
1000c03c:	003ff106 	br	1000c004 <__alt_data_end+0xf800c004>

1000c040 <__modsi3>:
1000c040:	defffd04 	addi	sp,sp,-12
1000c044:	dfc00215 	stw	ra,8(sp)
1000c048:	dc400115 	stw	r17,4(sp)
1000c04c:	dc000015 	stw	r16,0(sp)
1000c050:	20000c16 	blt	r4,zero,1000c084 <__modsi3+0x44>
1000c054:	0023883a 	mov	r17,zero
1000c058:	0021883a 	mov	r16,zero
1000c05c:	28000d16 	blt	r5,zero,1000c094 <__modsi3+0x54>
1000c060:	01800044 	movi	r6,1
1000c064:	000bf800 	call	1000bf80 <udivmodsi4>
1000c068:	1404f03a 	xor	r2,r2,r16
1000c06c:	8885883a 	add	r2,r17,r2
1000c070:	dfc00217 	ldw	ra,8(sp)
1000c074:	dc400117 	ldw	r17,4(sp)
1000c078:	dc000017 	ldw	r16,0(sp)
1000c07c:	dec00304 	addi	sp,sp,12
1000c080:	f800283a 	ret
1000c084:	0109c83a 	sub	r4,zero,r4
1000c088:	04400044 	movi	r17,1
1000c08c:	043fffc4 	movi	r16,-1
1000c090:	283ff30e 	bge	r5,zero,1000c060 <__alt_data_end+0xf800c060>
1000c094:	014bc83a 	sub	r5,zero,r5
1000c098:	003ff106 	br	1000c060 <__alt_data_end+0xf800c060>

1000c09c <__udivsi3>:
1000c09c:	000d883a 	mov	r6,zero
1000c0a0:	000bf801 	jmpi	1000bf80 <udivmodsi4>

1000c0a4 <__umodsi3>:
1000c0a4:	01800044 	movi	r6,1
1000c0a8:	000bf801 	jmpi	1000bf80 <udivmodsi4>

1000c0ac <__mulsi3>:
1000c0ac:	0005883a 	mov	r2,zero
1000c0b0:	20000726 	beq	r4,zero,1000c0d0 <__mulsi3+0x24>
1000c0b4:	20c0004c 	andi	r3,r4,1
1000c0b8:	2008d07a 	srli	r4,r4,1
1000c0bc:	18000126 	beq	r3,zero,1000c0c4 <__mulsi3+0x18>
1000c0c0:	1145883a 	add	r2,r2,r5
1000c0c4:	294b883a 	add	r5,r5,r5
1000c0c8:	203ffa1e 	bne	r4,zero,1000c0b4 <__alt_data_end+0xf800c0b4>
1000c0cc:	f800283a 	ret
1000c0d0:	f800283a 	ret

1000c0d4 <__adddf3>:
1000c0d4:	02000434 	movhi	r8,16
1000c0d8:	423fffc4 	addi	r8,r8,-1
1000c0dc:	defffb04 	addi	sp,sp,-20
1000c0e0:	2a12703a 	and	r9,r5,r8
1000c0e4:	2806d7fa 	srli	r3,r5,31
1000c0e8:	3a10703a 	and	r8,r7,r8
1000c0ec:	3804d53a 	srli	r2,r7,20
1000c0f0:	3014d77a 	srli	r10,r6,29
1000c0f4:	dc000015 	stw	r16,0(sp)
1000c0f8:	481290fa 	slli	r9,r9,3
1000c0fc:	2820d53a 	srli	r16,r5,20
1000c100:	401090fa 	slli	r8,r8,3
1000c104:	200ad77a 	srli	r5,r4,29
1000c108:	380ed7fa 	srli	r7,r7,31
1000c10c:	dc800215 	stw	r18,8(sp)
1000c110:	dc400115 	stw	r17,4(sp)
1000c114:	dfc00415 	stw	ra,16(sp)
1000c118:	dcc00315 	stw	r19,12(sp)
1000c11c:	1c803fcc 	andi	r18,r3,255
1000c120:	8401ffcc 	andi	r16,r16,2047
1000c124:	494ab03a 	or	r5,r9,r5
1000c128:	202290fa 	slli	r17,r4,3
1000c12c:	1081ffcc 	andi	r2,r2,2047
1000c130:	4290b03a 	or	r8,r8,r10
1000c134:	300c90fa 	slli	r6,r6,3
1000c138:	91c07026 	beq	r18,r7,1000c2fc <__adddf3+0x228>
1000c13c:	8087c83a 	sub	r3,r16,r2
1000c140:	00c0b30e 	bge	zero,r3,1000c410 <__adddf3+0x33c>
1000c144:	10002a1e 	bne	r2,zero,1000c1f0 <__adddf3+0x11c>
1000c148:	4184b03a 	or	r2,r8,r6
1000c14c:	1000991e 	bne	r2,zero,1000c3b4 <__adddf3+0x2e0>
1000c150:	888001cc 	andi	r2,r17,7
1000c154:	10005b26 	beq	r2,zero,1000c2c4 <__adddf3+0x1f0>
1000c158:	88c003cc 	andi	r3,r17,15
1000c15c:	00800104 	movi	r2,4
1000c160:	18805826 	beq	r3,r2,1000c2c4 <__adddf3+0x1f0>
1000c164:	89800104 	addi	r6,r17,4
1000c168:	3463803a 	cmpltu	r17,r6,r17
1000c16c:	2c4b883a 	add	r5,r5,r17
1000c170:	2880202c 	andhi	r2,r5,128
1000c174:	9007883a 	mov	r3,r18
1000c178:	3023883a 	mov	r17,r6
1000c17c:	10005426 	beq	r2,zero,1000c2d0 <__adddf3+0x1fc>
1000c180:	84000044 	addi	r16,r16,1
1000c184:	0081ffc4 	movi	r2,2047
1000c188:	8080c126 	beq	r16,r2,1000c490 <__adddf3+0x3bc>
1000c18c:	013fe034 	movhi	r4,65408
1000c190:	213fffc4 	addi	r4,r4,-1
1000c194:	290a703a 	and	r5,r5,r4
1000c198:	2804977a 	slli	r2,r5,29
1000c19c:	280a927a 	slli	r5,r5,9
1000c1a0:	8822d0fa 	srli	r17,r17,3
1000c1a4:	8401ffcc 	andi	r16,r16,2047
1000c1a8:	2808d33a 	srli	r4,r5,12
1000c1ac:	1444b03a 	or	r2,r2,r17
1000c1b0:	8401ffcc 	andi	r16,r16,2047
1000c1b4:	800a953a 	slli	r5,r16,20
1000c1b8:	18c03fcc 	andi	r3,r3,255
1000c1bc:	04000434 	movhi	r16,16
1000c1c0:	180697fa 	slli	r3,r3,31
1000c1c4:	843fffc4 	addi	r16,r16,-1
1000c1c8:	2420703a 	and	r16,r4,r16
1000c1cc:	8160b03a 	or	r16,r16,r5
1000c1d0:	80c6b03a 	or	r3,r16,r3
1000c1d4:	dfc00417 	ldw	ra,16(sp)
1000c1d8:	dcc00317 	ldw	r19,12(sp)
1000c1dc:	dc800217 	ldw	r18,8(sp)
1000c1e0:	dc400117 	ldw	r17,4(sp)
1000c1e4:	dc000017 	ldw	r16,0(sp)
1000c1e8:	dec00504 	addi	sp,sp,20
1000c1ec:	f800283a 	ret
1000c1f0:	0081ffc4 	movi	r2,2047
1000c1f4:	80bfd626 	beq	r16,r2,1000c150 <__alt_data_end+0xf800c150>
1000c1f8:	42002034 	orhi	r8,r8,128
1000c1fc:	00800e04 	movi	r2,56
1000c200:	10c0a616 	blt	r2,r3,1000c49c <__adddf3+0x3c8>
1000c204:	008007c4 	movi	r2,31
1000c208:	10c0c916 	blt	r2,r3,1000c530 <__adddf3+0x45c>
1000c20c:	00800804 	movi	r2,32
1000c210:	10c5c83a 	sub	r2,r2,r3
1000c214:	408e983a 	sll	r7,r8,r2
1000c218:	30c8d83a 	srl	r4,r6,r3
1000c21c:	3084983a 	sll	r2,r6,r2
1000c220:	40c6d83a 	srl	r3,r8,r3
1000c224:	390cb03a 	or	r6,r7,r4
1000c228:	1004c03a 	cmpne	r2,r2,zero
1000c22c:	308cb03a 	or	r6,r6,r2
1000c230:	898dc83a 	sub	r6,r17,r6
1000c234:	89a3803a 	cmpltu	r17,r17,r6
1000c238:	28cbc83a 	sub	r5,r5,r3
1000c23c:	2c4bc83a 	sub	r5,r5,r17
1000c240:	3023883a 	mov	r17,r6
1000c244:	2880202c 	andhi	r2,r5,128
1000c248:	10006d26 	beq	r2,zero,1000c400 <__adddf3+0x32c>
1000c24c:	04c02034 	movhi	r19,128
1000c250:	9cffffc4 	addi	r19,r19,-1
1000c254:	2ce6703a 	and	r19,r5,r19
1000c258:	98007e26 	beq	r19,zero,1000c454 <__adddf3+0x380>
1000c25c:	9809883a 	mov	r4,r19
1000c260:	000e86c0 	call	1000e86c <__clzsi2>
1000c264:	10fffe04 	addi	r3,r2,-8
1000c268:	010007c4 	movi	r4,31
1000c26c:	20c07f16 	blt	r4,r3,1000c46c <__adddf3+0x398>
1000c270:	01400a04 	movi	r5,40
1000c274:	2885c83a 	sub	r2,r5,r2
1000c278:	888ad83a 	srl	r5,r17,r2
1000c27c:	98e6983a 	sll	r19,r19,r3
1000c280:	88e2983a 	sll	r17,r17,r3
1000c284:	2ce6b03a 	or	r19,r5,r19
1000c288:	1c007c16 	blt	r3,r16,1000c47c <__adddf3+0x3a8>
1000c28c:	1c21c83a 	sub	r16,r3,r16
1000c290:	81400044 	addi	r5,r16,1
1000c294:	00c007c4 	movi	r3,31
1000c298:	19409816 	blt	r3,r5,1000c4fc <__adddf3+0x428>
1000c29c:	1c21c83a 	sub	r16,r3,r16
1000c2a0:	8c08983a 	sll	r4,r17,r16
1000c2a4:	8946d83a 	srl	r3,r17,r5
1000c2a8:	9c20983a 	sll	r16,r19,r16
1000c2ac:	2008c03a 	cmpne	r4,r4,zero
1000c2b0:	994ad83a 	srl	r5,r19,r5
1000c2b4:	1c06b03a 	or	r3,r3,r16
1000c2b8:	1922b03a 	or	r17,r3,r4
1000c2bc:	0021883a 	mov	r16,zero
1000c2c0:	003fa306 	br	1000c150 <__alt_data_end+0xf800c150>
1000c2c4:	2880202c 	andhi	r2,r5,128
1000c2c8:	9007883a 	mov	r3,r18
1000c2cc:	103fac1e 	bne	r2,zero,1000c180 <__alt_data_end+0xf800c180>
1000c2d0:	2804977a 	slli	r2,r5,29
1000c2d4:	8822d0fa 	srli	r17,r17,3
1000c2d8:	0101ffc4 	movi	r4,2047
1000c2dc:	280ad0fa 	srli	r5,r5,3
1000c2e0:	1444b03a 	or	r2,r2,r17
1000c2e4:	81002c26 	beq	r16,r4,1000c398 <__adddf3+0x2c4>
1000c2e8:	8120703a 	and	r16,r16,r4
1000c2ec:	01000434 	movhi	r4,16
1000c2f0:	213fffc4 	addi	r4,r4,-1
1000c2f4:	2908703a 	and	r4,r5,r4
1000c2f8:	003fad06 	br	1000c1b0 <__alt_data_end+0xf800c1b0>
1000c2fc:	8089c83a 	sub	r4,r16,r2
1000c300:	01006a0e 	bge	zero,r4,1000c4ac <__adddf3+0x3d8>
1000c304:	10003326 	beq	r2,zero,1000c3d4 <__adddf3+0x300>
1000c308:	0081ffc4 	movi	r2,2047
1000c30c:	80bf9026 	beq	r16,r2,1000c150 <__alt_data_end+0xf800c150>
1000c310:	42002034 	orhi	r8,r8,128
1000c314:	00800e04 	movi	r2,56
1000c318:	1100b116 	blt	r2,r4,1000c5e0 <__adddf3+0x50c>
1000c31c:	008007c4 	movi	r2,31
1000c320:	1100e216 	blt	r2,r4,1000c6ac <__adddf3+0x5d8>
1000c324:	00800804 	movi	r2,32
1000c328:	1105c83a 	sub	r2,r2,r4
1000c32c:	4092983a 	sll	r9,r8,r2
1000c330:	310ed83a 	srl	r7,r6,r4
1000c334:	3084983a 	sll	r2,r6,r2
1000c338:	4110d83a 	srl	r8,r8,r4
1000c33c:	49ccb03a 	or	r6,r9,r7
1000c340:	1004c03a 	cmpne	r2,r2,zero
1000c344:	308cb03a 	or	r6,r6,r2
1000c348:	344d883a 	add	r6,r6,r17
1000c34c:	3463803a 	cmpltu	r17,r6,r17
1000c350:	414b883a 	add	r5,r8,r5
1000c354:	2c4b883a 	add	r5,r5,r17
1000c358:	3023883a 	mov	r17,r6
1000c35c:	2880202c 	andhi	r2,r5,128
1000c360:	10002726 	beq	r2,zero,1000c400 <__adddf3+0x32c>
1000c364:	84000044 	addi	r16,r16,1
1000c368:	0081ffc4 	movi	r2,2047
1000c36c:	8080ae26 	beq	r16,r2,1000c628 <__adddf3+0x554>
1000c370:	00bfe034 	movhi	r2,65408
1000c374:	10bfffc4 	addi	r2,r2,-1
1000c378:	288a703a 	and	r5,r5,r2
1000c37c:	880cd07a 	srli	r6,r17,1
1000c380:	280897fa 	slli	r4,r5,31
1000c384:	88c0004c 	andi	r3,r17,1
1000c388:	30e2b03a 	or	r17,r6,r3
1000c38c:	280ad07a 	srli	r5,r5,1
1000c390:	8922b03a 	or	r17,r17,r4
1000c394:	003f6e06 	br	1000c150 <__alt_data_end+0xf800c150>
1000c398:	1148b03a 	or	r4,r2,r5
1000c39c:	20003c26 	beq	r4,zero,1000c490 <__adddf3+0x3bc>
1000c3a0:	29000234 	orhi	r4,r5,8
1000c3a4:	01400434 	movhi	r5,16
1000c3a8:	297fffc4 	addi	r5,r5,-1
1000c3ac:	2148703a 	and	r4,r4,r5
1000c3b0:	003f7f06 	br	1000c1b0 <__alt_data_end+0xf800c1b0>
1000c3b4:	18ffffc4 	addi	r3,r3,-1
1000c3b8:	18004d1e 	bne	r3,zero,1000c4f0 <__adddf3+0x41c>
1000c3bc:	898dc83a 	sub	r6,r17,r6
1000c3c0:	89a3803a 	cmpltu	r17,r17,r6
1000c3c4:	2a0bc83a 	sub	r5,r5,r8
1000c3c8:	2c4bc83a 	sub	r5,r5,r17
1000c3cc:	3023883a 	mov	r17,r6
1000c3d0:	003f9c06 	br	1000c244 <__alt_data_end+0xf800c244>
1000c3d4:	4184b03a 	or	r2,r8,r6
1000c3d8:	103f5d26 	beq	r2,zero,1000c150 <__alt_data_end+0xf800c150>
1000c3dc:	213fffc4 	addi	r4,r4,-1
1000c3e0:	203fd926 	beq	r4,zero,1000c348 <__alt_data_end+0xf800c348>
1000c3e4:	0081ffc4 	movi	r2,2047
1000c3e8:	80bfca1e 	bne	r16,r2,1000c314 <__alt_data_end+0xf800c314>
1000c3ec:	003f5806 	br	1000c150 <__alt_data_end+0xf800c150>
1000c3f0:	10c8b03a 	or	r4,r2,r3
1000c3f4:	20008b26 	beq	r4,zero,1000c624 <__adddf3+0x550>
1000c3f8:	100b883a 	mov	r5,r2
1000c3fc:	1823883a 	mov	r17,r3
1000c400:	888001cc 	andi	r2,r17,7
1000c404:	103f541e 	bne	r2,zero,1000c158 <__alt_data_end+0xf800c158>
1000c408:	9007883a 	mov	r3,r18
1000c40c:	003fb006 	br	1000c2d0 <__alt_data_end+0xf800c2d0>
1000c410:	1800531e 	bne	r3,zero,1000c560 <__adddf3+0x48c>
1000c414:	80800044 	addi	r2,r16,1
1000c418:	1081ffcc 	andi	r2,r2,2047
1000c41c:	00c00044 	movi	r3,1
1000c420:	1880990e 	bge	r3,r2,1000c688 <__adddf3+0x5b4>
1000c424:	8985c83a 	sub	r2,r17,r6
1000c428:	8887803a 	cmpltu	r3,r17,r2
1000c42c:	2a27c83a 	sub	r19,r5,r8
1000c430:	98e7c83a 	sub	r19,r19,r3
1000c434:	98c0202c 	andhi	r3,r19,128
1000c438:	18006226 	beq	r3,zero,1000c5c4 <__adddf3+0x4f0>
1000c43c:	3463c83a 	sub	r17,r6,r17
1000c440:	4151c83a 	sub	r8,r8,r5
1000c444:	344d803a 	cmpltu	r6,r6,r17
1000c448:	41a7c83a 	sub	r19,r8,r6
1000c44c:	3825883a 	mov	r18,r7
1000c450:	983f821e 	bne	r19,zero,1000c25c <__alt_data_end+0xf800c25c>
1000c454:	8809883a 	mov	r4,r17
1000c458:	000e86c0 	call	1000e86c <__clzsi2>
1000c45c:	10800804 	addi	r2,r2,32
1000c460:	10fffe04 	addi	r3,r2,-8
1000c464:	010007c4 	movi	r4,31
1000c468:	20ff810e 	bge	r4,r3,1000c270 <__alt_data_end+0xf800c270>
1000c46c:	14fff604 	addi	r19,r2,-40
1000c470:	8ce6983a 	sll	r19,r17,r19
1000c474:	0023883a 	mov	r17,zero
1000c478:	1c3f840e 	bge	r3,r16,1000c28c <__alt_data_end+0xf800c28c>
1000c47c:	017fe034 	movhi	r5,65408
1000c480:	297fffc4 	addi	r5,r5,-1
1000c484:	80e1c83a 	sub	r16,r16,r3
1000c488:	994a703a 	and	r5,r19,r5
1000c48c:	003f3006 	br	1000c150 <__alt_data_end+0xf800c150>
1000c490:	0009883a 	mov	r4,zero
1000c494:	0005883a 	mov	r2,zero
1000c498:	003f4506 	br	1000c1b0 <__alt_data_end+0xf800c1b0>
1000c49c:	418cb03a 	or	r6,r8,r6
1000c4a0:	300cc03a 	cmpne	r6,r6,zero
1000c4a4:	0007883a 	mov	r3,zero
1000c4a8:	003f6106 	br	1000c230 <__alt_data_end+0xf800c230>
1000c4ac:	2000921e 	bne	r4,zero,1000c6f8 <__adddf3+0x624>
1000c4b0:	80800044 	addi	r2,r16,1
1000c4b4:	11c1ffcc 	andi	r7,r2,2047
1000c4b8:	01000044 	movi	r4,1
1000c4bc:	21c0610e 	bge	r4,r7,1000c644 <__adddf3+0x570>
1000c4c0:	0101ffc4 	movi	r4,2047
1000c4c4:	1100a326 	beq	r2,r4,1000c754 <__adddf3+0x680>
1000c4c8:	344d883a 	add	r6,r6,r17
1000c4cc:	3463803a 	cmpltu	r17,r6,r17
1000c4d0:	414b883a 	add	r5,r8,r5
1000c4d4:	2c4b883a 	add	r5,r5,r17
1000c4d8:	282297fa 	slli	r17,r5,31
1000c4dc:	300cd07a 	srli	r6,r6,1
1000c4e0:	280ad07a 	srli	r5,r5,1
1000c4e4:	1021883a 	mov	r16,r2
1000c4e8:	89a2b03a 	or	r17,r17,r6
1000c4ec:	003f1806 	br	1000c150 <__alt_data_end+0xf800c150>
1000c4f0:	0081ffc4 	movi	r2,2047
1000c4f4:	80bf411e 	bne	r16,r2,1000c1fc <__alt_data_end+0xf800c1fc>
1000c4f8:	003f1506 	br	1000c150 <__alt_data_end+0xf800c150>
1000c4fc:	80bff844 	addi	r2,r16,-31
1000c500:	00c00804 	movi	r3,32
1000c504:	9884d83a 	srl	r2,r19,r2
1000c508:	28c04a26 	beq	r5,r3,1000c634 <__adddf3+0x560>
1000c50c:	00c00fc4 	movi	r3,63
1000c510:	1c21c83a 	sub	r16,r3,r16
1000c514:	9c26983a 	sll	r19,r19,r16
1000c518:	9c62b03a 	or	r17,r19,r17
1000c51c:	8822c03a 	cmpne	r17,r17,zero
1000c520:	88a2b03a 	or	r17,r17,r2
1000c524:	000b883a 	mov	r5,zero
1000c528:	0021883a 	mov	r16,zero
1000c52c:	003fb406 	br	1000c400 <__alt_data_end+0xf800c400>
1000c530:	18bff804 	addi	r2,r3,-32
1000c534:	01000804 	movi	r4,32
1000c538:	4084d83a 	srl	r2,r8,r2
1000c53c:	19003f26 	beq	r3,r4,1000c63c <__adddf3+0x568>
1000c540:	01001004 	movi	r4,64
1000c544:	20c7c83a 	sub	r3,r4,r3
1000c548:	40d0983a 	sll	r8,r8,r3
1000c54c:	418cb03a 	or	r6,r8,r6
1000c550:	300cc03a 	cmpne	r6,r6,zero
1000c554:	308cb03a 	or	r6,r6,r2
1000c558:	0007883a 	mov	r3,zero
1000c55c:	003f3406 	br	1000c230 <__alt_data_end+0xf800c230>
1000c560:	80002326 	beq	r16,zero,1000c5f0 <__adddf3+0x51c>
1000c564:	0101ffc4 	movi	r4,2047
1000c568:	11005e26 	beq	r2,r4,1000c6e4 <__adddf3+0x610>
1000c56c:	00c7c83a 	sub	r3,zero,r3
1000c570:	29402034 	orhi	r5,r5,128
1000c574:	01000e04 	movi	r4,56
1000c578:	20c07216 	blt	r4,r3,1000c744 <__adddf3+0x670>
1000c57c:	010007c4 	movi	r4,31
1000c580:	20c0ce16 	blt	r4,r3,1000c8bc <__adddf3+0x7e8>
1000c584:	01000804 	movi	r4,32
1000c588:	20c9c83a 	sub	r4,r4,r3
1000c58c:	2914983a 	sll	r10,r5,r4
1000c590:	88d2d83a 	srl	r9,r17,r3
1000c594:	8908983a 	sll	r4,r17,r4
1000c598:	28c6d83a 	srl	r3,r5,r3
1000c59c:	5262b03a 	or	r17,r10,r9
1000c5a0:	2008c03a 	cmpne	r4,r4,zero
1000c5a4:	8922b03a 	or	r17,r17,r4
1000c5a8:	3463c83a 	sub	r17,r6,r17
1000c5ac:	40c7c83a 	sub	r3,r8,r3
1000c5b0:	344d803a 	cmpltu	r6,r6,r17
1000c5b4:	198bc83a 	sub	r5,r3,r6
1000c5b8:	1021883a 	mov	r16,r2
1000c5bc:	3825883a 	mov	r18,r7
1000c5c0:	003f2006 	br	1000c244 <__alt_data_end+0xf800c244>
1000c5c4:	9886b03a 	or	r3,r19,r2
1000c5c8:	1800141e 	bne	r3,zero,1000c61c <__adddf3+0x548>
1000c5cc:	0007883a 	mov	r3,zero
1000c5d0:	000b883a 	mov	r5,zero
1000c5d4:	0023883a 	mov	r17,zero
1000c5d8:	0021883a 	mov	r16,zero
1000c5dc:	003f3c06 	br	1000c2d0 <__alt_data_end+0xf800c2d0>
1000c5e0:	418cb03a 	or	r6,r8,r6
1000c5e4:	300cc03a 	cmpne	r6,r6,zero
1000c5e8:	0011883a 	mov	r8,zero
1000c5ec:	003f5606 	br	1000c348 <__alt_data_end+0xf800c348>
1000c5f0:	2c48b03a 	or	r4,r5,r17
1000c5f4:	20003b26 	beq	r4,zero,1000c6e4 <__adddf3+0x610>
1000c5f8:	00c6303a 	nor	r3,zero,r3
1000c5fc:	1800371e 	bne	r3,zero,1000c6dc <__adddf3+0x608>
1000c600:	3463c83a 	sub	r17,r6,r17
1000c604:	414bc83a 	sub	r5,r8,r5
1000c608:	344d803a 	cmpltu	r6,r6,r17
1000c60c:	298bc83a 	sub	r5,r5,r6
1000c610:	1021883a 	mov	r16,r2
1000c614:	3825883a 	mov	r18,r7
1000c618:	003f0a06 	br	1000c244 <__alt_data_end+0xf800c244>
1000c61c:	1023883a 	mov	r17,r2
1000c620:	003f0d06 	br	1000c258 <__alt_data_end+0xf800c258>
1000c624:	0007883a 	mov	r3,zero
1000c628:	000b883a 	mov	r5,zero
1000c62c:	0023883a 	mov	r17,zero
1000c630:	003f2706 	br	1000c2d0 <__alt_data_end+0xf800c2d0>
1000c634:	0027883a 	mov	r19,zero
1000c638:	003fb706 	br	1000c518 <__alt_data_end+0xf800c518>
1000c63c:	0011883a 	mov	r8,zero
1000c640:	003fc206 	br	1000c54c <__alt_data_end+0xf800c54c>
1000c644:	2c44b03a 	or	r2,r5,r17
1000c648:	8000871e 	bne	r16,zero,1000c868 <__adddf3+0x794>
1000c64c:	1000b126 	beq	r2,zero,1000c914 <__adddf3+0x840>
1000c650:	4184b03a 	or	r2,r8,r6
1000c654:	103ebe26 	beq	r2,zero,1000c150 <__alt_data_end+0xf800c150>
1000c658:	3445883a 	add	r2,r6,r17
1000c65c:	1463803a 	cmpltu	r17,r2,r17
1000c660:	414b883a 	add	r5,r8,r5
1000c664:	2c4b883a 	add	r5,r5,r17
1000c668:	28c0202c 	andhi	r3,r5,128
1000c66c:	1023883a 	mov	r17,r2
1000c670:	183f6326 	beq	r3,zero,1000c400 <__alt_data_end+0xf800c400>
1000c674:	00bfe034 	movhi	r2,65408
1000c678:	10bfffc4 	addi	r2,r2,-1
1000c67c:	2021883a 	mov	r16,r4
1000c680:	288a703a 	and	r5,r5,r2
1000c684:	003eb206 	br	1000c150 <__alt_data_end+0xf800c150>
1000c688:	2c44b03a 	or	r2,r5,r17
1000c68c:	8000251e 	bne	r16,zero,1000c724 <__adddf3+0x650>
1000c690:	10004b1e 	bne	r2,zero,1000c7c0 <__adddf3+0x6ec>
1000c694:	4184b03a 	or	r2,r8,r6
1000c698:	103fe226 	beq	r2,zero,1000c624 <__alt_data_end+0xf800c624>
1000c69c:	400b883a 	mov	r5,r8
1000c6a0:	3023883a 	mov	r17,r6
1000c6a4:	3825883a 	mov	r18,r7
1000c6a8:	003ea906 	br	1000c150 <__alt_data_end+0xf800c150>
1000c6ac:	20bff804 	addi	r2,r4,-32
1000c6b0:	01c00804 	movi	r7,32
1000c6b4:	4084d83a 	srl	r2,r8,r2
1000c6b8:	21c07e26 	beq	r4,r7,1000c8b4 <__adddf3+0x7e0>
1000c6bc:	01c01004 	movi	r7,64
1000c6c0:	3909c83a 	sub	r4,r7,r4
1000c6c4:	4110983a 	sll	r8,r8,r4
1000c6c8:	418cb03a 	or	r6,r8,r6
1000c6cc:	300cc03a 	cmpne	r6,r6,zero
1000c6d0:	308cb03a 	or	r6,r6,r2
1000c6d4:	0011883a 	mov	r8,zero
1000c6d8:	003f1b06 	br	1000c348 <__alt_data_end+0xf800c348>
1000c6dc:	0101ffc4 	movi	r4,2047
1000c6e0:	113fa41e 	bne	r2,r4,1000c574 <__alt_data_end+0xf800c574>
1000c6e4:	400b883a 	mov	r5,r8
1000c6e8:	3023883a 	mov	r17,r6
1000c6ec:	1021883a 	mov	r16,r2
1000c6f0:	3825883a 	mov	r18,r7
1000c6f4:	003e9606 	br	1000c150 <__alt_data_end+0xf800c150>
1000c6f8:	80001a1e 	bne	r16,zero,1000c764 <__adddf3+0x690>
1000c6fc:	2c4eb03a 	or	r7,r5,r17
1000c700:	38005526 	beq	r7,zero,1000c858 <__adddf3+0x784>
1000c704:	0108303a 	nor	r4,zero,r4
1000c708:	2000511e 	bne	r4,zero,1000c850 <__adddf3+0x77c>
1000c70c:	89a3883a 	add	r17,r17,r6
1000c710:	414b883a 	add	r5,r8,r5
1000c714:	898d803a 	cmpltu	r6,r17,r6
1000c718:	298b883a 	add	r5,r5,r6
1000c71c:	1021883a 	mov	r16,r2
1000c720:	003f0e06 	br	1000c35c <__alt_data_end+0xf800c35c>
1000c724:	1000341e 	bne	r2,zero,1000c7f8 <__adddf3+0x724>
1000c728:	4184b03a 	or	r2,r8,r6
1000c72c:	10006f26 	beq	r2,zero,1000c8ec <__adddf3+0x818>
1000c730:	400b883a 	mov	r5,r8
1000c734:	3023883a 	mov	r17,r6
1000c738:	3825883a 	mov	r18,r7
1000c73c:	0401ffc4 	movi	r16,2047
1000c740:	003e8306 	br	1000c150 <__alt_data_end+0xf800c150>
1000c744:	2c62b03a 	or	r17,r5,r17
1000c748:	8822c03a 	cmpne	r17,r17,zero
1000c74c:	0007883a 	mov	r3,zero
1000c750:	003f9506 	br	1000c5a8 <__alt_data_end+0xf800c5a8>
1000c754:	1021883a 	mov	r16,r2
1000c758:	000b883a 	mov	r5,zero
1000c75c:	0023883a 	mov	r17,zero
1000c760:	003edb06 	br	1000c2d0 <__alt_data_end+0xf800c2d0>
1000c764:	01c1ffc4 	movi	r7,2047
1000c768:	11c03b26 	beq	r2,r7,1000c858 <__adddf3+0x784>
1000c76c:	0109c83a 	sub	r4,zero,r4
1000c770:	29402034 	orhi	r5,r5,128
1000c774:	01c00e04 	movi	r7,56
1000c778:	39006216 	blt	r7,r4,1000c904 <__adddf3+0x830>
1000c77c:	01c007c4 	movi	r7,31
1000c780:	39006b16 	blt	r7,r4,1000c930 <__adddf3+0x85c>
1000c784:	01c00804 	movi	r7,32
1000c788:	390fc83a 	sub	r7,r7,r4
1000c78c:	29d4983a 	sll	r10,r5,r7
1000c790:	8912d83a 	srl	r9,r17,r4
1000c794:	89ce983a 	sll	r7,r17,r7
1000c798:	2908d83a 	srl	r4,r5,r4
1000c79c:	5262b03a 	or	r17,r10,r9
1000c7a0:	380ac03a 	cmpne	r5,r7,zero
1000c7a4:	8962b03a 	or	r17,r17,r5
1000c7a8:	89a3883a 	add	r17,r17,r6
1000c7ac:	2211883a 	add	r8,r4,r8
1000c7b0:	898d803a 	cmpltu	r6,r17,r6
1000c7b4:	418b883a 	add	r5,r8,r6
1000c7b8:	1021883a 	mov	r16,r2
1000c7bc:	003ee706 	br	1000c35c <__alt_data_end+0xf800c35c>
1000c7c0:	4184b03a 	or	r2,r8,r6
1000c7c4:	103e6226 	beq	r2,zero,1000c150 <__alt_data_end+0xf800c150>
1000c7c8:	8987c83a 	sub	r3,r17,r6
1000c7cc:	88c9803a 	cmpltu	r4,r17,r3
1000c7d0:	2a05c83a 	sub	r2,r5,r8
1000c7d4:	1105c83a 	sub	r2,r2,r4
1000c7d8:	1100202c 	andhi	r4,r2,128
1000c7dc:	203f0426 	beq	r4,zero,1000c3f0 <__alt_data_end+0xf800c3f0>
1000c7e0:	3463c83a 	sub	r17,r6,r17
1000c7e4:	414bc83a 	sub	r5,r8,r5
1000c7e8:	344d803a 	cmpltu	r6,r6,r17
1000c7ec:	298bc83a 	sub	r5,r5,r6
1000c7f0:	3825883a 	mov	r18,r7
1000c7f4:	003e5606 	br	1000c150 <__alt_data_end+0xf800c150>
1000c7f8:	4184b03a 	or	r2,r8,r6
1000c7fc:	10002b26 	beq	r2,zero,1000c8ac <__adddf3+0x7d8>
1000c800:	2804d0fa 	srli	r2,r5,3
1000c804:	8822d0fa 	srli	r17,r17,3
1000c808:	280a977a 	slli	r5,r5,29
1000c80c:	10c0022c 	andhi	r3,r2,8
1000c810:	2c62b03a 	or	r17,r5,r17
1000c814:	18000826 	beq	r3,zero,1000c838 <__adddf3+0x764>
1000c818:	4008d0fa 	srli	r4,r8,3
1000c81c:	20c0022c 	andhi	r3,r4,8
1000c820:	1800051e 	bne	r3,zero,1000c838 <__adddf3+0x764>
1000c824:	300cd0fa 	srli	r6,r6,3
1000c828:	4010977a 	slli	r8,r8,29
1000c82c:	2005883a 	mov	r2,r4
1000c830:	3825883a 	mov	r18,r7
1000c834:	41a2b03a 	or	r17,r8,r6
1000c838:	880ad77a 	srli	r5,r17,29
1000c83c:	100490fa 	slli	r2,r2,3
1000c840:	882290fa 	slli	r17,r17,3
1000c844:	0401ffc4 	movi	r16,2047
1000c848:	288ab03a 	or	r5,r5,r2
1000c84c:	003e4006 	br	1000c150 <__alt_data_end+0xf800c150>
1000c850:	01c1ffc4 	movi	r7,2047
1000c854:	11ffc71e 	bne	r2,r7,1000c774 <__alt_data_end+0xf800c774>
1000c858:	400b883a 	mov	r5,r8
1000c85c:	3023883a 	mov	r17,r6
1000c860:	1021883a 	mov	r16,r2
1000c864:	003e3a06 	br	1000c150 <__alt_data_end+0xf800c150>
1000c868:	10002d26 	beq	r2,zero,1000c920 <__adddf3+0x84c>
1000c86c:	4184b03a 	or	r2,r8,r6
1000c870:	10000e26 	beq	r2,zero,1000c8ac <__adddf3+0x7d8>
1000c874:	2804d0fa 	srli	r2,r5,3
1000c878:	8822d0fa 	srli	r17,r17,3
1000c87c:	280a977a 	slli	r5,r5,29
1000c880:	10c0022c 	andhi	r3,r2,8
1000c884:	2c62b03a 	or	r17,r5,r17
1000c888:	183feb26 	beq	r3,zero,1000c838 <__alt_data_end+0xf800c838>
1000c88c:	4008d0fa 	srli	r4,r8,3
1000c890:	20c0022c 	andhi	r3,r4,8
1000c894:	183fe81e 	bne	r3,zero,1000c838 <__alt_data_end+0xf800c838>
1000c898:	300cd0fa 	srli	r6,r6,3
1000c89c:	4010977a 	slli	r8,r8,29
1000c8a0:	2005883a 	mov	r2,r4
1000c8a4:	41a2b03a 	or	r17,r8,r6
1000c8a8:	003fe306 	br	1000c838 <__alt_data_end+0xf800c838>
1000c8ac:	0401ffc4 	movi	r16,2047
1000c8b0:	003e2706 	br	1000c150 <__alt_data_end+0xf800c150>
1000c8b4:	0011883a 	mov	r8,zero
1000c8b8:	003f8306 	br	1000c6c8 <__alt_data_end+0xf800c6c8>
1000c8bc:	193ff804 	addi	r4,r3,-32
1000c8c0:	02400804 	movi	r9,32
1000c8c4:	2908d83a 	srl	r4,r5,r4
1000c8c8:	1a402526 	beq	r3,r9,1000c960 <__adddf3+0x88c>
1000c8cc:	02401004 	movi	r9,64
1000c8d0:	48c7c83a 	sub	r3,r9,r3
1000c8d4:	28ca983a 	sll	r5,r5,r3
1000c8d8:	2c62b03a 	or	r17,r5,r17
1000c8dc:	8822c03a 	cmpne	r17,r17,zero
1000c8e0:	8922b03a 	or	r17,r17,r4
1000c8e4:	0007883a 	mov	r3,zero
1000c8e8:	003f2f06 	br	1000c5a8 <__alt_data_end+0xf800c5a8>
1000c8ec:	01402034 	movhi	r5,128
1000c8f0:	0007883a 	mov	r3,zero
1000c8f4:	297fffc4 	addi	r5,r5,-1
1000c8f8:	047ffe04 	movi	r17,-8
1000c8fc:	0401ffc4 	movi	r16,2047
1000c900:	003e7306 	br	1000c2d0 <__alt_data_end+0xf800c2d0>
1000c904:	2c62b03a 	or	r17,r5,r17
1000c908:	8822c03a 	cmpne	r17,r17,zero
1000c90c:	0009883a 	mov	r4,zero
1000c910:	003fa506 	br	1000c7a8 <__alt_data_end+0xf800c7a8>
1000c914:	400b883a 	mov	r5,r8
1000c918:	3023883a 	mov	r17,r6
1000c91c:	003e0c06 	br	1000c150 <__alt_data_end+0xf800c150>
1000c920:	400b883a 	mov	r5,r8
1000c924:	3023883a 	mov	r17,r6
1000c928:	0401ffc4 	movi	r16,2047
1000c92c:	003e0806 	br	1000c150 <__alt_data_end+0xf800c150>
1000c930:	21fff804 	addi	r7,r4,-32
1000c934:	02400804 	movi	r9,32
1000c938:	29ced83a 	srl	r7,r5,r7
1000c93c:	22400a26 	beq	r4,r9,1000c968 <__adddf3+0x894>
1000c940:	02401004 	movi	r9,64
1000c944:	4909c83a 	sub	r4,r9,r4
1000c948:	290a983a 	sll	r5,r5,r4
1000c94c:	2c62b03a 	or	r17,r5,r17
1000c950:	8822c03a 	cmpne	r17,r17,zero
1000c954:	89e2b03a 	or	r17,r17,r7
1000c958:	0009883a 	mov	r4,zero
1000c95c:	003f9206 	br	1000c7a8 <__alt_data_end+0xf800c7a8>
1000c960:	000b883a 	mov	r5,zero
1000c964:	003fdc06 	br	1000c8d8 <__alt_data_end+0xf800c8d8>
1000c968:	000b883a 	mov	r5,zero
1000c96c:	003ff706 	br	1000c94c <__alt_data_end+0xf800c94c>

1000c970 <__divdf3>:
1000c970:	defff004 	addi	sp,sp,-64
1000c974:	dc800815 	stw	r18,32(sp)
1000c978:	2824d53a 	srli	r18,r5,20
1000c97c:	dd800c15 	stw	r22,48(sp)
1000c980:	282cd7fa 	srli	r22,r5,31
1000c984:	dc000615 	stw	r16,24(sp)
1000c988:	04000434 	movhi	r16,16
1000c98c:	df000e15 	stw	fp,56(sp)
1000c990:	dd000a15 	stw	r20,40(sp)
1000c994:	dcc00915 	stw	r19,36(sp)
1000c998:	dc400715 	stw	r17,28(sp)
1000c99c:	843fffc4 	addi	r16,r16,-1
1000c9a0:	dfc00f15 	stw	ra,60(sp)
1000c9a4:	ddc00d15 	stw	r23,52(sp)
1000c9a8:	dd400b15 	stw	r21,44(sp)
1000c9ac:	9481ffcc 	andi	r18,r18,2047
1000c9b0:	2029883a 	mov	r20,r4
1000c9b4:	2027883a 	mov	r19,r4
1000c9b8:	2c22703a 	and	r17,r5,r16
1000c9bc:	b7003fcc 	andi	fp,r22,255
1000c9c0:	90005e26 	beq	r18,zero,1000cb3c <__divdf3+0x1cc>
1000c9c4:	0081ffc4 	movi	r2,2047
1000c9c8:	90803526 	beq	r18,r2,1000caa0 <__divdf3+0x130>
1000c9cc:	8c000434 	orhi	r16,r17,16
1000c9d0:	2004d77a 	srli	r2,r4,29
1000c9d4:	802090fa 	slli	r16,r16,3
1000c9d8:	202690fa 	slli	r19,r4,3
1000c9dc:	94bf0044 	addi	r18,r18,-1023
1000c9e0:	80a2b03a 	or	r17,r16,r2
1000c9e4:	0029883a 	mov	r20,zero
1000c9e8:	0011883a 	mov	r8,zero
1000c9ec:	380ad53a 	srli	r5,r7,20
1000c9f0:	382ed7fa 	srli	r23,r7,31
1000c9f4:	04000434 	movhi	r16,16
1000c9f8:	843fffc4 	addi	r16,r16,-1
1000c9fc:	2941ffcc 	andi	r5,r5,2047
1000ca00:	302b883a 	mov	r21,r6
1000ca04:	3c20703a 	and	r16,r7,r16
1000ca08:	ba403fcc 	andi	r9,r23,255
1000ca0c:	28006726 	beq	r5,zero,1000cbac <__divdf3+0x23c>
1000ca10:	0081ffc4 	movi	r2,2047
1000ca14:	28805f26 	beq	r5,r2,1000cb94 <__divdf3+0x224>
1000ca18:	84000434 	orhi	r16,r16,16
1000ca1c:	3004d77a 	srli	r2,r6,29
1000ca20:	802090fa 	slli	r16,r16,3
1000ca24:	302a90fa 	slli	r21,r6,3
1000ca28:	297f0044 	addi	r5,r5,-1023
1000ca2c:	80a0b03a 	or	r16,r16,r2
1000ca30:	000f883a 	mov	r7,zero
1000ca34:	3d06b03a 	or	r3,r7,r20
1000ca38:	180690ba 	slli	r3,r3,2
1000ca3c:	00840074 	movhi	r2,4097
1000ca40:	10b29804 	addi	r2,r2,-13728
1000ca44:	1885883a 	add	r2,r3,r2
1000ca48:	10800017 	ldw	r2,0(r2)
1000ca4c:	b5c8f03a 	xor	r4,r22,r23
1000ca50:	200d883a 	mov	r6,r4
1000ca54:	25003fcc 	andi	r20,r4,255
1000ca58:	9165c83a 	sub	r18,r18,r5
1000ca5c:	1000683a 	jmp	r2
1000ca60:	1000cca8 	cmpgeui	zero,r2,818
1000ca64:	1000cad8 	cmpnei	zero,r2,811
1000ca68:	1000cc6c 	andhi	zero,r2,817
1000ca6c:	1000cabc 	xorhi	zero,r2,810
1000ca70:	1000cc6c 	andhi	zero,r2,817
1000ca74:	1000cc40 	call	11000cc4 <_gp+0xfe7f6c>
1000ca78:	1000cc6c 	andhi	zero,r2,817
1000ca7c:	1000cabc 	xorhi	zero,r2,810
1000ca80:	1000cad8 	cmpnei	zero,r2,811
1000ca84:	1000cad8 	cmpnei	zero,r2,811
1000ca88:	1000cc40 	call	11000cc4 <_gp+0xfe7f6c>
1000ca8c:	1000cabc 	xorhi	zero,r2,810
1000ca90:	1000cacc 	andi	zero,r2,811
1000ca94:	1000cacc 	andi	zero,r2,811
1000ca98:	1000cacc 	andi	zero,r2,811
1000ca9c:	1000cc7c 	xorhi	zero,r2,817
1000caa0:	8904b03a 	or	r2,r17,r4
1000caa4:	1000631e 	bne	r2,zero,1000cc34 <__divdf3+0x2c4>
1000caa8:	05000204 	movi	r20,8
1000caac:	0023883a 	mov	r17,zero
1000cab0:	0027883a 	mov	r19,zero
1000cab4:	02000084 	movi	r8,2
1000cab8:	003fcc06 	br	1000c9ec <__alt_data_end+0xf800c9ec>
1000cabc:	8023883a 	mov	r17,r16
1000cac0:	a827883a 	mov	r19,r21
1000cac4:	4839883a 	mov	fp,r9
1000cac8:	3811883a 	mov	r8,r7
1000cacc:	00800084 	movi	r2,2
1000cad0:	4081531e 	bne	r8,r2,1000d020 <__divdf3+0x6b0>
1000cad4:	e029883a 	mov	r20,fp
1000cad8:	a180004c 	andi	r6,r20,1
1000cadc:	0201ffc4 	movi	r8,2047
1000cae0:	000b883a 	mov	r5,zero
1000cae4:	0027883a 	mov	r19,zero
1000cae8:	4010953a 	slli	r8,r8,20
1000caec:	30c03fcc 	andi	r3,r6,255
1000caf0:	04000434 	movhi	r16,16
1000caf4:	180697fa 	slli	r3,r3,31
1000caf8:	843fffc4 	addi	r16,r16,-1
1000cafc:	2c20703a 	and	r16,r5,r16
1000cb00:	8220b03a 	or	r16,r16,r8
1000cb04:	80c6b03a 	or	r3,r16,r3
1000cb08:	9805883a 	mov	r2,r19
1000cb0c:	dfc00f17 	ldw	ra,60(sp)
1000cb10:	df000e17 	ldw	fp,56(sp)
1000cb14:	ddc00d17 	ldw	r23,52(sp)
1000cb18:	dd800c17 	ldw	r22,48(sp)
1000cb1c:	dd400b17 	ldw	r21,44(sp)
1000cb20:	dd000a17 	ldw	r20,40(sp)
1000cb24:	dcc00917 	ldw	r19,36(sp)
1000cb28:	dc800817 	ldw	r18,32(sp)
1000cb2c:	dc400717 	ldw	r17,28(sp)
1000cb30:	dc000617 	ldw	r16,24(sp)
1000cb34:	dec01004 	addi	sp,sp,64
1000cb38:	f800283a 	ret
1000cb3c:	8904b03a 	or	r2,r17,r4
1000cb40:	10003726 	beq	r2,zero,1000cc20 <__divdf3+0x2b0>
1000cb44:	88014d26 	beq	r17,zero,1000d07c <__divdf3+0x70c>
1000cb48:	8809883a 	mov	r4,r17
1000cb4c:	d9800215 	stw	r6,8(sp)
1000cb50:	d9c00515 	stw	r7,20(sp)
1000cb54:	000e86c0 	call	1000e86c <__clzsi2>
1000cb58:	d9800217 	ldw	r6,8(sp)
1000cb5c:	d9c00517 	ldw	r7,20(sp)
1000cb60:	1007883a 	mov	r3,r2
1000cb64:	01000a04 	movi	r4,40
1000cb68:	1cfffe04 	addi	r19,r3,-8
1000cb6c:	20c9c83a 	sub	r4,r4,r3
1000cb70:	8cca983a 	sll	r5,r17,r19
1000cb74:	a108d83a 	srl	r4,r20,r4
1000cb78:	a4e6983a 	sll	r19,r20,r19
1000cb7c:	2162b03a 	or	r17,r4,r5
1000cb80:	04bf0344 	movi	r18,-1011
1000cb84:	90e5c83a 	sub	r18,r18,r3
1000cb88:	0029883a 	mov	r20,zero
1000cb8c:	0011883a 	mov	r8,zero
1000cb90:	003f9606 	br	1000c9ec <__alt_data_end+0xf800c9ec>
1000cb94:	8184b03a 	or	r2,r16,r6
1000cb98:	10001f1e 	bne	r2,zero,1000cc18 <__divdf3+0x2a8>
1000cb9c:	0021883a 	mov	r16,zero
1000cba0:	002b883a 	mov	r21,zero
1000cba4:	01c00084 	movi	r7,2
1000cba8:	003fa206 	br	1000ca34 <__alt_data_end+0xf800ca34>
1000cbac:	8184b03a 	or	r2,r16,r6
1000cbb0:	10001526 	beq	r2,zero,1000cc08 <__divdf3+0x298>
1000cbb4:	80013d26 	beq	r16,zero,1000d0ac <__divdf3+0x73c>
1000cbb8:	8009883a 	mov	r4,r16
1000cbbc:	d9800215 	stw	r6,8(sp)
1000cbc0:	da000315 	stw	r8,12(sp)
1000cbc4:	da400415 	stw	r9,16(sp)
1000cbc8:	000e86c0 	call	1000e86c <__clzsi2>
1000cbcc:	d9800217 	ldw	r6,8(sp)
1000cbd0:	da000317 	ldw	r8,12(sp)
1000cbd4:	da400417 	ldw	r9,16(sp)
1000cbd8:	1007883a 	mov	r3,r2
1000cbdc:	01000a04 	movi	r4,40
1000cbe0:	1d7ffe04 	addi	r21,r3,-8
1000cbe4:	20c9c83a 	sub	r4,r4,r3
1000cbe8:	8560983a 	sll	r16,r16,r21
1000cbec:	3108d83a 	srl	r4,r6,r4
1000cbf0:	356a983a 	sll	r21,r6,r21
1000cbf4:	2420b03a 	or	r16,r4,r16
1000cbf8:	017f0344 	movi	r5,-1011
1000cbfc:	28cbc83a 	sub	r5,r5,r3
1000cc00:	000f883a 	mov	r7,zero
1000cc04:	003f8b06 	br	1000ca34 <__alt_data_end+0xf800ca34>
1000cc08:	0021883a 	mov	r16,zero
1000cc0c:	002b883a 	mov	r21,zero
1000cc10:	01c00044 	movi	r7,1
1000cc14:	003f8706 	br	1000ca34 <__alt_data_end+0xf800ca34>
1000cc18:	01c000c4 	movi	r7,3
1000cc1c:	003f8506 	br	1000ca34 <__alt_data_end+0xf800ca34>
1000cc20:	05000104 	movi	r20,4
1000cc24:	0023883a 	mov	r17,zero
1000cc28:	0027883a 	mov	r19,zero
1000cc2c:	02000044 	movi	r8,1
1000cc30:	003f6e06 	br	1000c9ec <__alt_data_end+0xf800c9ec>
1000cc34:	05000304 	movi	r20,12
1000cc38:	020000c4 	movi	r8,3
1000cc3c:	003f6b06 	br	1000c9ec <__alt_data_end+0xf800c9ec>
1000cc40:	01400434 	movhi	r5,16
1000cc44:	000d883a 	mov	r6,zero
1000cc48:	297fffc4 	addi	r5,r5,-1
1000cc4c:	04ffffc4 	movi	r19,-1
1000cc50:	0201ffc4 	movi	r8,2047
1000cc54:	003fa406 	br	1000cae8 <__alt_data_end+0xf800cae8>
1000cc58:	043f0084 	movi	r16,-1022
1000cc5c:	84a1c83a 	sub	r16,r16,r18
1000cc60:	00800e04 	movi	r2,56
1000cc64:	14014d0e 	bge	r2,r16,1000d19c <__divdf3+0x82c>
1000cc68:	a180004c 	andi	r6,r20,1
1000cc6c:	0011883a 	mov	r8,zero
1000cc70:	000b883a 	mov	r5,zero
1000cc74:	0027883a 	mov	r19,zero
1000cc78:	003f9b06 	br	1000cae8 <__alt_data_end+0xf800cae8>
1000cc7c:	8880022c 	andhi	r2,r17,8
1000cc80:	1000f026 	beq	r2,zero,1000d044 <__divdf3+0x6d4>
1000cc84:	8080022c 	andhi	r2,r16,8
1000cc88:	1000ee1e 	bne	r2,zero,1000d044 <__divdf3+0x6d4>
1000cc8c:	00800434 	movhi	r2,16
1000cc90:	81400234 	orhi	r5,r16,8
1000cc94:	10bfffc4 	addi	r2,r2,-1
1000cc98:	b80d883a 	mov	r6,r23
1000cc9c:	288a703a 	and	r5,r5,r2
1000cca0:	a827883a 	mov	r19,r21
1000cca4:	003fea06 	br	1000cc50 <__alt_data_end+0xf800cc50>
1000cca8:	84411c36 	bltu	r16,r17,1000d11c <__divdf3+0x7ac>
1000ccac:	8c011a26 	beq	r17,r16,1000d118 <__divdf3+0x7a8>
1000ccb0:	94bfffc4 	addi	r18,r18,-1
1000ccb4:	dcc00015 	stw	r19,0(sp)
1000ccb8:	8811883a 	mov	r8,r17
1000ccbc:	002d883a 	mov	r22,zero
1000ccc0:	a80cd63a 	srli	r6,r21,24
1000ccc4:	8020923a 	slli	r16,r16,8
1000ccc8:	a82a923a 	slli	r21,r21,8
1000cccc:	4009883a 	mov	r4,r8
1000ccd0:	342eb03a 	or	r23,r6,r16
1000ccd4:	dd400115 	stw	r21,4(sp)
1000ccd8:	b82ad43a 	srli	r21,r23,16
1000ccdc:	da000315 	stw	r8,12(sp)
1000cce0:	bcffffcc 	andi	r19,r23,65535
1000cce4:	a80b883a 	mov	r5,r21
1000cce8:	000c09c0 	call	1000c09c <__udivsi3>
1000ccec:	1009883a 	mov	r4,r2
1000ccf0:	980b883a 	mov	r5,r19
1000ccf4:	1023883a 	mov	r17,r2
1000ccf8:	000c0ac0 	call	1000c0ac <__mulsi3>
1000ccfc:	da000317 	ldw	r8,12(sp)
1000cd00:	a80b883a 	mov	r5,r21
1000cd04:	1039883a 	mov	fp,r2
1000cd08:	4009883a 	mov	r4,r8
1000cd0c:	000c0a40 	call	1000c0a4 <__umodsi3>
1000cd10:	d8c00017 	ldw	r3,0(sp)
1000cd14:	1004943a 	slli	r2,r2,16
1000cd18:	1810d43a 	srli	r8,r3,16
1000cd1c:	120eb03a 	or	r7,r2,r8
1000cd20:	3f00062e 	bgeu	r7,fp,1000cd3c <__divdf3+0x3cc>
1000cd24:	3dcf883a 	add	r7,r7,r23
1000cd28:	88bfffc4 	addi	r2,r17,-1
1000cd2c:	3dc10a36 	bltu	r7,r23,1000d158 <__divdf3+0x7e8>
1000cd30:	3f01092e 	bgeu	r7,fp,1000d158 <__divdf3+0x7e8>
1000cd34:	8c7fff84 	addi	r17,r17,-2
1000cd38:	3dcf883a 	add	r7,r7,r23
1000cd3c:	3f39c83a 	sub	fp,r7,fp
1000cd40:	e009883a 	mov	r4,fp
1000cd44:	a80b883a 	mov	r5,r21
1000cd48:	000c09c0 	call	1000c09c <__udivsi3>
1000cd4c:	1009883a 	mov	r4,r2
1000cd50:	980b883a 	mov	r5,r19
1000cd54:	1021883a 	mov	r16,r2
1000cd58:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cd5c:	e009883a 	mov	r4,fp
1000cd60:	a80b883a 	mov	r5,r21
1000cd64:	d8800315 	stw	r2,12(sp)
1000cd68:	000c0a40 	call	1000c0a4 <__umodsi3>
1000cd6c:	d9000017 	ldw	r4,0(sp)
1000cd70:	1004943a 	slli	r2,r2,16
1000cd74:	da000317 	ldw	r8,12(sp)
1000cd78:	20ffffcc 	andi	r3,r4,65535
1000cd7c:	10ceb03a 	or	r7,r2,r3
1000cd80:	3a00062e 	bgeu	r7,r8,1000cd9c <__divdf3+0x42c>
1000cd84:	3dcf883a 	add	r7,r7,r23
1000cd88:	80bfffc4 	addi	r2,r16,-1
1000cd8c:	3dc0f036 	bltu	r7,r23,1000d150 <__divdf3+0x7e0>
1000cd90:	3a00ef2e 	bgeu	r7,r8,1000d150 <__divdf3+0x7e0>
1000cd94:	843fff84 	addi	r16,r16,-2
1000cd98:	3dcf883a 	add	r7,r7,r23
1000cd9c:	d8c00117 	ldw	r3,4(sp)
1000cda0:	8822943a 	slli	r17,r17,16
1000cda4:	3a0fc83a 	sub	r7,r7,r8
1000cda8:	1806d43a 	srli	r3,r3,16
1000cdac:	8462b03a 	or	r17,r16,r17
1000cdb0:	8affffcc 	andi	r11,r17,65535
1000cdb4:	d8c00015 	stw	r3,0(sp)
1000cdb8:	d8c00117 	ldw	r3,4(sp)
1000cdbc:	8820d43a 	srli	r16,r17,16
1000cdc0:	5809883a 	mov	r4,r11
1000cdc4:	1f3fffcc 	andi	fp,r3,65535
1000cdc8:	e00b883a 	mov	r5,fp
1000cdcc:	d9c00515 	stw	r7,20(sp)
1000cdd0:	dac00215 	stw	r11,8(sp)
1000cdd4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cdd8:	8009883a 	mov	r4,r16
1000cddc:	e00b883a 	mov	r5,fp
1000cde0:	d8800415 	stw	r2,16(sp)
1000cde4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cde8:	d9400017 	ldw	r5,0(sp)
1000cdec:	8009883a 	mov	r4,r16
1000cdf0:	d8800315 	stw	r2,12(sp)
1000cdf4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cdf8:	dac00217 	ldw	r11,8(sp)
1000cdfc:	d9400017 	ldw	r5,0(sp)
1000ce00:	d8800215 	stw	r2,8(sp)
1000ce04:	5809883a 	mov	r4,r11
1000ce08:	000c0ac0 	call	1000c0ac <__mulsi3>
1000ce0c:	da400417 	ldw	r9,16(sp)
1000ce10:	da800317 	ldw	r10,12(sp)
1000ce14:	d9c00517 	ldw	r7,20(sp)
1000ce18:	480ad43a 	srli	r5,r9,16
1000ce1c:	5085883a 	add	r2,r10,r2
1000ce20:	db000217 	ldw	r12,8(sp)
1000ce24:	1151883a 	add	r8,r2,r5
1000ce28:	4280022e 	bgeu	r8,r10,1000ce34 <__divdf3+0x4c4>
1000ce2c:	00800074 	movhi	r2,1
1000ce30:	6099883a 	add	r12,r12,r2
1000ce34:	400ad43a 	srli	r5,r8,16
1000ce38:	4010943a 	slli	r8,r8,16
1000ce3c:	4c3fffcc 	andi	r16,r9,65535
1000ce40:	6149883a 	add	r4,r12,r5
1000ce44:	4411883a 	add	r8,r8,r16
1000ce48:	3900a736 	bltu	r7,r4,1000d0e8 <__divdf3+0x778>
1000ce4c:	3900c426 	beq	r7,r4,1000d160 <__divdf3+0x7f0>
1000ce50:	3909c83a 	sub	r4,r7,r4
1000ce54:	b221c83a 	sub	r16,r22,r8
1000ce58:	b42d803a 	cmpltu	r22,r22,r16
1000ce5c:	25adc83a 	sub	r22,r4,r22
1000ce60:	b5c0c626 	beq	r22,r23,1000d17c <__divdf3+0x80c>
1000ce64:	b009883a 	mov	r4,r22
1000ce68:	a80b883a 	mov	r5,r21
1000ce6c:	000c09c0 	call	1000c09c <__udivsi3>
1000ce70:	1009883a 	mov	r4,r2
1000ce74:	980b883a 	mov	r5,r19
1000ce78:	d8800315 	stw	r2,12(sp)
1000ce7c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000ce80:	a80b883a 	mov	r5,r21
1000ce84:	b009883a 	mov	r4,r22
1000ce88:	d8800415 	stw	r2,16(sp)
1000ce8c:	000c0a40 	call	1000c0a4 <__umodsi3>
1000ce90:	1004943a 	slli	r2,r2,16
1000ce94:	800ed43a 	srli	r7,r16,16
1000ce98:	da400417 	ldw	r9,16(sp)
1000ce9c:	da000317 	ldw	r8,12(sp)
1000cea0:	11cab03a 	or	r5,r2,r7
1000cea4:	2a40062e 	bgeu	r5,r9,1000cec0 <__divdf3+0x550>
1000cea8:	2dcb883a 	add	r5,r5,r23
1000ceac:	40bfffc4 	addi	r2,r8,-1
1000ceb0:	2dc0b436 	bltu	r5,r23,1000d184 <__divdf3+0x814>
1000ceb4:	2a40b32e 	bgeu	r5,r9,1000d184 <__divdf3+0x814>
1000ceb8:	423fff84 	addi	r8,r8,-2
1000cebc:	2dcb883a 	add	r5,r5,r23
1000cec0:	2a6dc83a 	sub	r22,r5,r9
1000cec4:	b009883a 	mov	r4,r22
1000cec8:	a80b883a 	mov	r5,r21
1000cecc:	da000315 	stw	r8,12(sp)
1000ced0:	000c09c0 	call	1000c09c <__udivsi3>
1000ced4:	980b883a 	mov	r5,r19
1000ced8:	1009883a 	mov	r4,r2
1000cedc:	d8800415 	stw	r2,16(sp)
1000cee0:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cee4:	b009883a 	mov	r4,r22
1000cee8:	a80b883a 	mov	r5,r21
1000ceec:	1027883a 	mov	r19,r2
1000cef0:	000c0a40 	call	1000c0a4 <__umodsi3>
1000cef4:	1004943a 	slli	r2,r2,16
1000cef8:	843fffcc 	andi	r16,r16,65535
1000cefc:	da000317 	ldw	r8,12(sp)
1000cf00:	140eb03a 	or	r7,r2,r16
1000cf04:	da400417 	ldw	r9,16(sp)
1000cf08:	3cc0062e 	bgeu	r7,r19,1000cf24 <__divdf3+0x5b4>
1000cf0c:	3dcf883a 	add	r7,r7,r23
1000cf10:	48bfffc4 	addi	r2,r9,-1
1000cf14:	3dc09d36 	bltu	r7,r23,1000d18c <__divdf3+0x81c>
1000cf18:	3cc09c2e 	bgeu	r7,r19,1000d18c <__divdf3+0x81c>
1000cf1c:	4a7fff84 	addi	r9,r9,-2
1000cf20:	3dcf883a 	add	r7,r7,r23
1000cf24:	4010943a 	slli	r8,r8,16
1000cf28:	3cebc83a 	sub	r21,r7,r19
1000cf2c:	e00b883a 	mov	r5,fp
1000cf30:	4a26b03a 	or	r19,r9,r8
1000cf34:	99ffffcc 	andi	r7,r19,65535
1000cf38:	9820d43a 	srli	r16,r19,16
1000cf3c:	3809883a 	mov	r4,r7
1000cf40:	d9c00515 	stw	r7,20(sp)
1000cf44:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cf48:	8009883a 	mov	r4,r16
1000cf4c:	e00b883a 	mov	r5,fp
1000cf50:	102d883a 	mov	r22,r2
1000cf54:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cf58:	d9400017 	ldw	r5,0(sp)
1000cf5c:	8009883a 	mov	r4,r16
1000cf60:	1039883a 	mov	fp,r2
1000cf64:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cf68:	d9c00517 	ldw	r7,20(sp)
1000cf6c:	d9400017 	ldw	r5,0(sp)
1000cf70:	1021883a 	mov	r16,r2
1000cf74:	3809883a 	mov	r4,r7
1000cf78:	000c0ac0 	call	1000c0ac <__mulsi3>
1000cf7c:	b008d43a 	srli	r4,r22,16
1000cf80:	e085883a 	add	r2,fp,r2
1000cf84:	1109883a 	add	r4,r2,r4
1000cf88:	2700022e 	bgeu	r4,fp,1000cf94 <__divdf3+0x624>
1000cf8c:	00800074 	movhi	r2,1
1000cf90:	80a1883a 	add	r16,r16,r2
1000cf94:	200ad43a 	srli	r5,r4,16
1000cf98:	2008943a 	slli	r4,r4,16
1000cf9c:	b5bfffcc 	andi	r22,r22,65535
1000cfa0:	8145883a 	add	r2,r16,r5
1000cfa4:	2589883a 	add	r4,r4,r22
1000cfa8:	a8802c36 	bltu	r21,r2,1000d05c <__divdf3+0x6ec>
1000cfac:	a880a426 	beq	r21,r2,1000d240 <__divdf3+0x8d0>
1000cfb0:	9cc00054 	ori	r19,r19,1
1000cfb4:	9200ffc4 	addi	r8,r18,1023
1000cfb8:	023f270e 	bge	zero,r8,1000cc58 <__alt_data_end+0xf800cc58>
1000cfbc:	988001cc 	andi	r2,r19,7
1000cfc0:	10000726 	beq	r2,zero,1000cfe0 <__divdf3+0x670>
1000cfc4:	990003cc 	andi	r4,r19,15
1000cfc8:	00800104 	movi	r2,4
1000cfcc:	20800426 	beq	r4,r2,1000cfe0 <__divdf3+0x670>
1000cfd0:	9885883a 	add	r2,r19,r2
1000cfd4:	14e7803a 	cmpltu	r19,r2,r19
1000cfd8:	8ce3883a 	add	r17,r17,r19
1000cfdc:	1027883a 	mov	r19,r2
1000cfe0:	8880402c 	andhi	r2,r17,256
1000cfe4:	10000426 	beq	r2,zero,1000cff8 <__divdf3+0x688>
1000cfe8:	00bfc034 	movhi	r2,65280
1000cfec:	10bfffc4 	addi	r2,r2,-1
1000cff0:	92010004 	addi	r8,r18,1024
1000cff4:	88a2703a 	and	r17,r17,r2
1000cff8:	0081ff84 	movi	r2,2046
1000cffc:	123eb616 	blt	r2,r8,1000cad8 <__alt_data_end+0xf800cad8>
1000d000:	9826d0fa 	srli	r19,r19,3
1000d004:	8804977a 	slli	r2,r17,29
1000d008:	8820927a 	slli	r16,r17,9
1000d00c:	4201ffcc 	andi	r8,r8,2047
1000d010:	14e6b03a 	or	r19,r2,r19
1000d014:	800ad33a 	srli	r5,r16,12
1000d018:	a180004c 	andi	r6,r20,1
1000d01c:	003eb206 	br	1000cae8 <__alt_data_end+0xf800cae8>
1000d020:	008000c4 	movi	r2,3
1000d024:	4080ac26 	beq	r8,r2,1000d2d8 <__divdf3+0x968>
1000d028:	00800044 	movi	r2,1
1000d02c:	4080591e 	bne	r8,r2,1000d194 <__divdf3+0x824>
1000d030:	e00d883a 	mov	r6,fp
1000d034:	0011883a 	mov	r8,zero
1000d038:	000b883a 	mov	r5,zero
1000d03c:	0027883a 	mov	r19,zero
1000d040:	003ea906 	br	1000cae8 <__alt_data_end+0xf800cae8>
1000d044:	00800434 	movhi	r2,16
1000d048:	89400234 	orhi	r5,r17,8
1000d04c:	10bfffc4 	addi	r2,r2,-1
1000d050:	b00d883a 	mov	r6,r22
1000d054:	288a703a 	and	r5,r5,r2
1000d058:	003efd06 	br	1000cc50 <__alt_data_end+0xf800cc50>
1000d05c:	adcf883a 	add	r7,r21,r23
1000d060:	997fffc4 	addi	r5,r19,-1
1000d064:	3dc0412e 	bgeu	r7,r23,1000d16c <__divdf3+0x7fc>
1000d068:	2827883a 	mov	r19,r5
1000d06c:	38bfd01e 	bne	r7,r2,1000cfb0 <__alt_data_end+0xf800cfb0>
1000d070:	d8c00117 	ldw	r3,4(sp)
1000d074:	193fce1e 	bne	r3,r4,1000cfb0 <__alt_data_end+0xf800cfb0>
1000d078:	003fce06 	br	1000cfb4 <__alt_data_end+0xf800cfb4>
1000d07c:	d9800215 	stw	r6,8(sp)
1000d080:	d9c00515 	stw	r7,20(sp)
1000d084:	000e86c0 	call	1000e86c <__clzsi2>
1000d088:	10c00804 	addi	r3,r2,32
1000d08c:	010009c4 	movi	r4,39
1000d090:	d9800217 	ldw	r6,8(sp)
1000d094:	d9c00517 	ldw	r7,20(sp)
1000d098:	20feb20e 	bge	r4,r3,1000cb64 <__alt_data_end+0xf800cb64>
1000d09c:	117ffe04 	addi	r5,r2,-8
1000d0a0:	a162983a 	sll	r17,r20,r5
1000d0a4:	0027883a 	mov	r19,zero
1000d0a8:	003eb506 	br	1000cb80 <__alt_data_end+0xf800cb80>
1000d0ac:	3009883a 	mov	r4,r6
1000d0b0:	d9800215 	stw	r6,8(sp)
1000d0b4:	da000315 	stw	r8,12(sp)
1000d0b8:	da400415 	stw	r9,16(sp)
1000d0bc:	000e86c0 	call	1000e86c <__clzsi2>
1000d0c0:	10c00804 	addi	r3,r2,32
1000d0c4:	010009c4 	movi	r4,39
1000d0c8:	d9800217 	ldw	r6,8(sp)
1000d0cc:	da000317 	ldw	r8,12(sp)
1000d0d0:	da400417 	ldw	r9,16(sp)
1000d0d4:	20fec10e 	bge	r4,r3,1000cbdc <__alt_data_end+0xf800cbdc>
1000d0d8:	10bffe04 	addi	r2,r2,-8
1000d0dc:	a8a0983a 	sll	r16,r21,r2
1000d0e0:	002b883a 	mov	r21,zero
1000d0e4:	003ec406 	br	1000cbf8 <__alt_data_end+0xf800cbf8>
1000d0e8:	d8c00117 	ldw	r3,4(sp)
1000d0ec:	b0ed883a 	add	r22,r22,r3
1000d0f0:	b0c5803a 	cmpltu	r2,r22,r3
1000d0f4:	15c5883a 	add	r2,r2,r23
1000d0f8:	11cf883a 	add	r7,r2,r7
1000d0fc:	88bfffc4 	addi	r2,r17,-1
1000d100:	b9c00d2e 	bgeu	r23,r7,1000d138 <__divdf3+0x7c8>
1000d104:	39003f36 	bltu	r7,r4,1000d204 <__divdf3+0x894>
1000d108:	21c06a26 	beq	r4,r7,1000d2b4 <__divdf3+0x944>
1000d10c:	3909c83a 	sub	r4,r7,r4
1000d110:	1023883a 	mov	r17,r2
1000d114:	003f4f06 	br	1000ce54 <__alt_data_end+0xf800ce54>
1000d118:	9d7ee536 	bltu	r19,r21,1000ccb0 <__alt_data_end+0xf800ccb0>
1000d11c:	982ed07a 	srli	r23,r19,1
1000d120:	880497fa 	slli	r2,r17,31
1000d124:	8810d07a 	srli	r8,r17,1
1000d128:	982c97fa 	slli	r22,r19,31
1000d12c:	b884b03a 	or	r2,r23,r2
1000d130:	d8800015 	stw	r2,0(sp)
1000d134:	003ee206 	br	1000ccc0 <__alt_data_end+0xf800ccc0>
1000d138:	3dfff41e 	bne	r7,r23,1000d10c <__alt_data_end+0xf800d10c>
1000d13c:	d8c00117 	ldw	r3,4(sp)
1000d140:	b0fff02e 	bgeu	r22,r3,1000d104 <__alt_data_end+0xf800d104>
1000d144:	b909c83a 	sub	r4,r23,r4
1000d148:	1023883a 	mov	r17,r2
1000d14c:	003f4106 	br	1000ce54 <__alt_data_end+0xf800ce54>
1000d150:	1021883a 	mov	r16,r2
1000d154:	003f1106 	br	1000cd9c <__alt_data_end+0xf800cd9c>
1000d158:	1023883a 	mov	r17,r2
1000d15c:	003ef706 	br	1000cd3c <__alt_data_end+0xf800cd3c>
1000d160:	b23fe136 	bltu	r22,r8,1000d0e8 <__alt_data_end+0xf800d0e8>
1000d164:	0009883a 	mov	r4,zero
1000d168:	003f3a06 	br	1000ce54 <__alt_data_end+0xf800ce54>
1000d16c:	38802c36 	bltu	r7,r2,1000d220 <__divdf3+0x8b0>
1000d170:	11c05326 	beq	r2,r7,1000d2c0 <__divdf3+0x950>
1000d174:	2827883a 	mov	r19,r5
1000d178:	003f8d06 	br	1000cfb0 <__alt_data_end+0xf800cfb0>
1000d17c:	04ffffc4 	movi	r19,-1
1000d180:	003f8c06 	br	1000cfb4 <__alt_data_end+0xf800cfb4>
1000d184:	1011883a 	mov	r8,r2
1000d188:	003f4d06 	br	1000cec0 <__alt_data_end+0xf800cec0>
1000d18c:	1013883a 	mov	r9,r2
1000d190:	003f6406 	br	1000cf24 <__alt_data_end+0xf800cf24>
1000d194:	e029883a 	mov	r20,fp
1000d198:	003f8606 	br	1000cfb4 <__alt_data_end+0xf800cfb4>
1000d19c:	008007c4 	movi	r2,31
1000d1a0:	14002a16 	blt	r2,r16,1000d24c <__divdf3+0x8dc>
1000d1a4:	91410784 	addi	r5,r18,1054
1000d1a8:	9c0cd83a 	srl	r6,r19,r16
1000d1ac:	8948983a 	sll	r4,r17,r5
1000d1b0:	9944983a 	sll	r2,r19,r5
1000d1b4:	8c20d83a 	srl	r16,r17,r16
1000d1b8:	3108b03a 	or	r4,r6,r4
1000d1bc:	1004c03a 	cmpne	r2,r2,zero
1000d1c0:	2084b03a 	or	r2,r4,r2
1000d1c4:	110001cc 	andi	r4,r2,7
1000d1c8:	20000726 	beq	r4,zero,1000d1e8 <__divdf3+0x878>
1000d1cc:	114003cc 	andi	r5,r2,15
1000d1d0:	01000104 	movi	r4,4
1000d1d4:	29000426 	beq	r5,r4,1000d1e8 <__divdf3+0x878>
1000d1d8:	11000104 	addi	r4,r2,4
1000d1dc:	2085803a 	cmpltu	r2,r4,r2
1000d1e0:	80a1883a 	add	r16,r16,r2
1000d1e4:	2005883a 	mov	r2,r4
1000d1e8:	8100202c 	andhi	r4,r16,128
1000d1ec:	20002d26 	beq	r4,zero,1000d2a4 <__divdf3+0x934>
1000d1f0:	a180004c 	andi	r6,r20,1
1000d1f4:	02000044 	movi	r8,1
1000d1f8:	000b883a 	mov	r5,zero
1000d1fc:	0027883a 	mov	r19,zero
1000d200:	003e3906 	br	1000cae8 <__alt_data_end+0xf800cae8>
1000d204:	d8c00117 	ldw	r3,4(sp)
1000d208:	8c7fff84 	addi	r17,r17,-2
1000d20c:	b0ed883a 	add	r22,r22,r3
1000d210:	b0c5803a 	cmpltu	r2,r22,r3
1000d214:	15c5883a 	add	r2,r2,r23
1000d218:	11cf883a 	add	r7,r2,r7
1000d21c:	003f0c06 	br	1000ce50 <__alt_data_end+0xf800ce50>
1000d220:	d8c00117 	ldw	r3,4(sp)
1000d224:	997fff84 	addi	r5,r19,-2
1000d228:	18d1883a 	add	r8,r3,r3
1000d22c:	40c7803a 	cmpltu	r3,r8,r3
1000d230:	1dcd883a 	add	r6,r3,r23
1000d234:	398f883a 	add	r7,r7,r6
1000d238:	da000115 	stw	r8,4(sp)
1000d23c:	003f8a06 	br	1000d068 <__alt_data_end+0xf800d068>
1000d240:	203f861e 	bne	r4,zero,1000d05c <__alt_data_end+0xf800d05c>
1000d244:	d8000115 	stw	zero,4(sp)
1000d248:	003f8906 	br	1000d070 <__alt_data_end+0xf800d070>
1000d24c:	00bef884 	movi	r2,-1054
1000d250:	1485c83a 	sub	r2,r2,r18
1000d254:	01000804 	movi	r4,32
1000d258:	8884d83a 	srl	r2,r17,r2
1000d25c:	81001c26 	beq	r16,r4,1000d2d0 <__divdf3+0x960>
1000d260:	91010f84 	addi	r4,r18,1086
1000d264:	8908983a 	sll	r4,r17,r4
1000d268:	24c8b03a 	or	r4,r4,r19
1000d26c:	2008c03a 	cmpne	r4,r4,zero
1000d270:	2084b03a 	or	r2,r4,r2
1000d274:	140001cc 	andi	r16,r2,7
1000d278:	8000061e 	bne	r16,zero,1000d294 <__divdf3+0x924>
1000d27c:	000b883a 	mov	r5,zero
1000d280:	1004d0fa 	srli	r2,r2,3
1000d284:	a180004c 	andi	r6,r20,1
1000d288:	0011883a 	mov	r8,zero
1000d28c:	1426b03a 	or	r19,r2,r16
1000d290:	003e1506 	br	1000cae8 <__alt_data_end+0xf800cae8>
1000d294:	114003cc 	andi	r5,r2,15
1000d298:	01000104 	movi	r4,4
1000d29c:	0021883a 	mov	r16,zero
1000d2a0:	293fcd1e 	bne	r5,r4,1000d1d8 <__alt_data_end+0xf800d1d8>
1000d2a4:	800a927a 	slli	r5,r16,9
1000d2a8:	8020977a 	slli	r16,r16,29
1000d2ac:	280ad33a 	srli	r5,r5,12
1000d2b0:	003ff306 	br	1000d280 <__alt_data_end+0xf800d280>
1000d2b4:	b23fd336 	bltu	r22,r8,1000d204 <__alt_data_end+0xf800d204>
1000d2b8:	1023883a 	mov	r17,r2
1000d2bc:	003fa906 	br	1000d164 <__alt_data_end+0xf800d164>
1000d2c0:	d8c00117 	ldw	r3,4(sp)
1000d2c4:	193fd636 	bltu	r3,r4,1000d220 <__alt_data_end+0xf800d220>
1000d2c8:	2827883a 	mov	r19,r5
1000d2cc:	003f6806 	br	1000d070 <__alt_data_end+0xf800d070>
1000d2d0:	0009883a 	mov	r4,zero
1000d2d4:	003fe406 	br	1000d268 <__alt_data_end+0xf800d268>
1000d2d8:	00800434 	movhi	r2,16
1000d2dc:	89400234 	orhi	r5,r17,8
1000d2e0:	10bfffc4 	addi	r2,r2,-1
1000d2e4:	e00d883a 	mov	r6,fp
1000d2e8:	288a703a 	and	r5,r5,r2
1000d2ec:	003e5806 	br	1000cc50 <__alt_data_end+0xf800cc50>

1000d2f0 <__eqdf2>:
1000d2f0:	2804d53a 	srli	r2,r5,20
1000d2f4:	3806d53a 	srli	r3,r7,20
1000d2f8:	02000434 	movhi	r8,16
1000d2fc:	423fffc4 	addi	r8,r8,-1
1000d300:	1081ffcc 	andi	r2,r2,2047
1000d304:	0241ffc4 	movi	r9,2047
1000d308:	2a14703a 	and	r10,r5,r8
1000d30c:	18c1ffcc 	andi	r3,r3,2047
1000d310:	3a10703a 	and	r8,r7,r8
1000d314:	280ad7fa 	srli	r5,r5,31
1000d318:	380ed7fa 	srli	r7,r7,31
1000d31c:	12400f26 	beq	r2,r9,1000d35c <__eqdf2+0x6c>
1000d320:	0241ffc4 	movi	r9,2047
1000d324:	1a400326 	beq	r3,r9,1000d334 <__eqdf2+0x44>
1000d328:	10c00526 	beq	r2,r3,1000d340 <__eqdf2+0x50>
1000d32c:	00800044 	movi	r2,1
1000d330:	f800283a 	ret
1000d334:	4192b03a 	or	r9,r8,r6
1000d338:	483ffc1e 	bne	r9,zero,1000d32c <__alt_data_end+0xf800d32c>
1000d33c:	10fffb1e 	bne	r2,r3,1000d32c <__alt_data_end+0xf800d32c>
1000d340:	523ffa1e 	bne	r10,r8,1000d32c <__alt_data_end+0xf800d32c>
1000d344:	21bff91e 	bne	r4,r6,1000d32c <__alt_data_end+0xf800d32c>
1000d348:	29c00826 	beq	r5,r7,1000d36c <__eqdf2+0x7c>
1000d34c:	103ff71e 	bne	r2,zero,1000d32c <__alt_data_end+0xf800d32c>
1000d350:	5104b03a 	or	r2,r10,r4
1000d354:	1004c03a 	cmpne	r2,r2,zero
1000d358:	f800283a 	ret
1000d35c:	5112b03a 	or	r9,r10,r4
1000d360:	483fef26 	beq	r9,zero,1000d320 <__alt_data_end+0xf800d320>
1000d364:	00800044 	movi	r2,1
1000d368:	f800283a 	ret
1000d36c:	0005883a 	mov	r2,zero
1000d370:	f800283a 	ret

1000d374 <__gedf2>:
1000d374:	2804d53a 	srli	r2,r5,20
1000d378:	3806d53a 	srli	r3,r7,20
1000d37c:	02000434 	movhi	r8,16
1000d380:	423fffc4 	addi	r8,r8,-1
1000d384:	0241ffc4 	movi	r9,2047
1000d388:	1081ffcc 	andi	r2,r2,2047
1000d38c:	2a14703a 	and	r10,r5,r8
1000d390:	1a46703a 	and	r3,r3,r9
1000d394:	3a10703a 	and	r8,r7,r8
1000d398:	280ad7fa 	srli	r5,r5,31
1000d39c:	380ed7fa 	srli	r7,r7,31
1000d3a0:	12400b26 	beq	r2,r9,1000d3d0 <__gedf2+0x5c>
1000d3a4:	1a401626 	beq	r3,r9,1000d400 <__gedf2+0x8c>
1000d3a8:	10000c1e 	bne	r2,zero,1000d3dc <__gedf2+0x68>
1000d3ac:	5112b03a 	or	r9,r10,r4
1000d3b0:	4813003a 	cmpeq	r9,r9,zero
1000d3b4:	4817883a 	mov	r11,r9
1000d3b8:	18000c1e 	bne	r3,zero,1000d3ec <__gedf2+0x78>
1000d3bc:	4198b03a 	or	r12,r8,r6
1000d3c0:	60000a1e 	bne	r12,zero,1000d3ec <__gedf2+0x78>
1000d3c4:	48001326 	beq	r9,zero,1000d414 <__gedf2+0xa0>
1000d3c8:	0005883a 	mov	r2,zero
1000d3cc:	f800283a 	ret
1000d3d0:	5112b03a 	or	r9,r10,r4
1000d3d4:	4800191e 	bne	r9,zero,1000d43c <__gedf2+0xc8>
1000d3d8:	18800926 	beq	r3,r2,1000d400 <__gedf2+0x8c>
1000d3dc:	18000b1e 	bne	r3,zero,1000d40c <__gedf2+0x98>
1000d3e0:	4192b03a 	or	r9,r8,r6
1000d3e4:	0017883a 	mov	r11,zero
1000d3e8:	48000a26 	beq	r9,zero,1000d414 <__gedf2+0xa0>
1000d3ec:	39c03fcc 	andi	r7,r7,255
1000d3f0:	58000726 	beq	r11,zero,1000d410 <__gedf2+0x9c>
1000d3f4:	3800081e 	bne	r7,zero,1000d418 <__gedf2+0xa4>
1000d3f8:	00bfffc4 	movi	r2,-1
1000d3fc:	f800283a 	ret
1000d400:	4192b03a 	or	r9,r8,r6
1000d404:	48000d1e 	bne	r9,zero,1000d43c <__gedf2+0xc8>
1000d408:	103fe826 	beq	r2,zero,1000d3ac <__alt_data_end+0xf800d3ac>
1000d40c:	39c03fcc 	andi	r7,r7,255
1000d410:	29c00326 	beq	r5,r7,1000d420 <__gedf2+0xac>
1000d414:	283ff81e 	bne	r5,zero,1000d3f8 <__alt_data_end+0xf800d3f8>
1000d418:	00800044 	movi	r2,1
1000d41c:	f800283a 	ret
1000d420:	18bffc16 	blt	r3,r2,1000d414 <__alt_data_end+0xf800d414>
1000d424:	10c00316 	blt	r2,r3,1000d434 <__gedf2+0xc0>
1000d428:	42bffa36 	bltu	r8,r10,1000d414 <__alt_data_end+0xf800d414>
1000d42c:	52000526 	beq	r10,r8,1000d444 <__gedf2+0xd0>
1000d430:	523fe52e 	bgeu	r10,r8,1000d3c8 <__alt_data_end+0xf800d3c8>
1000d434:	283ff026 	beq	r5,zero,1000d3f8 <__alt_data_end+0xf800d3f8>
1000d438:	003ff706 	br	1000d418 <__alt_data_end+0xf800d418>
1000d43c:	00bfff84 	movi	r2,-2
1000d440:	f800283a 	ret
1000d444:	313ff336 	bltu	r6,r4,1000d414 <__alt_data_end+0xf800d414>
1000d448:	21bfdf2e 	bgeu	r4,r6,1000d3c8 <__alt_data_end+0xf800d3c8>
1000d44c:	283fea26 	beq	r5,zero,1000d3f8 <__alt_data_end+0xf800d3f8>
1000d450:	003ff106 	br	1000d418 <__alt_data_end+0xf800d418>

1000d454 <__ledf2>:
1000d454:	2804d53a 	srli	r2,r5,20
1000d458:	3810d53a 	srli	r8,r7,20
1000d45c:	00c00434 	movhi	r3,16
1000d460:	18ffffc4 	addi	r3,r3,-1
1000d464:	0241ffc4 	movi	r9,2047
1000d468:	1081ffcc 	andi	r2,r2,2047
1000d46c:	28d4703a 	and	r10,r5,r3
1000d470:	4250703a 	and	r8,r8,r9
1000d474:	38c6703a 	and	r3,r7,r3
1000d478:	280ad7fa 	srli	r5,r5,31
1000d47c:	380ed7fa 	srli	r7,r7,31
1000d480:	12400b26 	beq	r2,r9,1000d4b0 <__ledf2+0x5c>
1000d484:	42401926 	beq	r8,r9,1000d4ec <__ledf2+0x98>
1000d488:	10000c1e 	bne	r2,zero,1000d4bc <__ledf2+0x68>
1000d48c:	5112b03a 	or	r9,r10,r4
1000d490:	4813003a 	cmpeq	r9,r9,zero
1000d494:	4817883a 	mov	r11,r9
1000d498:	40000f26 	beq	r8,zero,1000d4d8 <__ledf2+0x84>
1000d49c:	39c03fcc 	andi	r7,r7,255
1000d4a0:	58001826 	beq	r11,zero,1000d504 <__ledf2+0xb0>
1000d4a4:	38000a1e 	bne	r7,zero,1000d4d0 <__ledf2+0x7c>
1000d4a8:	00bfffc4 	movi	r2,-1
1000d4ac:	f800283a 	ret
1000d4b0:	5112b03a 	or	r9,r10,r4
1000d4b4:	48000f1e 	bne	r9,zero,1000d4f4 <__ledf2+0xa0>
1000d4b8:	40800c26 	beq	r8,r2,1000d4ec <__ledf2+0x98>
1000d4bc:	4000101e 	bne	r8,zero,1000d500 <__ledf2+0xac>
1000d4c0:	1992b03a 	or	r9,r3,r6
1000d4c4:	0017883a 	mov	r11,zero
1000d4c8:	483ff41e 	bne	r9,zero,1000d49c <__alt_data_end+0xf800d49c>
1000d4cc:	283ff61e 	bne	r5,zero,1000d4a8 <__alt_data_end+0xf800d4a8>
1000d4d0:	00800044 	movi	r2,1
1000d4d4:	f800283a 	ret
1000d4d8:	1998b03a 	or	r12,r3,r6
1000d4dc:	603fef1e 	bne	r12,zero,1000d49c <__alt_data_end+0xf800d49c>
1000d4e0:	483ffa26 	beq	r9,zero,1000d4cc <__alt_data_end+0xf800d4cc>
1000d4e4:	0005883a 	mov	r2,zero
1000d4e8:	f800283a 	ret
1000d4ec:	1992b03a 	or	r9,r3,r6
1000d4f0:	48000226 	beq	r9,zero,1000d4fc <__ledf2+0xa8>
1000d4f4:	00800084 	movi	r2,2
1000d4f8:	f800283a 	ret
1000d4fc:	103fe326 	beq	r2,zero,1000d48c <__alt_data_end+0xf800d48c>
1000d500:	39c03fcc 	andi	r7,r7,255
1000d504:	29fff11e 	bne	r5,r7,1000d4cc <__alt_data_end+0xf800d4cc>
1000d508:	40bff016 	blt	r8,r2,1000d4cc <__alt_data_end+0xf800d4cc>
1000d50c:	12000316 	blt	r2,r8,1000d51c <__ledf2+0xc8>
1000d510:	1abfee36 	bltu	r3,r10,1000d4cc <__alt_data_end+0xf800d4cc>
1000d514:	50c00326 	beq	r10,r3,1000d524 <__ledf2+0xd0>
1000d518:	50fff22e 	bgeu	r10,r3,1000d4e4 <__alt_data_end+0xf800d4e4>
1000d51c:	283fe226 	beq	r5,zero,1000d4a8 <__alt_data_end+0xf800d4a8>
1000d520:	003feb06 	br	1000d4d0 <__alt_data_end+0xf800d4d0>
1000d524:	313fe936 	bltu	r6,r4,1000d4cc <__alt_data_end+0xf800d4cc>
1000d528:	21bfee2e 	bgeu	r4,r6,1000d4e4 <__alt_data_end+0xf800d4e4>
1000d52c:	283fde26 	beq	r5,zero,1000d4a8 <__alt_data_end+0xf800d4a8>
1000d530:	003fe706 	br	1000d4d0 <__alt_data_end+0xf800d4d0>

1000d534 <__muldf3>:
1000d534:	deffee04 	addi	sp,sp,-72
1000d538:	dd000c15 	stw	r20,48(sp)
1000d53c:	2828d53a 	srli	r20,r5,20
1000d540:	dd400d15 	stw	r21,52(sp)
1000d544:	282ad7fa 	srli	r21,r5,31
1000d548:	dc000815 	stw	r16,32(sp)
1000d54c:	04000434 	movhi	r16,16
1000d550:	ddc00f15 	stw	r23,60(sp)
1000d554:	dcc00b15 	stw	r19,44(sp)
1000d558:	dc800a15 	stw	r18,40(sp)
1000d55c:	843fffc4 	addi	r16,r16,-1
1000d560:	dfc01115 	stw	ra,68(sp)
1000d564:	df001015 	stw	fp,64(sp)
1000d568:	dd800e15 	stw	r22,56(sp)
1000d56c:	dc400915 	stw	r17,36(sp)
1000d570:	a501ffcc 	andi	r20,r20,2047
1000d574:	2025883a 	mov	r18,r4
1000d578:	202f883a 	mov	r23,r4
1000d57c:	2c20703a 	and	r16,r5,r16
1000d580:	a827883a 	mov	r19,r21
1000d584:	aa403fcc 	andi	r9,r21,255
1000d588:	a0005926 	beq	r20,zero,1000d6f0 <__muldf3+0x1bc>
1000d58c:	0081ffc4 	movi	r2,2047
1000d590:	a0803426 	beq	r20,r2,1000d664 <__muldf3+0x130>
1000d594:	84000434 	orhi	r16,r16,16
1000d598:	2004d77a 	srli	r2,r4,29
1000d59c:	802090fa 	slli	r16,r16,3
1000d5a0:	202e90fa 	slli	r23,r4,3
1000d5a4:	a53f0044 	addi	r20,r20,-1023
1000d5a8:	80a0b03a 	or	r16,r16,r2
1000d5ac:	000b883a 	mov	r5,zero
1000d5b0:	0039883a 	mov	fp,zero
1000d5b4:	3806d53a 	srli	r3,r7,20
1000d5b8:	382cd7fa 	srli	r22,r7,31
1000d5bc:	00800434 	movhi	r2,16
1000d5c0:	10bfffc4 	addi	r2,r2,-1
1000d5c4:	18c1ffcc 	andi	r3,r3,2047
1000d5c8:	3025883a 	mov	r18,r6
1000d5cc:	38a2703a 	and	r17,r7,r2
1000d5d0:	b2803fcc 	andi	r10,r22,255
1000d5d4:	18006426 	beq	r3,zero,1000d768 <__muldf3+0x234>
1000d5d8:	0081ffc4 	movi	r2,2047
1000d5dc:	18805c26 	beq	r3,r2,1000d750 <__muldf3+0x21c>
1000d5e0:	8c400434 	orhi	r17,r17,16
1000d5e4:	3004d77a 	srli	r2,r6,29
1000d5e8:	882290fa 	slli	r17,r17,3
1000d5ec:	302490fa 	slli	r18,r6,3
1000d5f0:	18ff0044 	addi	r3,r3,-1023
1000d5f4:	88a2b03a 	or	r17,r17,r2
1000d5f8:	000f883a 	mov	r7,zero
1000d5fc:	394ab03a 	or	r5,r7,r5
1000d600:	280a90ba 	slli	r5,r5,2
1000d604:	00840074 	movhi	r2,4097
1000d608:	10b58904 	addi	r2,r2,-10716
1000d60c:	288b883a 	add	r5,r5,r2
1000d610:	28800017 	ldw	r2,0(r5)
1000d614:	a0c7883a 	add	r3,r20,r3
1000d618:	b54cf03a 	xor	r6,r22,r21
1000d61c:	1a000044 	addi	r8,r3,1
1000d620:	1000683a 	jmp	r2
1000d624:	1000d868 	cmpgeui	zero,r2,865
1000d628:	1000d854 	ori	zero,r2,865
1000d62c:	1000d854 	ori	zero,r2,865
1000d630:	1000d840 	call	11000d84 <_gp+0xfe802c>
1000d634:	1000d680 	call	11000d68 <_gp+0xfe8010>
1000d638:	1000d680 	call	11000d68 <_gp+0xfe8010>
1000d63c:	1000d828 	cmpgeui	zero,r2,864
1000d640:	1000d840 	call	11000d84 <_gp+0xfe802c>
1000d644:	1000d680 	call	11000d68 <_gp+0xfe8010>
1000d648:	1000d828 	cmpgeui	zero,r2,864
1000d64c:	1000d680 	call	11000d68 <_gp+0xfe8010>
1000d650:	1000d840 	call	11000d84 <_gp+0xfe802c>
1000d654:	1000d684 	addi	zero,r2,858
1000d658:	1000d684 	addi	zero,r2,858
1000d65c:	1000d684 	addi	zero,r2,858
1000d660:	1000dba4 	muli	zero,r2,878
1000d664:	8104b03a 	or	r2,r16,r4
1000d668:	10006c1e 	bne	r2,zero,1000d81c <__muldf3+0x2e8>
1000d66c:	01400204 	movi	r5,8
1000d670:	0021883a 	mov	r16,zero
1000d674:	002f883a 	mov	r23,zero
1000d678:	07000084 	movi	fp,2
1000d67c:	003fcd06 	br	1000d5b4 <__alt_data_end+0xf800d5b4>
1000d680:	3013883a 	mov	r9,r6
1000d684:	00800084 	movi	r2,2
1000d688:	e080501e 	bne	fp,r2,1000d7cc <__muldf3+0x298>
1000d68c:	4cc0004c 	andi	r19,r9,1
1000d690:	0101ffc4 	movi	r4,2047
1000d694:	0021883a 	mov	r16,zero
1000d698:	002f883a 	mov	r23,zero
1000d69c:	2008953a 	slli	r4,r4,20
1000d6a0:	98c03fcc 	andi	r3,r19,255
1000d6a4:	04400434 	movhi	r17,16
1000d6a8:	8c7fffc4 	addi	r17,r17,-1
1000d6ac:	180697fa 	slli	r3,r3,31
1000d6b0:	8460703a 	and	r16,r16,r17
1000d6b4:	8120b03a 	or	r16,r16,r4
1000d6b8:	80c6b03a 	or	r3,r16,r3
1000d6bc:	b805883a 	mov	r2,r23
1000d6c0:	dfc01117 	ldw	ra,68(sp)
1000d6c4:	df001017 	ldw	fp,64(sp)
1000d6c8:	ddc00f17 	ldw	r23,60(sp)
1000d6cc:	dd800e17 	ldw	r22,56(sp)
1000d6d0:	dd400d17 	ldw	r21,52(sp)
1000d6d4:	dd000c17 	ldw	r20,48(sp)
1000d6d8:	dcc00b17 	ldw	r19,44(sp)
1000d6dc:	dc800a17 	ldw	r18,40(sp)
1000d6e0:	dc400917 	ldw	r17,36(sp)
1000d6e4:	dc000817 	ldw	r16,32(sp)
1000d6e8:	dec01204 	addi	sp,sp,72
1000d6ec:	f800283a 	ret
1000d6f0:	8104b03a 	or	r2,r16,r4
1000d6f4:	10004426 	beq	r2,zero,1000d808 <__muldf3+0x2d4>
1000d6f8:	80014b26 	beq	r16,zero,1000dc28 <__muldf3+0x6f4>
1000d6fc:	8009883a 	mov	r4,r16
1000d700:	d9800715 	stw	r6,28(sp)
1000d704:	d9c00215 	stw	r7,8(sp)
1000d708:	da400415 	stw	r9,16(sp)
1000d70c:	000e86c0 	call	1000e86c <__clzsi2>
1000d710:	d9800717 	ldw	r6,28(sp)
1000d714:	d9c00217 	ldw	r7,8(sp)
1000d718:	da400417 	ldw	r9,16(sp)
1000d71c:	1007883a 	mov	r3,r2
1000d720:	01000a04 	movi	r4,40
1000d724:	1dfffe04 	addi	r23,r3,-8
1000d728:	20c9c83a 	sub	r4,r4,r3
1000d72c:	85e0983a 	sll	r16,r16,r23
1000d730:	9108d83a 	srl	r4,r18,r4
1000d734:	95ee983a 	sll	r23,r18,r23
1000d738:	2420b03a 	or	r16,r4,r16
1000d73c:	053f0344 	movi	r20,-1011
1000d740:	a0e9c83a 	sub	r20,r20,r3
1000d744:	000b883a 	mov	r5,zero
1000d748:	0039883a 	mov	fp,zero
1000d74c:	003f9906 	br	1000d5b4 <__alt_data_end+0xf800d5b4>
1000d750:	8984b03a 	or	r2,r17,r6
1000d754:	10002a1e 	bne	r2,zero,1000d800 <__muldf3+0x2cc>
1000d758:	0023883a 	mov	r17,zero
1000d75c:	0025883a 	mov	r18,zero
1000d760:	01c00084 	movi	r7,2
1000d764:	003fa506 	br	1000d5fc <__alt_data_end+0xf800d5fc>
1000d768:	8984b03a 	or	r2,r17,r6
1000d76c:	10002026 	beq	r2,zero,1000d7f0 <__muldf3+0x2bc>
1000d770:	88011c26 	beq	r17,zero,1000dbe4 <__muldf3+0x6b0>
1000d774:	8809883a 	mov	r4,r17
1000d778:	d9400215 	stw	r5,8(sp)
1000d77c:	d9800715 	stw	r6,28(sp)
1000d780:	da400415 	stw	r9,16(sp)
1000d784:	da800315 	stw	r10,12(sp)
1000d788:	000e86c0 	call	1000e86c <__clzsi2>
1000d78c:	d9400217 	ldw	r5,8(sp)
1000d790:	d9800717 	ldw	r6,28(sp)
1000d794:	da400417 	ldw	r9,16(sp)
1000d798:	da800317 	ldw	r10,12(sp)
1000d79c:	1007883a 	mov	r3,r2
1000d7a0:	01000a04 	movi	r4,40
1000d7a4:	1cbffe04 	addi	r18,r3,-8
1000d7a8:	20c9c83a 	sub	r4,r4,r3
1000d7ac:	8ca2983a 	sll	r17,r17,r18
1000d7b0:	3108d83a 	srl	r4,r6,r4
1000d7b4:	34a4983a 	sll	r18,r6,r18
1000d7b8:	2462b03a 	or	r17,r4,r17
1000d7bc:	00bf0344 	movi	r2,-1011
1000d7c0:	10c7c83a 	sub	r3,r2,r3
1000d7c4:	000f883a 	mov	r7,zero
1000d7c8:	003f8c06 	br	1000d5fc <__alt_data_end+0xf800d5fc>
1000d7cc:	008000c4 	movi	r2,3
1000d7d0:	e0816d26 	beq	fp,r2,1000dd88 <__muldf3+0x854>
1000d7d4:	00800044 	movi	r2,1
1000d7d8:	e081321e 	bne	fp,r2,1000dca4 <__muldf3+0x770>
1000d7dc:	48a6703a 	and	r19,r9,r2
1000d7e0:	0009883a 	mov	r4,zero
1000d7e4:	0021883a 	mov	r16,zero
1000d7e8:	002f883a 	mov	r23,zero
1000d7ec:	003fab06 	br	1000d69c <__alt_data_end+0xf800d69c>
1000d7f0:	0023883a 	mov	r17,zero
1000d7f4:	0025883a 	mov	r18,zero
1000d7f8:	01c00044 	movi	r7,1
1000d7fc:	003f7f06 	br	1000d5fc <__alt_data_end+0xf800d5fc>
1000d800:	01c000c4 	movi	r7,3
1000d804:	003f7d06 	br	1000d5fc <__alt_data_end+0xf800d5fc>
1000d808:	01400104 	movi	r5,4
1000d80c:	0021883a 	mov	r16,zero
1000d810:	002f883a 	mov	r23,zero
1000d814:	07000044 	movi	fp,1
1000d818:	003f6606 	br	1000d5b4 <__alt_data_end+0xf800d5b4>
1000d81c:	01400304 	movi	r5,12
1000d820:	070000c4 	movi	fp,3
1000d824:	003f6306 	br	1000d5b4 <__alt_data_end+0xf800d5b4>
1000d828:	04000434 	movhi	r16,16
1000d82c:	0027883a 	mov	r19,zero
1000d830:	843fffc4 	addi	r16,r16,-1
1000d834:	05ffffc4 	movi	r23,-1
1000d838:	0101ffc4 	movi	r4,2047
1000d83c:	003f9706 	br	1000d69c <__alt_data_end+0xf800d69c>
1000d840:	8821883a 	mov	r16,r17
1000d844:	902f883a 	mov	r23,r18
1000d848:	5013883a 	mov	r9,r10
1000d84c:	3839883a 	mov	fp,r7
1000d850:	003f8c06 	br	1000d684 <__alt_data_end+0xf800d684>
1000d854:	8821883a 	mov	r16,r17
1000d858:	902f883a 	mov	r23,r18
1000d85c:	3013883a 	mov	r9,r6
1000d860:	3839883a 	mov	fp,r7
1000d864:	003f8706 	br	1000d684 <__alt_data_end+0xf800d684>
1000d868:	b82ad43a 	srli	r21,r23,16
1000d86c:	9038d43a 	srli	fp,r18,16
1000d870:	bdffffcc 	andi	r23,r23,65535
1000d874:	94bfffcc 	andi	r18,r18,65535
1000d878:	9009883a 	mov	r4,r18
1000d87c:	b80b883a 	mov	r5,r23
1000d880:	d8c00515 	stw	r3,20(sp)
1000d884:	d9800715 	stw	r6,28(sp)
1000d888:	da000615 	stw	r8,24(sp)
1000d88c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d890:	9009883a 	mov	r4,r18
1000d894:	a80b883a 	mov	r5,r21
1000d898:	1029883a 	mov	r20,r2
1000d89c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d8a0:	e009883a 	mov	r4,fp
1000d8a4:	a80b883a 	mov	r5,r21
1000d8a8:	102d883a 	mov	r22,r2
1000d8ac:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d8b0:	e009883a 	mov	r4,fp
1000d8b4:	b80b883a 	mov	r5,r23
1000d8b8:	1027883a 	mov	r19,r2
1000d8bc:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d8c0:	a008d43a 	srli	r4,r20,16
1000d8c4:	b085883a 	add	r2,r22,r2
1000d8c8:	d8c00517 	ldw	r3,20(sp)
1000d8cc:	110f883a 	add	r7,r2,r4
1000d8d0:	d9800717 	ldw	r6,28(sp)
1000d8d4:	da000617 	ldw	r8,24(sp)
1000d8d8:	3d80022e 	bgeu	r7,r22,1000d8e4 <__muldf3+0x3b0>
1000d8dc:	00800074 	movhi	r2,1
1000d8e0:	98a7883a 	add	r19,r19,r2
1000d8e4:	3804943a 	slli	r2,r7,16
1000d8e8:	380ed43a 	srli	r7,r7,16
1000d8ec:	882cd43a 	srli	r22,r17,16
1000d8f0:	a53fffcc 	andi	r20,r20,65535
1000d8f4:	8c7fffcc 	andi	r17,r17,65535
1000d8f8:	1529883a 	add	r20,r2,r20
1000d8fc:	8809883a 	mov	r4,r17
1000d900:	b80b883a 	mov	r5,r23
1000d904:	d8c00515 	stw	r3,20(sp)
1000d908:	d9800715 	stw	r6,28(sp)
1000d90c:	da000615 	stw	r8,24(sp)
1000d910:	d9c00015 	stw	r7,0(sp)
1000d914:	dd000115 	stw	r20,4(sp)
1000d918:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d91c:	a80b883a 	mov	r5,r21
1000d920:	8809883a 	mov	r4,r17
1000d924:	d8800415 	stw	r2,16(sp)
1000d928:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d92c:	a80b883a 	mov	r5,r21
1000d930:	b009883a 	mov	r4,r22
1000d934:	1029883a 	mov	r20,r2
1000d938:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d93c:	b009883a 	mov	r4,r22
1000d940:	b80b883a 	mov	r5,r23
1000d944:	102b883a 	mov	r21,r2
1000d948:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d94c:	da400417 	ldw	r9,16(sp)
1000d950:	a085883a 	add	r2,r20,r2
1000d954:	d8c00517 	ldw	r3,20(sp)
1000d958:	4808d43a 	srli	r4,r9,16
1000d95c:	d9800717 	ldw	r6,28(sp)
1000d960:	da000617 	ldw	r8,24(sp)
1000d964:	1109883a 	add	r4,r2,r4
1000d968:	2500022e 	bgeu	r4,r20,1000d974 <__muldf3+0x440>
1000d96c:	00800074 	movhi	r2,1
1000d970:	a8ab883a 	add	r21,r21,r2
1000d974:	200e943a 	slli	r7,r4,16
1000d978:	2004d43a 	srli	r2,r4,16
1000d97c:	802ed43a 	srli	r23,r16,16
1000d980:	843fffcc 	andi	r16,r16,65535
1000d984:	4d3fffcc 	andi	r20,r9,65535
1000d988:	9009883a 	mov	r4,r18
1000d98c:	800b883a 	mov	r5,r16
1000d990:	3d29883a 	add	r20,r7,r20
1000d994:	d8c00515 	stw	r3,20(sp)
1000d998:	d9800715 	stw	r6,28(sp)
1000d99c:	da000615 	stw	r8,24(sp)
1000d9a0:	a8ab883a 	add	r21,r21,r2
1000d9a4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d9a8:	9009883a 	mov	r4,r18
1000d9ac:	b80b883a 	mov	r5,r23
1000d9b0:	d8800315 	stw	r2,12(sp)
1000d9b4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d9b8:	e009883a 	mov	r4,fp
1000d9bc:	b80b883a 	mov	r5,r23
1000d9c0:	1025883a 	mov	r18,r2
1000d9c4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d9c8:	e009883a 	mov	r4,fp
1000d9cc:	800b883a 	mov	r5,r16
1000d9d0:	d8800215 	stw	r2,8(sp)
1000d9d4:	000c0ac0 	call	1000c0ac <__mulsi3>
1000d9d8:	da800317 	ldw	r10,12(sp)
1000d9dc:	d9400017 	ldw	r5,0(sp)
1000d9e0:	9085883a 	add	r2,r18,r2
1000d9e4:	5008d43a 	srli	r4,r10,16
1000d9e8:	a153883a 	add	r9,r20,r5
1000d9ec:	d8c00517 	ldw	r3,20(sp)
1000d9f0:	1109883a 	add	r4,r2,r4
1000d9f4:	d9800717 	ldw	r6,28(sp)
1000d9f8:	da000617 	ldw	r8,24(sp)
1000d9fc:	dac00217 	ldw	r11,8(sp)
1000da00:	2480022e 	bgeu	r4,r18,1000da0c <__muldf3+0x4d8>
1000da04:	00800074 	movhi	r2,1
1000da08:	5897883a 	add	r11,r11,r2
1000da0c:	200e943a 	slli	r7,r4,16
1000da10:	2038d43a 	srli	fp,r4,16
1000da14:	52bfffcc 	andi	r10,r10,65535
1000da18:	3a8f883a 	add	r7,r7,r10
1000da1c:	8809883a 	mov	r4,r17
1000da20:	800b883a 	mov	r5,r16
1000da24:	d8c00515 	stw	r3,20(sp)
1000da28:	d9800715 	stw	r6,28(sp)
1000da2c:	d9c00215 	stw	r7,8(sp)
1000da30:	da000615 	stw	r8,24(sp)
1000da34:	da400415 	stw	r9,16(sp)
1000da38:	5f39883a 	add	fp,r11,fp
1000da3c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000da40:	8809883a 	mov	r4,r17
1000da44:	b80b883a 	mov	r5,r23
1000da48:	1025883a 	mov	r18,r2
1000da4c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000da50:	b009883a 	mov	r4,r22
1000da54:	b80b883a 	mov	r5,r23
1000da58:	d8800315 	stw	r2,12(sp)
1000da5c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000da60:	b009883a 	mov	r4,r22
1000da64:	800b883a 	mov	r5,r16
1000da68:	1023883a 	mov	r17,r2
1000da6c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000da70:	da800317 	ldw	r10,12(sp)
1000da74:	9008d43a 	srli	r4,r18,16
1000da78:	d8c00517 	ldw	r3,20(sp)
1000da7c:	5085883a 	add	r2,r10,r2
1000da80:	1109883a 	add	r4,r2,r4
1000da84:	d9800717 	ldw	r6,28(sp)
1000da88:	d9c00217 	ldw	r7,8(sp)
1000da8c:	da000617 	ldw	r8,24(sp)
1000da90:	da400417 	ldw	r9,16(sp)
1000da94:	2280022e 	bgeu	r4,r10,1000daa0 <__muldf3+0x56c>
1000da98:	00800074 	movhi	r2,1
1000da9c:	88a3883a 	add	r17,r17,r2
1000daa0:	2004943a 	slli	r2,r4,16
1000daa4:	94bfffcc 	andi	r18,r18,65535
1000daa8:	4ce7883a 	add	r19,r9,r19
1000daac:	14a5883a 	add	r18,r2,r18
1000dab0:	9d29803a 	cmpltu	r20,r19,r20
1000dab4:	9565883a 	add	r18,r18,r21
1000dab8:	9505883a 	add	r2,r18,r20
1000dabc:	99e7883a 	add	r19,r19,r7
1000dac0:	99cf803a 	cmpltu	r7,r19,r7
1000dac4:	e08b883a 	add	r5,fp,r2
1000dac8:	2008d43a 	srli	r4,r4,16
1000dacc:	29ef883a 	add	r23,r5,r7
1000dad0:	1529803a 	cmpltu	r20,r2,r20
1000dad4:	956b803a 	cmpltu	r21,r18,r21
1000dad8:	b9cf803a 	cmpltu	r7,r23,r7
1000dadc:	a564b03a 	or	r18,r20,r21
1000dae0:	2f39803a 	cmpltu	fp,r5,fp
1000dae4:	9125883a 	add	r18,r18,r4
1000dae8:	3f38b03a 	or	fp,r7,fp
1000daec:	9725883a 	add	r18,r18,fp
1000daf0:	9804927a 	slli	r2,r19,9
1000daf4:	9463883a 	add	r17,r18,r17
1000daf8:	d9000117 	ldw	r4,4(sp)
1000dafc:	b820d5fa 	srli	r16,r23,23
1000db00:	8822927a 	slli	r17,r17,9
1000db04:	9826d5fa 	srli	r19,r19,23
1000db08:	1104b03a 	or	r2,r2,r4
1000db0c:	b82e927a 	slli	r23,r23,9
1000db10:	1004c03a 	cmpne	r2,r2,zero
1000db14:	8c20b03a 	or	r16,r17,r16
1000db18:	14e6b03a 	or	r19,r2,r19
1000db1c:	8080402c 	andhi	r2,r16,256
1000db20:	9deeb03a 	or	r23,r19,r23
1000db24:	10000726 	beq	r2,zero,1000db44 <__muldf3+0x610>
1000db28:	b804d07a 	srli	r2,r23,1
1000db2c:	800697fa 	slli	r3,r16,31
1000db30:	bdc0004c 	andi	r23,r23,1
1000db34:	8020d07a 	srli	r16,r16,1
1000db38:	b8aeb03a 	or	r23,r23,r2
1000db3c:	b8eeb03a 	or	r23,r23,r3
1000db40:	4007883a 	mov	r3,r8
1000db44:	1900ffc4 	addi	r4,r3,1023
1000db48:	01004d0e 	bge	zero,r4,1000dc80 <__muldf3+0x74c>
1000db4c:	b88001cc 	andi	r2,r23,7
1000db50:	10000726 	beq	r2,zero,1000db70 <__muldf3+0x63c>
1000db54:	b94003cc 	andi	r5,r23,15
1000db58:	00800104 	movi	r2,4
1000db5c:	28800426 	beq	r5,r2,1000db70 <__muldf3+0x63c>
1000db60:	b885883a 	add	r2,r23,r2
1000db64:	15ef803a 	cmpltu	r23,r2,r23
1000db68:	85e1883a 	add	r16,r16,r23
1000db6c:	102f883a 	mov	r23,r2
1000db70:	8080402c 	andhi	r2,r16,256
1000db74:	10000426 	beq	r2,zero,1000db88 <__muldf3+0x654>
1000db78:	00bfc034 	movhi	r2,65280
1000db7c:	10bfffc4 	addi	r2,r2,-1
1000db80:	19010004 	addi	r4,r3,1024
1000db84:	80a0703a 	and	r16,r16,r2
1000db88:	0081ff84 	movi	r2,2046
1000db8c:	1100340e 	bge	r2,r4,1000dc60 <__muldf3+0x72c>
1000db90:	34c0004c 	andi	r19,r6,1
1000db94:	0101ffc4 	movi	r4,2047
1000db98:	0021883a 	mov	r16,zero
1000db9c:	002f883a 	mov	r23,zero
1000dba0:	003ebe06 	br	1000d69c <__alt_data_end+0xf800d69c>
1000dba4:	8080022c 	andhi	r2,r16,8
1000dba8:	10000926 	beq	r2,zero,1000dbd0 <__muldf3+0x69c>
1000dbac:	8880022c 	andhi	r2,r17,8
1000dbb0:	1000071e 	bne	r2,zero,1000dbd0 <__muldf3+0x69c>
1000dbb4:	00800434 	movhi	r2,16
1000dbb8:	8c000234 	orhi	r16,r17,8
1000dbbc:	10bfffc4 	addi	r2,r2,-1
1000dbc0:	b027883a 	mov	r19,r22
1000dbc4:	80a0703a 	and	r16,r16,r2
1000dbc8:	902f883a 	mov	r23,r18
1000dbcc:	003f1a06 	br	1000d838 <__alt_data_end+0xf800d838>
1000dbd0:	00800434 	movhi	r2,16
1000dbd4:	84000234 	orhi	r16,r16,8
1000dbd8:	10bfffc4 	addi	r2,r2,-1
1000dbdc:	80a0703a 	and	r16,r16,r2
1000dbe0:	003f1506 	br	1000d838 <__alt_data_end+0xf800d838>
1000dbe4:	3009883a 	mov	r4,r6
1000dbe8:	d9400215 	stw	r5,8(sp)
1000dbec:	d9800715 	stw	r6,28(sp)
1000dbf0:	da400415 	stw	r9,16(sp)
1000dbf4:	da800315 	stw	r10,12(sp)
1000dbf8:	000e86c0 	call	1000e86c <__clzsi2>
1000dbfc:	10c00804 	addi	r3,r2,32
1000dc00:	010009c4 	movi	r4,39
1000dc04:	d9400217 	ldw	r5,8(sp)
1000dc08:	d9800717 	ldw	r6,28(sp)
1000dc0c:	da400417 	ldw	r9,16(sp)
1000dc10:	da800317 	ldw	r10,12(sp)
1000dc14:	20fee20e 	bge	r4,r3,1000d7a0 <__alt_data_end+0xf800d7a0>
1000dc18:	147ffe04 	addi	r17,r2,-8
1000dc1c:	9462983a 	sll	r17,r18,r17
1000dc20:	0025883a 	mov	r18,zero
1000dc24:	003ee506 	br	1000d7bc <__alt_data_end+0xf800d7bc>
1000dc28:	d9800715 	stw	r6,28(sp)
1000dc2c:	d9c00215 	stw	r7,8(sp)
1000dc30:	da400415 	stw	r9,16(sp)
1000dc34:	000e86c0 	call	1000e86c <__clzsi2>
1000dc38:	10c00804 	addi	r3,r2,32
1000dc3c:	010009c4 	movi	r4,39
1000dc40:	d9800717 	ldw	r6,28(sp)
1000dc44:	d9c00217 	ldw	r7,8(sp)
1000dc48:	da400417 	ldw	r9,16(sp)
1000dc4c:	20feb40e 	bge	r4,r3,1000d720 <__alt_data_end+0xf800d720>
1000dc50:	143ffe04 	addi	r16,r2,-8
1000dc54:	9420983a 	sll	r16,r18,r16
1000dc58:	002f883a 	mov	r23,zero
1000dc5c:	003eb706 	br	1000d73c <__alt_data_end+0xf800d73c>
1000dc60:	8004977a 	slli	r2,r16,29
1000dc64:	b82ed0fa 	srli	r23,r23,3
1000dc68:	8020927a 	slli	r16,r16,9
1000dc6c:	2101ffcc 	andi	r4,r4,2047
1000dc70:	15eeb03a 	or	r23,r2,r23
1000dc74:	8020d33a 	srli	r16,r16,12
1000dc78:	34c0004c 	andi	r19,r6,1
1000dc7c:	003e8706 	br	1000d69c <__alt_data_end+0xf800d69c>
1000dc80:	00bf0084 	movi	r2,-1022
1000dc84:	10c5c83a 	sub	r2,r2,r3
1000dc88:	01000e04 	movi	r4,56
1000dc8c:	2080080e 	bge	r4,r2,1000dcb0 <__muldf3+0x77c>
1000dc90:	34c0004c 	andi	r19,r6,1
1000dc94:	0009883a 	mov	r4,zero
1000dc98:	0021883a 	mov	r16,zero
1000dc9c:	002f883a 	mov	r23,zero
1000dca0:	003e7e06 	br	1000d69c <__alt_data_end+0xf800d69c>
1000dca4:	4007883a 	mov	r3,r8
1000dca8:	480d883a 	mov	r6,r9
1000dcac:	003fa506 	br	1000db44 <__alt_data_end+0xf800db44>
1000dcb0:	010007c4 	movi	r4,31
1000dcb4:	20801816 	blt	r4,r2,1000dd18 <__muldf3+0x7e4>
1000dcb8:	18c10784 	addi	r3,r3,1054
1000dcbc:	80c8983a 	sll	r4,r16,r3
1000dcc0:	b88ad83a 	srl	r5,r23,r2
1000dcc4:	b8c6983a 	sll	r3,r23,r3
1000dcc8:	80a0d83a 	srl	r16,r16,r2
1000dccc:	2908b03a 	or	r4,r5,r4
1000dcd0:	1804c03a 	cmpne	r2,r3,zero
1000dcd4:	2088b03a 	or	r4,r4,r2
1000dcd8:	208001cc 	andi	r2,r4,7
1000dcdc:	10000726 	beq	r2,zero,1000dcfc <__muldf3+0x7c8>
1000dce0:	20c003cc 	andi	r3,r4,15
1000dce4:	00800104 	movi	r2,4
1000dce8:	18800426 	beq	r3,r2,1000dcfc <__muldf3+0x7c8>
1000dcec:	20c00104 	addi	r3,r4,4
1000dcf0:	1905803a 	cmpltu	r2,r3,r4
1000dcf4:	80a1883a 	add	r16,r16,r2
1000dcf8:	1809883a 	mov	r4,r3
1000dcfc:	8080202c 	andhi	r2,r16,128
1000dd00:	10001b26 	beq	r2,zero,1000dd70 <__muldf3+0x83c>
1000dd04:	34c0004c 	andi	r19,r6,1
1000dd08:	01000044 	movi	r4,1
1000dd0c:	0021883a 	mov	r16,zero
1000dd10:	002f883a 	mov	r23,zero
1000dd14:	003e6106 	br	1000d69c <__alt_data_end+0xf800d69c>
1000dd18:	013ef884 	movi	r4,-1054
1000dd1c:	20c9c83a 	sub	r4,r4,r3
1000dd20:	01400804 	movi	r5,32
1000dd24:	8108d83a 	srl	r4,r16,r4
1000dd28:	11401526 	beq	r2,r5,1000dd80 <__muldf3+0x84c>
1000dd2c:	18c10f84 	addi	r3,r3,1086
1000dd30:	80e0983a 	sll	r16,r16,r3
1000dd34:	85eeb03a 	or	r23,r16,r23
1000dd38:	b804c03a 	cmpne	r2,r23,zero
1000dd3c:	1108b03a 	or	r4,r2,r4
1000dd40:	20c001cc 	andi	r3,r4,7
1000dd44:	1800061e 	bne	r3,zero,1000dd60 <__muldf3+0x82c>
1000dd48:	0021883a 	mov	r16,zero
1000dd4c:	202ed0fa 	srli	r23,r4,3
1000dd50:	34c0004c 	andi	r19,r6,1
1000dd54:	0009883a 	mov	r4,zero
1000dd58:	b8eeb03a 	or	r23,r23,r3
1000dd5c:	003e4f06 	br	1000d69c <__alt_data_end+0xf800d69c>
1000dd60:	20c003cc 	andi	r3,r4,15
1000dd64:	00800104 	movi	r2,4
1000dd68:	0021883a 	mov	r16,zero
1000dd6c:	18bfdf1e 	bne	r3,r2,1000dcec <__alt_data_end+0xf800dcec>
1000dd70:	8004927a 	slli	r2,r16,9
1000dd74:	8006977a 	slli	r3,r16,29
1000dd78:	1020d33a 	srli	r16,r2,12
1000dd7c:	003ff306 	br	1000dd4c <__alt_data_end+0xf800dd4c>
1000dd80:	0021883a 	mov	r16,zero
1000dd84:	003feb06 	br	1000dd34 <__alt_data_end+0xf800dd34>
1000dd88:	00800434 	movhi	r2,16
1000dd8c:	84000234 	orhi	r16,r16,8
1000dd90:	10bfffc4 	addi	r2,r2,-1
1000dd94:	4cc0004c 	andi	r19,r9,1
1000dd98:	80a0703a 	and	r16,r16,r2
1000dd9c:	003ea606 	br	1000d838 <__alt_data_end+0xf800d838>

1000dda0 <__subdf3>:
1000dda0:	00c00434 	movhi	r3,16
1000dda4:	18ffffc4 	addi	r3,r3,-1
1000dda8:	defffb04 	addi	sp,sp,-20
1000ddac:	28d2703a 	and	r9,r5,r3
1000ddb0:	3814d53a 	srli	r10,r7,20
1000ddb4:	38c6703a 	and	r3,r7,r3
1000ddb8:	3004d77a 	srli	r2,r6,29
1000ddbc:	dc800215 	stw	r18,8(sp)
1000ddc0:	dc000015 	stw	r16,0(sp)
1000ddc4:	2824d7fa 	srli	r18,r5,31
1000ddc8:	2820d53a 	srli	r16,r5,20
1000ddcc:	481290fa 	slli	r9,r9,3
1000ddd0:	200ad77a 	srli	r5,r4,29
1000ddd4:	180690fa 	slli	r3,r3,3
1000ddd8:	dc400115 	stw	r17,4(sp)
1000dddc:	dfc00415 	stw	ra,16(sp)
1000dde0:	202290fa 	slli	r17,r4,3
1000dde4:	dcc00315 	stw	r19,12(sp)
1000dde8:	5281ffcc 	andi	r10,r10,2047
1000ddec:	0101ffc4 	movi	r4,2047
1000ddf0:	9011883a 	mov	r8,r18
1000ddf4:	8401ffcc 	andi	r16,r16,2047
1000ddf8:	94803fcc 	andi	r18,r18,255
1000ddfc:	494ab03a 	or	r5,r9,r5
1000de00:	380ed7fa 	srli	r7,r7,31
1000de04:	1886b03a 	or	r3,r3,r2
1000de08:	300c90fa 	slli	r6,r6,3
1000de0c:	51009026 	beq	r10,r4,1000e050 <__subdf3+0x2b0>
1000de10:	39c0005c 	xori	r7,r7,1
1000de14:	8285c83a 	sub	r2,r16,r10
1000de18:	91c06f26 	beq	r18,r7,1000dfd8 <__subdf3+0x238>
1000de1c:	0080b10e 	bge	zero,r2,1000e0e4 <__subdf3+0x344>
1000de20:	50002a1e 	bne	r10,zero,1000decc <__subdf3+0x12c>
1000de24:	1988b03a 	or	r4,r3,r6
1000de28:	2000941e 	bne	r4,zero,1000e07c <__subdf3+0x2dc>
1000de2c:	888001cc 	andi	r2,r17,7
1000de30:	10005b26 	beq	r2,zero,1000dfa0 <__subdf3+0x200>
1000de34:	88c003cc 	andi	r3,r17,15
1000de38:	00800104 	movi	r2,4
1000de3c:	18805826 	beq	r3,r2,1000dfa0 <__subdf3+0x200>
1000de40:	88c00104 	addi	r3,r17,4
1000de44:	1c63803a 	cmpltu	r17,r3,r17
1000de48:	2c4b883a 	add	r5,r5,r17
1000de4c:	2880202c 	andhi	r2,r5,128
1000de50:	9200004c 	andi	r8,r18,1
1000de54:	1823883a 	mov	r17,r3
1000de58:	10005426 	beq	r2,zero,1000dfac <__subdf3+0x20c>
1000de5c:	84000044 	addi	r16,r16,1
1000de60:	0081ffc4 	movi	r2,2047
1000de64:	8080bf26 	beq	r16,r2,1000e164 <__subdf3+0x3c4>
1000de68:	013fe034 	movhi	r4,65408
1000de6c:	213fffc4 	addi	r4,r4,-1
1000de70:	290a703a 	and	r5,r5,r4
1000de74:	2804977a 	slli	r2,r5,29
1000de78:	280a927a 	slli	r5,r5,9
1000de7c:	8822d0fa 	srli	r17,r17,3
1000de80:	8401ffcc 	andi	r16,r16,2047
1000de84:	2808d33a 	srli	r4,r5,12
1000de88:	1444b03a 	or	r2,r2,r17
1000de8c:	8401ffcc 	andi	r16,r16,2047
1000de90:	800a953a 	slli	r5,r16,20
1000de94:	40c03fcc 	andi	r3,r8,255
1000de98:	04000434 	movhi	r16,16
1000de9c:	180697fa 	slli	r3,r3,31
1000dea0:	843fffc4 	addi	r16,r16,-1
1000dea4:	2420703a 	and	r16,r4,r16
1000dea8:	8160b03a 	or	r16,r16,r5
1000deac:	80c6b03a 	or	r3,r16,r3
1000deb0:	dfc00417 	ldw	ra,16(sp)
1000deb4:	dcc00317 	ldw	r19,12(sp)
1000deb8:	dc800217 	ldw	r18,8(sp)
1000debc:	dc400117 	ldw	r17,4(sp)
1000dec0:	dc000017 	ldw	r16,0(sp)
1000dec4:	dec00504 	addi	sp,sp,20
1000dec8:	f800283a 	ret
1000decc:	0101ffc4 	movi	r4,2047
1000ded0:	813fd626 	beq	r16,r4,1000de2c <__alt_data_end+0xf800de2c>
1000ded4:	18c02034 	orhi	r3,r3,128
1000ded8:	01000e04 	movi	r4,56
1000dedc:	2080a416 	blt	r4,r2,1000e170 <__subdf3+0x3d0>
1000dee0:	010007c4 	movi	r4,31
1000dee4:	2080c716 	blt	r4,r2,1000e204 <__subdf3+0x464>
1000dee8:	01000804 	movi	r4,32
1000deec:	2089c83a 	sub	r4,r4,r2
1000def0:	1910983a 	sll	r8,r3,r4
1000def4:	308ed83a 	srl	r7,r6,r2
1000def8:	3108983a 	sll	r4,r6,r4
1000defc:	1884d83a 	srl	r2,r3,r2
1000df00:	41ccb03a 	or	r6,r8,r7
1000df04:	2008c03a 	cmpne	r4,r4,zero
1000df08:	310cb03a 	or	r6,r6,r4
1000df0c:	898dc83a 	sub	r6,r17,r6
1000df10:	89a3803a 	cmpltu	r17,r17,r6
1000df14:	288bc83a 	sub	r5,r5,r2
1000df18:	2c4bc83a 	sub	r5,r5,r17
1000df1c:	3023883a 	mov	r17,r6
1000df20:	2880202c 	andhi	r2,r5,128
1000df24:	10006b26 	beq	r2,zero,1000e0d4 <__subdf3+0x334>
1000df28:	04c02034 	movhi	r19,128
1000df2c:	9cffffc4 	addi	r19,r19,-1
1000df30:	2ce6703a 	and	r19,r5,r19
1000df34:	98007c26 	beq	r19,zero,1000e128 <__subdf3+0x388>
1000df38:	9809883a 	mov	r4,r19
1000df3c:	000e86c0 	call	1000e86c <__clzsi2>
1000df40:	10fffe04 	addi	r3,r2,-8
1000df44:	010007c4 	movi	r4,31
1000df48:	20c07d16 	blt	r4,r3,1000e140 <__subdf3+0x3a0>
1000df4c:	01400a04 	movi	r5,40
1000df50:	2885c83a 	sub	r2,r5,r2
1000df54:	888ad83a 	srl	r5,r17,r2
1000df58:	98e6983a 	sll	r19,r19,r3
1000df5c:	88e2983a 	sll	r17,r17,r3
1000df60:	2ce6b03a 	or	r19,r5,r19
1000df64:	1c007a16 	blt	r3,r16,1000e150 <__subdf3+0x3b0>
1000df68:	1c21c83a 	sub	r16,r3,r16
1000df6c:	81400044 	addi	r5,r16,1
1000df70:	00c007c4 	movi	r3,31
1000df74:	19409616 	blt	r3,r5,1000e1d0 <__subdf3+0x430>
1000df78:	1c21c83a 	sub	r16,r3,r16
1000df7c:	8c08983a 	sll	r4,r17,r16
1000df80:	8946d83a 	srl	r3,r17,r5
1000df84:	9c20983a 	sll	r16,r19,r16
1000df88:	2008c03a 	cmpne	r4,r4,zero
1000df8c:	994ad83a 	srl	r5,r19,r5
1000df90:	1c06b03a 	or	r3,r3,r16
1000df94:	1922b03a 	or	r17,r3,r4
1000df98:	0021883a 	mov	r16,zero
1000df9c:	003fa306 	br	1000de2c <__alt_data_end+0xf800de2c>
1000dfa0:	2880202c 	andhi	r2,r5,128
1000dfa4:	9200004c 	andi	r8,r18,1
1000dfa8:	103fac1e 	bne	r2,zero,1000de5c <__alt_data_end+0xf800de5c>
1000dfac:	2804977a 	slli	r2,r5,29
1000dfb0:	8822d0fa 	srli	r17,r17,3
1000dfb4:	00c1ffc4 	movi	r3,2047
1000dfb8:	280ad0fa 	srli	r5,r5,3
1000dfbc:	1444b03a 	or	r2,r2,r17
1000dfc0:	80c02726 	beq	r16,r3,1000e060 <__subdf3+0x2c0>
1000dfc4:	01000434 	movhi	r4,16
1000dfc8:	213fffc4 	addi	r4,r4,-1
1000dfcc:	80e0703a 	and	r16,r16,r3
1000dfd0:	2908703a 	and	r4,r5,r4
1000dfd4:	003fad06 	br	1000de8c <__alt_data_end+0xf800de8c>
1000dfd8:	0080690e 	bge	zero,r2,1000e180 <__subdf3+0x3e0>
1000dfdc:	50002f26 	beq	r10,zero,1000e09c <__subdf3+0x2fc>
1000dfe0:	0101ffc4 	movi	r4,2047
1000dfe4:	813f9126 	beq	r16,r4,1000de2c <__alt_data_end+0xf800de2c>
1000dfe8:	18c02034 	orhi	r3,r3,128
1000dfec:	01000e04 	movi	r4,56
1000dff0:	2080b00e 	bge	r4,r2,1000e2b4 <__subdf3+0x514>
1000dff4:	198cb03a 	or	r6,r3,r6
1000dff8:	300ec03a 	cmpne	r7,r6,zero
1000dffc:	0005883a 	mov	r2,zero
1000e000:	3c4f883a 	add	r7,r7,r17
1000e004:	3c63803a 	cmpltu	r17,r7,r17
1000e008:	114b883a 	add	r5,r2,r5
1000e00c:	2c4b883a 	add	r5,r5,r17
1000e010:	3823883a 	mov	r17,r7
1000e014:	2880202c 	andhi	r2,r5,128
1000e018:	10002e26 	beq	r2,zero,1000e0d4 <__subdf3+0x334>
1000e01c:	84000044 	addi	r16,r16,1
1000e020:	0081ffc4 	movi	r2,2047
1000e024:	8080de26 	beq	r16,r2,1000e3a0 <__subdf3+0x600>
1000e028:	00bfe034 	movhi	r2,65408
1000e02c:	10bfffc4 	addi	r2,r2,-1
1000e030:	288a703a 	and	r5,r5,r2
1000e034:	880cd07a 	srli	r6,r17,1
1000e038:	280897fa 	slli	r4,r5,31
1000e03c:	88c0004c 	andi	r3,r17,1
1000e040:	30e2b03a 	or	r17,r6,r3
1000e044:	280ad07a 	srli	r5,r5,1
1000e048:	8922b03a 	or	r17,r17,r4
1000e04c:	003f7706 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e050:	1984b03a 	or	r2,r3,r6
1000e054:	103f6e26 	beq	r2,zero,1000de10 <__alt_data_end+0xf800de10>
1000e058:	39c03fcc 	andi	r7,r7,255
1000e05c:	003f6d06 	br	1000de14 <__alt_data_end+0xf800de14>
1000e060:	1146b03a 	or	r3,r2,r5
1000e064:	18003f26 	beq	r3,zero,1000e164 <__subdf3+0x3c4>
1000e068:	00c00434 	movhi	r3,16
1000e06c:	29000234 	orhi	r4,r5,8
1000e070:	18ffffc4 	addi	r3,r3,-1
1000e074:	20c8703a 	and	r4,r4,r3
1000e078:	003f8406 	br	1000de8c <__alt_data_end+0xf800de8c>
1000e07c:	10bfffc4 	addi	r2,r2,-1
1000e080:	1000501e 	bne	r2,zero,1000e1c4 <__subdf3+0x424>
1000e084:	898fc83a 	sub	r7,r17,r6
1000e088:	89e3803a 	cmpltu	r17,r17,r7
1000e08c:	28cbc83a 	sub	r5,r5,r3
1000e090:	2c4bc83a 	sub	r5,r5,r17
1000e094:	3823883a 	mov	r17,r7
1000e098:	003fa106 	br	1000df20 <__alt_data_end+0xf800df20>
1000e09c:	1988b03a 	or	r4,r3,r6
1000e0a0:	203f6226 	beq	r4,zero,1000de2c <__alt_data_end+0xf800de2c>
1000e0a4:	10bfffc4 	addi	r2,r2,-1
1000e0a8:	10009b1e 	bne	r2,zero,1000e318 <__subdf3+0x578>
1000e0ac:	344d883a 	add	r6,r6,r17
1000e0b0:	3463803a 	cmpltu	r17,r6,r17
1000e0b4:	194b883a 	add	r5,r3,r5
1000e0b8:	2c4b883a 	add	r5,r5,r17
1000e0bc:	3023883a 	mov	r17,r6
1000e0c0:	003fd406 	br	1000e014 <__alt_data_end+0xf800e014>
1000e0c4:	1106b03a 	or	r3,r2,r4
1000e0c8:	1800b426 	beq	r3,zero,1000e39c <__subdf3+0x5fc>
1000e0cc:	100b883a 	mov	r5,r2
1000e0d0:	2023883a 	mov	r17,r4
1000e0d4:	888001cc 	andi	r2,r17,7
1000e0d8:	103f561e 	bne	r2,zero,1000de34 <__alt_data_end+0xf800de34>
1000e0dc:	9200004c 	andi	r8,r18,1
1000e0e0:	003fb206 	br	1000dfac <__alt_data_end+0xf800dfac>
1000e0e4:	1000531e 	bne	r2,zero,1000e234 <__subdf3+0x494>
1000e0e8:	80800044 	addi	r2,r16,1
1000e0ec:	1081ffcc 	andi	r2,r2,2047
1000e0f0:	01000044 	movi	r4,1
1000e0f4:	2080a00e 	bge	r4,r2,1000e378 <__subdf3+0x5d8>
1000e0f8:	8985c83a 	sub	r2,r17,r6
1000e0fc:	8889803a 	cmpltu	r4,r17,r2
1000e100:	28e7c83a 	sub	r19,r5,r3
1000e104:	9927c83a 	sub	r19,r19,r4
1000e108:	9900202c 	andhi	r4,r19,128
1000e10c:	20006226 	beq	r4,zero,1000e298 <__subdf3+0x4f8>
1000e110:	3463c83a 	sub	r17,r6,r17
1000e114:	194bc83a 	sub	r5,r3,r5
1000e118:	344d803a 	cmpltu	r6,r6,r17
1000e11c:	29a7c83a 	sub	r19,r5,r6
1000e120:	3825883a 	mov	r18,r7
1000e124:	983f841e 	bne	r19,zero,1000df38 <__alt_data_end+0xf800df38>
1000e128:	8809883a 	mov	r4,r17
1000e12c:	000e86c0 	call	1000e86c <__clzsi2>
1000e130:	10800804 	addi	r2,r2,32
1000e134:	10fffe04 	addi	r3,r2,-8
1000e138:	010007c4 	movi	r4,31
1000e13c:	20ff830e 	bge	r4,r3,1000df4c <__alt_data_end+0xf800df4c>
1000e140:	14fff604 	addi	r19,r2,-40
1000e144:	8ce6983a 	sll	r19,r17,r19
1000e148:	0023883a 	mov	r17,zero
1000e14c:	1c3f860e 	bge	r3,r16,1000df68 <__alt_data_end+0xf800df68>
1000e150:	017fe034 	movhi	r5,65408
1000e154:	297fffc4 	addi	r5,r5,-1
1000e158:	80e1c83a 	sub	r16,r16,r3
1000e15c:	994a703a 	and	r5,r19,r5
1000e160:	003f3206 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e164:	0009883a 	mov	r4,zero
1000e168:	0005883a 	mov	r2,zero
1000e16c:	003f4706 	br	1000de8c <__alt_data_end+0xf800de8c>
1000e170:	198cb03a 	or	r6,r3,r6
1000e174:	300cc03a 	cmpne	r6,r6,zero
1000e178:	0005883a 	mov	r2,zero
1000e17c:	003f6306 	br	1000df0c <__alt_data_end+0xf800df0c>
1000e180:	10009d1e 	bne	r2,zero,1000e3f8 <__subdf3+0x658>
1000e184:	81c00044 	addi	r7,r16,1
1000e188:	3881ffcc 	andi	r2,r7,2047
1000e18c:	02400044 	movi	r9,1
1000e190:	4880680e 	bge	r9,r2,1000e334 <__subdf3+0x594>
1000e194:	0081ffc4 	movi	r2,2047
1000e198:	3880ae26 	beq	r7,r2,1000e454 <__subdf3+0x6b4>
1000e19c:	344d883a 	add	r6,r6,r17
1000e1a0:	3463803a 	cmpltu	r17,r6,r17
1000e1a4:	194b883a 	add	r5,r3,r5
1000e1a8:	2c4b883a 	add	r5,r5,r17
1000e1ac:	282297fa 	slli	r17,r5,31
1000e1b0:	300cd07a 	srli	r6,r6,1
1000e1b4:	280ad07a 	srli	r5,r5,1
1000e1b8:	3821883a 	mov	r16,r7
1000e1bc:	89a2b03a 	or	r17,r17,r6
1000e1c0:	003f1a06 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e1c4:	0101ffc4 	movi	r4,2047
1000e1c8:	813f431e 	bne	r16,r4,1000ded8 <__alt_data_end+0xf800ded8>
1000e1cc:	003f1706 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e1d0:	80bff844 	addi	r2,r16,-31
1000e1d4:	00c00804 	movi	r3,32
1000e1d8:	9884d83a 	srl	r2,r19,r2
1000e1dc:	28c05126 	beq	r5,r3,1000e324 <__subdf3+0x584>
1000e1e0:	00c00fc4 	movi	r3,63
1000e1e4:	1c21c83a 	sub	r16,r3,r16
1000e1e8:	9c26983a 	sll	r19,r19,r16
1000e1ec:	9c62b03a 	or	r17,r19,r17
1000e1f0:	8822c03a 	cmpne	r17,r17,zero
1000e1f4:	88a2b03a 	or	r17,r17,r2
1000e1f8:	000b883a 	mov	r5,zero
1000e1fc:	0021883a 	mov	r16,zero
1000e200:	003fb406 	br	1000e0d4 <__alt_data_end+0xf800e0d4>
1000e204:	113ff804 	addi	r4,r2,-32
1000e208:	01c00804 	movi	r7,32
1000e20c:	1908d83a 	srl	r4,r3,r4
1000e210:	11c04626 	beq	r2,r7,1000e32c <__subdf3+0x58c>
1000e214:	01c01004 	movi	r7,64
1000e218:	3885c83a 	sub	r2,r7,r2
1000e21c:	1884983a 	sll	r2,r3,r2
1000e220:	118cb03a 	or	r6,r2,r6
1000e224:	300cc03a 	cmpne	r6,r6,zero
1000e228:	310cb03a 	or	r6,r6,r4
1000e22c:	0005883a 	mov	r2,zero
1000e230:	003f3606 	br	1000df0c <__alt_data_end+0xf800df0c>
1000e234:	80002b26 	beq	r16,zero,1000e2e4 <__subdf3+0x544>
1000e238:	0101ffc4 	movi	r4,2047
1000e23c:	51006926 	beq	r10,r4,1000e3e4 <__subdf3+0x644>
1000e240:	0085c83a 	sub	r2,zero,r2
1000e244:	29402034 	orhi	r5,r5,128
1000e248:	01000e04 	movi	r4,56
1000e24c:	20807d16 	blt	r4,r2,1000e444 <__subdf3+0x6a4>
1000e250:	010007c4 	movi	r4,31
1000e254:	2080d916 	blt	r4,r2,1000e5bc <__subdf3+0x81c>
1000e258:	01000804 	movi	r4,32
1000e25c:	2089c83a 	sub	r4,r4,r2
1000e260:	2912983a 	sll	r9,r5,r4
1000e264:	8890d83a 	srl	r8,r17,r2
1000e268:	8908983a 	sll	r4,r17,r4
1000e26c:	2884d83a 	srl	r2,r5,r2
1000e270:	4a22b03a 	or	r17,r9,r8
1000e274:	2008c03a 	cmpne	r4,r4,zero
1000e278:	8922b03a 	or	r17,r17,r4
1000e27c:	3463c83a 	sub	r17,r6,r17
1000e280:	1885c83a 	sub	r2,r3,r2
1000e284:	344d803a 	cmpltu	r6,r6,r17
1000e288:	118bc83a 	sub	r5,r2,r6
1000e28c:	5021883a 	mov	r16,r10
1000e290:	3825883a 	mov	r18,r7
1000e294:	003f2206 	br	1000df20 <__alt_data_end+0xf800df20>
1000e298:	9886b03a 	or	r3,r19,r2
1000e29c:	18001c1e 	bne	r3,zero,1000e310 <__subdf3+0x570>
1000e2a0:	0011883a 	mov	r8,zero
1000e2a4:	000b883a 	mov	r5,zero
1000e2a8:	0023883a 	mov	r17,zero
1000e2ac:	0021883a 	mov	r16,zero
1000e2b0:	003f3e06 	br	1000dfac <__alt_data_end+0xf800dfac>
1000e2b4:	010007c4 	movi	r4,31
1000e2b8:	20803c16 	blt	r4,r2,1000e3ac <__subdf3+0x60c>
1000e2bc:	01000804 	movi	r4,32
1000e2c0:	2089c83a 	sub	r4,r4,r2
1000e2c4:	1912983a 	sll	r9,r3,r4
1000e2c8:	308ed83a 	srl	r7,r6,r2
1000e2cc:	3108983a 	sll	r4,r6,r4
1000e2d0:	1884d83a 	srl	r2,r3,r2
1000e2d4:	49ceb03a 	or	r7,r9,r7
1000e2d8:	2008c03a 	cmpne	r4,r4,zero
1000e2dc:	390eb03a 	or	r7,r7,r4
1000e2e0:	003f4706 	br	1000e000 <__alt_data_end+0xf800e000>
1000e2e4:	2c48b03a 	or	r4,r5,r17
1000e2e8:	20003e26 	beq	r4,zero,1000e3e4 <__subdf3+0x644>
1000e2ec:	0084303a 	nor	r2,zero,r2
1000e2f0:	10003a1e 	bne	r2,zero,1000e3dc <__subdf3+0x63c>
1000e2f4:	3463c83a 	sub	r17,r6,r17
1000e2f8:	194bc83a 	sub	r5,r3,r5
1000e2fc:	344d803a 	cmpltu	r6,r6,r17
1000e300:	298bc83a 	sub	r5,r5,r6
1000e304:	5021883a 	mov	r16,r10
1000e308:	3825883a 	mov	r18,r7
1000e30c:	003f0406 	br	1000df20 <__alt_data_end+0xf800df20>
1000e310:	1023883a 	mov	r17,r2
1000e314:	003f0706 	br	1000df34 <__alt_data_end+0xf800df34>
1000e318:	0101ffc4 	movi	r4,2047
1000e31c:	813f331e 	bne	r16,r4,1000dfec <__alt_data_end+0xf800dfec>
1000e320:	003ec206 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e324:	0027883a 	mov	r19,zero
1000e328:	003fb006 	br	1000e1ec <__alt_data_end+0xf800e1ec>
1000e32c:	0005883a 	mov	r2,zero
1000e330:	003fbb06 	br	1000e220 <__alt_data_end+0xf800e220>
1000e334:	2c44b03a 	or	r2,r5,r17
1000e338:	80008b1e 	bne	r16,zero,1000e568 <__subdf3+0x7c8>
1000e33c:	1000b526 	beq	r2,zero,1000e614 <__subdf3+0x874>
1000e340:	1984b03a 	or	r2,r3,r6
1000e344:	103eb926 	beq	r2,zero,1000de2c <__alt_data_end+0xf800de2c>
1000e348:	3449883a 	add	r4,r6,r17
1000e34c:	2463803a 	cmpltu	r17,r4,r17
1000e350:	194b883a 	add	r5,r3,r5
1000e354:	2c4b883a 	add	r5,r5,r17
1000e358:	2880202c 	andhi	r2,r5,128
1000e35c:	2023883a 	mov	r17,r4
1000e360:	103f5c26 	beq	r2,zero,1000e0d4 <__alt_data_end+0xf800e0d4>
1000e364:	00bfe034 	movhi	r2,65408
1000e368:	10bfffc4 	addi	r2,r2,-1
1000e36c:	4821883a 	mov	r16,r9
1000e370:	288a703a 	and	r5,r5,r2
1000e374:	003ead06 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e378:	2c44b03a 	or	r2,r5,r17
1000e37c:	8000291e 	bne	r16,zero,1000e424 <__subdf3+0x684>
1000e380:	10004f1e 	bne	r2,zero,1000e4c0 <__subdf3+0x720>
1000e384:	1984b03a 	or	r2,r3,r6
1000e388:	10000426 	beq	r2,zero,1000e39c <__subdf3+0x5fc>
1000e38c:	180b883a 	mov	r5,r3
1000e390:	3023883a 	mov	r17,r6
1000e394:	3825883a 	mov	r18,r7
1000e398:	003ea406 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e39c:	0011883a 	mov	r8,zero
1000e3a0:	000b883a 	mov	r5,zero
1000e3a4:	0023883a 	mov	r17,zero
1000e3a8:	003f0006 	br	1000dfac <__alt_data_end+0xf800dfac>
1000e3ac:	11fff804 	addi	r7,r2,-32
1000e3b0:	19c8d83a 	srl	r4,r3,r7
1000e3b4:	01c00804 	movi	r7,32
1000e3b8:	11c07e26 	beq	r2,r7,1000e5b4 <__subdf3+0x814>
1000e3bc:	01c01004 	movi	r7,64
1000e3c0:	3885c83a 	sub	r2,r7,r2
1000e3c4:	1884983a 	sll	r2,r3,r2
1000e3c8:	118cb03a 	or	r6,r2,r6
1000e3cc:	300ec03a 	cmpne	r7,r6,zero
1000e3d0:	390eb03a 	or	r7,r7,r4
1000e3d4:	0005883a 	mov	r2,zero
1000e3d8:	003f0906 	br	1000e000 <__alt_data_end+0xf800e000>
1000e3dc:	0101ffc4 	movi	r4,2047
1000e3e0:	513f991e 	bne	r10,r4,1000e248 <__alt_data_end+0xf800e248>
1000e3e4:	180b883a 	mov	r5,r3
1000e3e8:	3023883a 	mov	r17,r6
1000e3ec:	5021883a 	mov	r16,r10
1000e3f0:	3825883a 	mov	r18,r7
1000e3f4:	003e8d06 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e3f8:	80001a1e 	bne	r16,zero,1000e464 <__subdf3+0x6c4>
1000e3fc:	2c48b03a 	or	r4,r5,r17
1000e400:	20005526 	beq	r4,zero,1000e558 <__subdf3+0x7b8>
1000e404:	0084303a 	nor	r2,zero,r2
1000e408:	1000511e 	bne	r2,zero,1000e550 <__subdf3+0x7b0>
1000e40c:	89a3883a 	add	r17,r17,r6
1000e410:	194b883a 	add	r5,r3,r5
1000e414:	898d803a 	cmpltu	r6,r17,r6
1000e418:	298b883a 	add	r5,r5,r6
1000e41c:	5021883a 	mov	r16,r10
1000e420:	003efc06 	br	1000e014 <__alt_data_end+0xf800e014>
1000e424:	1000341e 	bne	r2,zero,1000e4f8 <__subdf3+0x758>
1000e428:	1984b03a 	or	r2,r3,r6
1000e42c:	10006f26 	beq	r2,zero,1000e5ec <__subdf3+0x84c>
1000e430:	180b883a 	mov	r5,r3
1000e434:	3023883a 	mov	r17,r6
1000e438:	3825883a 	mov	r18,r7
1000e43c:	0401ffc4 	movi	r16,2047
1000e440:	003e7a06 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e444:	2c62b03a 	or	r17,r5,r17
1000e448:	8822c03a 	cmpne	r17,r17,zero
1000e44c:	0005883a 	mov	r2,zero
1000e450:	003f8a06 	br	1000e27c <__alt_data_end+0xf800e27c>
1000e454:	3821883a 	mov	r16,r7
1000e458:	000b883a 	mov	r5,zero
1000e45c:	0023883a 	mov	r17,zero
1000e460:	003ed206 	br	1000dfac <__alt_data_end+0xf800dfac>
1000e464:	0101ffc4 	movi	r4,2047
1000e468:	51003b26 	beq	r10,r4,1000e558 <__subdf3+0x7b8>
1000e46c:	0085c83a 	sub	r2,zero,r2
1000e470:	29402034 	orhi	r5,r5,128
1000e474:	01000e04 	movi	r4,56
1000e478:	20806216 	blt	r4,r2,1000e604 <__subdf3+0x864>
1000e47c:	010007c4 	movi	r4,31
1000e480:	20806b16 	blt	r4,r2,1000e630 <__subdf3+0x890>
1000e484:	01000804 	movi	r4,32
1000e488:	2089c83a 	sub	r4,r4,r2
1000e48c:	2912983a 	sll	r9,r5,r4
1000e490:	888ed83a 	srl	r7,r17,r2
1000e494:	8908983a 	sll	r4,r17,r4
1000e498:	2884d83a 	srl	r2,r5,r2
1000e49c:	49e2b03a 	or	r17,r9,r7
1000e4a0:	2008c03a 	cmpne	r4,r4,zero
1000e4a4:	8922b03a 	or	r17,r17,r4
1000e4a8:	89a3883a 	add	r17,r17,r6
1000e4ac:	10c5883a 	add	r2,r2,r3
1000e4b0:	898d803a 	cmpltu	r6,r17,r6
1000e4b4:	118b883a 	add	r5,r2,r6
1000e4b8:	5021883a 	mov	r16,r10
1000e4bc:	003ed506 	br	1000e014 <__alt_data_end+0xf800e014>
1000e4c0:	1984b03a 	or	r2,r3,r6
1000e4c4:	103e5926 	beq	r2,zero,1000de2c <__alt_data_end+0xf800de2c>
1000e4c8:	8989c83a 	sub	r4,r17,r6
1000e4cc:	8911803a 	cmpltu	r8,r17,r4
1000e4d0:	28c5c83a 	sub	r2,r5,r3
1000e4d4:	1205c83a 	sub	r2,r2,r8
1000e4d8:	1200202c 	andhi	r8,r2,128
1000e4dc:	403ef926 	beq	r8,zero,1000e0c4 <__alt_data_end+0xf800e0c4>
1000e4e0:	3463c83a 	sub	r17,r6,r17
1000e4e4:	194bc83a 	sub	r5,r3,r5
1000e4e8:	344d803a 	cmpltu	r6,r6,r17
1000e4ec:	298bc83a 	sub	r5,r5,r6
1000e4f0:	3825883a 	mov	r18,r7
1000e4f4:	003e4d06 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e4f8:	1984b03a 	or	r2,r3,r6
1000e4fc:	10002b26 	beq	r2,zero,1000e5ac <__subdf3+0x80c>
1000e500:	2808d0fa 	srli	r4,r5,3
1000e504:	8822d0fa 	srli	r17,r17,3
1000e508:	280a977a 	slli	r5,r5,29
1000e50c:	2080022c 	andhi	r2,r4,8
1000e510:	2c62b03a 	or	r17,r5,r17
1000e514:	10000826 	beq	r2,zero,1000e538 <__subdf3+0x798>
1000e518:	1810d0fa 	srli	r8,r3,3
1000e51c:	4080022c 	andhi	r2,r8,8
1000e520:	1000051e 	bne	r2,zero,1000e538 <__subdf3+0x798>
1000e524:	300cd0fa 	srli	r6,r6,3
1000e528:	1804977a 	slli	r2,r3,29
1000e52c:	4009883a 	mov	r4,r8
1000e530:	3825883a 	mov	r18,r7
1000e534:	11a2b03a 	or	r17,r2,r6
1000e538:	880ad77a 	srli	r5,r17,29
1000e53c:	200890fa 	slli	r4,r4,3
1000e540:	882290fa 	slli	r17,r17,3
1000e544:	0401ffc4 	movi	r16,2047
1000e548:	290ab03a 	or	r5,r5,r4
1000e54c:	003e3706 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e550:	0101ffc4 	movi	r4,2047
1000e554:	513fc71e 	bne	r10,r4,1000e474 <__alt_data_end+0xf800e474>
1000e558:	180b883a 	mov	r5,r3
1000e55c:	3023883a 	mov	r17,r6
1000e560:	5021883a 	mov	r16,r10
1000e564:	003e3106 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e568:	10002d26 	beq	r2,zero,1000e620 <__subdf3+0x880>
1000e56c:	1984b03a 	or	r2,r3,r6
1000e570:	10000e26 	beq	r2,zero,1000e5ac <__subdf3+0x80c>
1000e574:	2808d0fa 	srli	r4,r5,3
1000e578:	8822d0fa 	srli	r17,r17,3
1000e57c:	280a977a 	slli	r5,r5,29
1000e580:	2080022c 	andhi	r2,r4,8
1000e584:	2c62b03a 	or	r17,r5,r17
1000e588:	103feb26 	beq	r2,zero,1000e538 <__alt_data_end+0xf800e538>
1000e58c:	180ed0fa 	srli	r7,r3,3
1000e590:	3880022c 	andhi	r2,r7,8
1000e594:	103fe81e 	bne	r2,zero,1000e538 <__alt_data_end+0xf800e538>
1000e598:	300cd0fa 	srli	r6,r6,3
1000e59c:	1804977a 	slli	r2,r3,29
1000e5a0:	3809883a 	mov	r4,r7
1000e5a4:	11a2b03a 	or	r17,r2,r6
1000e5a8:	003fe306 	br	1000e538 <__alt_data_end+0xf800e538>
1000e5ac:	0401ffc4 	movi	r16,2047
1000e5b0:	003e1e06 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e5b4:	0005883a 	mov	r2,zero
1000e5b8:	003f8306 	br	1000e3c8 <__alt_data_end+0xf800e3c8>
1000e5bc:	113ff804 	addi	r4,r2,-32
1000e5c0:	02000804 	movi	r8,32
1000e5c4:	2908d83a 	srl	r4,r5,r4
1000e5c8:	12002526 	beq	r2,r8,1000e660 <__subdf3+0x8c0>
1000e5cc:	02001004 	movi	r8,64
1000e5d0:	4085c83a 	sub	r2,r8,r2
1000e5d4:	288a983a 	sll	r5,r5,r2
1000e5d8:	2c62b03a 	or	r17,r5,r17
1000e5dc:	8822c03a 	cmpne	r17,r17,zero
1000e5e0:	8922b03a 	or	r17,r17,r4
1000e5e4:	0005883a 	mov	r2,zero
1000e5e8:	003f2406 	br	1000e27c <__alt_data_end+0xf800e27c>
1000e5ec:	01402034 	movhi	r5,128
1000e5f0:	0011883a 	mov	r8,zero
1000e5f4:	297fffc4 	addi	r5,r5,-1
1000e5f8:	047ffe04 	movi	r17,-8
1000e5fc:	0401ffc4 	movi	r16,2047
1000e600:	003e6a06 	br	1000dfac <__alt_data_end+0xf800dfac>
1000e604:	2c62b03a 	or	r17,r5,r17
1000e608:	8822c03a 	cmpne	r17,r17,zero
1000e60c:	0005883a 	mov	r2,zero
1000e610:	003fa506 	br	1000e4a8 <__alt_data_end+0xf800e4a8>
1000e614:	180b883a 	mov	r5,r3
1000e618:	3023883a 	mov	r17,r6
1000e61c:	003e0306 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e620:	180b883a 	mov	r5,r3
1000e624:	3023883a 	mov	r17,r6
1000e628:	0401ffc4 	movi	r16,2047
1000e62c:	003dff06 	br	1000de2c <__alt_data_end+0xf800de2c>
1000e630:	113ff804 	addi	r4,r2,-32
1000e634:	01c00804 	movi	r7,32
1000e638:	2908d83a 	srl	r4,r5,r4
1000e63c:	11c00a26 	beq	r2,r7,1000e668 <__subdf3+0x8c8>
1000e640:	01c01004 	movi	r7,64
1000e644:	3885c83a 	sub	r2,r7,r2
1000e648:	288a983a 	sll	r5,r5,r2
1000e64c:	2c62b03a 	or	r17,r5,r17
1000e650:	8822c03a 	cmpne	r17,r17,zero
1000e654:	8922b03a 	or	r17,r17,r4
1000e658:	0005883a 	mov	r2,zero
1000e65c:	003f9206 	br	1000e4a8 <__alt_data_end+0xf800e4a8>
1000e660:	000b883a 	mov	r5,zero
1000e664:	003fdc06 	br	1000e5d8 <__alt_data_end+0xf800e5d8>
1000e668:	000b883a 	mov	r5,zero
1000e66c:	003ff706 	br	1000e64c <__alt_data_end+0xf800e64c>

1000e670 <__fixdfsi>:
1000e670:	2806d53a 	srli	r3,r5,20
1000e674:	00800434 	movhi	r2,16
1000e678:	10bfffc4 	addi	r2,r2,-1
1000e67c:	18c1ffcc 	andi	r3,r3,2047
1000e680:	0180ff84 	movi	r6,1022
1000e684:	2884703a 	and	r2,r5,r2
1000e688:	280ad7fa 	srli	r5,r5,31
1000e68c:	30c0130e 	bge	r6,r3,1000e6dc <__fixdfsi+0x6c>
1000e690:	01810744 	movi	r6,1053
1000e694:	30c00d16 	blt	r6,r3,1000e6cc <__fixdfsi+0x5c>
1000e698:	01810cc4 	movi	r6,1075
1000e69c:	30cdc83a 	sub	r6,r6,r3
1000e6a0:	01c007c4 	movi	r7,31
1000e6a4:	10800434 	orhi	r2,r2,16
1000e6a8:	39800e0e 	bge	r7,r6,1000e6e4 <__fixdfsi+0x74>
1000e6ac:	010104c4 	movi	r4,1043
1000e6b0:	20c7c83a 	sub	r3,r4,r3
1000e6b4:	10c6d83a 	srl	r3,r2,r3
1000e6b8:	29403fcc 	andi	r5,r5,255
1000e6bc:	0145c83a 	sub	r2,zero,r5
1000e6c0:	1884f03a 	xor	r2,r3,r2
1000e6c4:	1145883a 	add	r2,r2,r5
1000e6c8:	f800283a 	ret
1000e6cc:	00a00034 	movhi	r2,32768
1000e6d0:	10bfffc4 	addi	r2,r2,-1
1000e6d4:	2885883a 	add	r2,r5,r2
1000e6d8:	f800283a 	ret
1000e6dc:	0005883a 	mov	r2,zero
1000e6e0:	f800283a 	ret
1000e6e4:	18fefb44 	addi	r3,r3,-1043
1000e6e8:	2188d83a 	srl	r4,r4,r6
1000e6ec:	10c6983a 	sll	r3,r2,r3
1000e6f0:	20c6b03a 	or	r3,r4,r3
1000e6f4:	003ff006 	br	1000e6b8 <__alt_data_end+0xf800e6b8>

1000e6f8 <__floatsidf>:
1000e6f8:	defffd04 	addi	sp,sp,-12
1000e6fc:	dc400115 	stw	r17,4(sp)
1000e700:	dfc00215 	stw	ra,8(sp)
1000e704:	dc000015 	stw	r16,0(sp)
1000e708:	2023883a 	mov	r17,r4
1000e70c:	20001426 	beq	r4,zero,1000e760 <__floatsidf+0x68>
1000e710:	2020d7fa 	srli	r16,r4,31
1000e714:	80000126 	beq	r16,zero,1000e71c <__floatsidf+0x24>
1000e718:	0123c83a 	sub	r17,zero,r4
1000e71c:	8809883a 	mov	r4,r17
1000e720:	000e86c0 	call	1000e86c <__clzsi2>
1000e724:	01410784 	movi	r5,1054
1000e728:	00c00284 	movi	r3,10
1000e72c:	288bc83a 	sub	r5,r5,r2
1000e730:	18801c16 	blt	r3,r2,1000e7a4 <__floatsidf+0xac>
1000e734:	00c002c4 	movi	r3,11
1000e738:	1887c83a 	sub	r3,r3,r2
1000e73c:	88c8d83a 	srl	r4,r17,r3
1000e740:	00c00434 	movhi	r3,16
1000e744:	18ffffc4 	addi	r3,r3,-1
1000e748:	10800544 	addi	r2,r2,21
1000e74c:	20c8703a 	and	r4,r4,r3
1000e750:	8884983a 	sll	r2,r17,r2
1000e754:	28c1ffcc 	andi	r3,r5,2047
1000e758:	800d883a 	mov	r6,r16
1000e75c:	00000406 	br	1000e770 <__floatsidf+0x78>
1000e760:	000d883a 	mov	r6,zero
1000e764:	0007883a 	mov	r3,zero
1000e768:	0009883a 	mov	r4,zero
1000e76c:	0005883a 	mov	r2,zero
1000e770:	180a953a 	slli	r5,r3,20
1000e774:	31803fcc 	andi	r6,r6,255
1000e778:	00c00434 	movhi	r3,16
1000e77c:	300c97fa 	slli	r6,r6,31
1000e780:	18ffffc4 	addi	r3,r3,-1
1000e784:	20c6703a 	and	r3,r4,r3
1000e788:	1946b03a 	or	r3,r3,r5
1000e78c:	1986b03a 	or	r3,r3,r6
1000e790:	dfc00217 	ldw	ra,8(sp)
1000e794:	dc400117 	ldw	r17,4(sp)
1000e798:	dc000017 	ldw	r16,0(sp)
1000e79c:	dec00304 	addi	sp,sp,12
1000e7a0:	f800283a 	ret
1000e7a4:	10fffd44 	addi	r3,r2,-11
1000e7a8:	88c8983a 	sll	r4,r17,r3
1000e7ac:	00800434 	movhi	r2,16
1000e7b0:	10bfffc4 	addi	r2,r2,-1
1000e7b4:	2088703a 	and	r4,r4,r2
1000e7b8:	28c1ffcc 	andi	r3,r5,2047
1000e7bc:	800d883a 	mov	r6,r16
1000e7c0:	0005883a 	mov	r2,zero
1000e7c4:	003fea06 	br	1000e770 <__alt_data_end+0xf800e770>

1000e7c8 <__floatunsidf>:
1000e7c8:	defffe04 	addi	sp,sp,-8
1000e7cc:	dc000015 	stw	r16,0(sp)
1000e7d0:	dfc00115 	stw	ra,4(sp)
1000e7d4:	2021883a 	mov	r16,r4
1000e7d8:	20001026 	beq	r4,zero,1000e81c <__floatunsidf+0x54>
1000e7dc:	000e86c0 	call	1000e86c <__clzsi2>
1000e7e0:	01410784 	movi	r5,1054
1000e7e4:	100d883a 	mov	r6,r2
1000e7e8:	288bc83a 	sub	r5,r5,r2
1000e7ec:	00800284 	movi	r2,10
1000e7f0:	11801616 	blt	r2,r6,1000e84c <__floatunsidf+0x84>
1000e7f4:	008002c4 	movi	r2,11
1000e7f8:	1185c83a 	sub	r2,r2,r6
1000e7fc:	8084d83a 	srl	r2,r16,r2
1000e800:	00c00434 	movhi	r3,16
1000e804:	31c00544 	addi	r7,r6,21
1000e808:	18ffffc4 	addi	r3,r3,-1
1000e80c:	81e0983a 	sll	r16,r16,r7
1000e810:	10cc703a 	and	r6,r2,r3
1000e814:	2941ffcc 	andi	r5,r5,2047
1000e818:	00000206 	br	1000e824 <__floatunsidf+0x5c>
1000e81c:	000b883a 	mov	r5,zero
1000e820:	000d883a 	mov	r6,zero
1000e824:	280a953a 	slli	r5,r5,20
1000e828:	00c00434 	movhi	r3,16
1000e82c:	18ffffc4 	addi	r3,r3,-1
1000e830:	30c6703a 	and	r3,r6,r3
1000e834:	8005883a 	mov	r2,r16
1000e838:	1946b03a 	or	r3,r3,r5
1000e83c:	dfc00117 	ldw	ra,4(sp)
1000e840:	dc000017 	ldw	r16,0(sp)
1000e844:	dec00204 	addi	sp,sp,8
1000e848:	f800283a 	ret
1000e84c:	31bffd44 	addi	r6,r6,-11
1000e850:	818c983a 	sll	r6,r16,r6
1000e854:	00800434 	movhi	r2,16
1000e858:	10bfffc4 	addi	r2,r2,-1
1000e85c:	2941ffcc 	andi	r5,r5,2047
1000e860:	0021883a 	mov	r16,zero
1000e864:	308c703a 	and	r6,r6,r2
1000e868:	003fee06 	br	1000e824 <__alt_data_end+0xf800e824>

1000e86c <__clzsi2>:
1000e86c:	00bfffd4 	movui	r2,65535
1000e870:	11000b36 	bltu	r2,r4,1000e8a0 <__clzsi2+0x34>
1000e874:	00803fc4 	movi	r2,255
1000e878:	1100122e 	bgeu	r2,r4,1000e8c4 <__clzsi2+0x58>
1000e87c:	00c00204 	movi	r3,8
1000e880:	01400604 	movi	r5,24
1000e884:	20c8d83a 	srl	r4,r4,r3
1000e888:	00840074 	movhi	r2,4097
1000e88c:	10808004 	addi	r2,r2,512
1000e890:	1109883a 	add	r4,r2,r4
1000e894:	20800003 	ldbu	r2,0(r4)
1000e898:	2885c83a 	sub	r2,r5,r2
1000e89c:	f800283a 	ret
1000e8a0:	00804034 	movhi	r2,256
1000e8a4:	10bfffc4 	addi	r2,r2,-1
1000e8a8:	11000336 	bltu	r2,r4,1000e8b8 <__clzsi2+0x4c>
1000e8ac:	00c00404 	movi	r3,16
1000e8b0:	180b883a 	mov	r5,r3
1000e8b4:	003ff306 	br	1000e884 <__alt_data_end+0xf800e884>
1000e8b8:	00c00604 	movi	r3,24
1000e8bc:	01400204 	movi	r5,8
1000e8c0:	003ff006 	br	1000e884 <__alt_data_end+0xf800e884>
1000e8c4:	0007883a 	mov	r3,zero
1000e8c8:	01400804 	movi	r5,32
1000e8cc:	003fed06 	br	1000e884 <__alt_data_end+0xf800e884>

1000e8d0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000e8d0:	defffe04 	addi	sp,sp,-8
1000e8d4:	dfc00115 	stw	ra,4(sp)
1000e8d8:	df000015 	stw	fp,0(sp)
1000e8dc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000e8e0:	00840074 	movhi	r2,4097
1000e8e4:	10836104 	addi	r2,r2,3460
1000e8e8:	10800017 	ldw	r2,0(r2)
1000e8ec:	10000526 	beq	r2,zero,1000e904 <alt_get_errno+0x34>
1000e8f0:	00840074 	movhi	r2,4097
1000e8f4:	10836104 	addi	r2,r2,3460
1000e8f8:	10800017 	ldw	r2,0(r2)
1000e8fc:	103ee83a 	callr	r2
1000e900:	00000206 	br	1000e90c <alt_get_errno+0x3c>
1000e904:	00840074 	movhi	r2,4097
1000e908:	10860a04 	addi	r2,r2,6184
}
1000e90c:	e037883a 	mov	sp,fp
1000e910:	dfc00117 	ldw	ra,4(sp)
1000e914:	df000017 	ldw	fp,0(sp)
1000e918:	dec00204 	addi	sp,sp,8
1000e91c:	f800283a 	ret

1000e920 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1000e920:	defffb04 	addi	sp,sp,-20
1000e924:	dfc00415 	stw	ra,16(sp)
1000e928:	df000315 	stw	fp,12(sp)
1000e92c:	df000304 	addi	fp,sp,12
1000e930:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1000e934:	e0bfff17 	ldw	r2,-4(fp)
1000e938:	10000816 	blt	r2,zero,1000e95c <close+0x3c>
1000e93c:	e13fff17 	ldw	r4,-4(fp)
1000e940:	01400304 	movi	r5,12
1000e944:	000c0ac0 	call	1000c0ac <__mulsi3>
1000e948:	1007883a 	mov	r3,r2
1000e94c:	00840074 	movhi	r2,4097
1000e950:	1082f604 	addi	r2,r2,3032
1000e954:	1885883a 	add	r2,r3,r2
1000e958:	00000106 	br	1000e960 <close+0x40>
1000e95c:	0005883a 	mov	r2,zero
1000e960:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1000e964:	e0bffd17 	ldw	r2,-12(fp)
1000e968:	10001926 	beq	r2,zero,1000e9d0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1000e96c:	e0bffd17 	ldw	r2,-12(fp)
1000e970:	10800017 	ldw	r2,0(r2)
1000e974:	10800417 	ldw	r2,16(r2)
1000e978:	10000626 	beq	r2,zero,1000e994 <close+0x74>
1000e97c:	e0bffd17 	ldw	r2,-12(fp)
1000e980:	10800017 	ldw	r2,0(r2)
1000e984:	10800417 	ldw	r2,16(r2)
1000e988:	e13ffd17 	ldw	r4,-12(fp)
1000e98c:	103ee83a 	callr	r2
1000e990:	00000106 	br	1000e998 <close+0x78>
1000e994:	0005883a 	mov	r2,zero
1000e998:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1000e99c:	e13fff17 	ldw	r4,-4(fp)
1000e9a0:	000f0280 	call	1000f028 <alt_release_fd>
    if (rval < 0)
1000e9a4:	e0bffe17 	ldw	r2,-8(fp)
1000e9a8:	1000070e 	bge	r2,zero,1000e9c8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1000e9ac:	000e8d00 	call	1000e8d0 <alt_get_errno>
1000e9b0:	1007883a 	mov	r3,r2
1000e9b4:	e0bffe17 	ldw	r2,-8(fp)
1000e9b8:	0085c83a 	sub	r2,zero,r2
1000e9bc:	18800015 	stw	r2,0(r3)
      return -1;
1000e9c0:	00bfffc4 	movi	r2,-1
1000e9c4:	00000706 	br	1000e9e4 <close+0xc4>
    }
    return 0;
1000e9c8:	0005883a 	mov	r2,zero
1000e9cc:	00000506 	br	1000e9e4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000e9d0:	000e8d00 	call	1000e8d0 <alt_get_errno>
1000e9d4:	1007883a 	mov	r3,r2
1000e9d8:	00801444 	movi	r2,81
1000e9dc:	18800015 	stw	r2,0(r3)
    return -1;
1000e9e0:	00bfffc4 	movi	r2,-1
  }
}
1000e9e4:	e037883a 	mov	sp,fp
1000e9e8:	dfc00117 	ldw	ra,4(sp)
1000e9ec:	df000017 	ldw	fp,0(sp)
1000e9f0:	dec00204 	addi	sp,sp,8
1000e9f4:	f800283a 	ret

1000e9f8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1000e9f8:	defffc04 	addi	sp,sp,-16
1000e9fc:	df000315 	stw	fp,12(sp)
1000ea00:	df000304 	addi	fp,sp,12
1000ea04:	e13ffd15 	stw	r4,-12(fp)
1000ea08:	e17ffe15 	stw	r5,-8(fp)
1000ea0c:	e1bfff15 	stw	r6,-4(fp)
  return len;
1000ea10:	e0bfff17 	ldw	r2,-4(fp)
}
1000ea14:	e037883a 	mov	sp,fp
1000ea18:	df000017 	ldw	fp,0(sp)
1000ea1c:	dec00104 	addi	sp,sp,4
1000ea20:	f800283a 	ret

1000ea24 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000ea24:	defffe04 	addi	sp,sp,-8
1000ea28:	dfc00115 	stw	ra,4(sp)
1000ea2c:	df000015 	stw	fp,0(sp)
1000ea30:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000ea34:	00840074 	movhi	r2,4097
1000ea38:	10836104 	addi	r2,r2,3460
1000ea3c:	10800017 	ldw	r2,0(r2)
1000ea40:	10000526 	beq	r2,zero,1000ea58 <alt_get_errno+0x34>
1000ea44:	00840074 	movhi	r2,4097
1000ea48:	10836104 	addi	r2,r2,3460
1000ea4c:	10800017 	ldw	r2,0(r2)
1000ea50:	103ee83a 	callr	r2
1000ea54:	00000206 	br	1000ea60 <alt_get_errno+0x3c>
1000ea58:	00840074 	movhi	r2,4097
1000ea5c:	10860a04 	addi	r2,r2,6184
}
1000ea60:	e037883a 	mov	sp,fp
1000ea64:	dfc00117 	ldw	ra,4(sp)
1000ea68:	df000017 	ldw	fp,0(sp)
1000ea6c:	dec00204 	addi	sp,sp,8
1000ea70:	f800283a 	ret

1000ea74 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1000ea74:	defffb04 	addi	sp,sp,-20
1000ea78:	dfc00415 	stw	ra,16(sp)
1000ea7c:	df000315 	stw	fp,12(sp)
1000ea80:	df000304 	addi	fp,sp,12
1000ea84:	e13ffe15 	stw	r4,-8(fp)
1000ea88:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000ea8c:	e0bffe17 	ldw	r2,-8(fp)
1000ea90:	10000816 	blt	r2,zero,1000eab4 <fstat+0x40>
1000ea94:	e13ffe17 	ldw	r4,-8(fp)
1000ea98:	01400304 	movi	r5,12
1000ea9c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000eaa0:	1007883a 	mov	r3,r2
1000eaa4:	00840074 	movhi	r2,4097
1000eaa8:	1082f604 	addi	r2,r2,3032
1000eaac:	1885883a 	add	r2,r3,r2
1000eab0:	00000106 	br	1000eab8 <fstat+0x44>
1000eab4:	0005883a 	mov	r2,zero
1000eab8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1000eabc:	e0bffd17 	ldw	r2,-12(fp)
1000eac0:	10001026 	beq	r2,zero,1000eb04 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1000eac4:	e0bffd17 	ldw	r2,-12(fp)
1000eac8:	10800017 	ldw	r2,0(r2)
1000eacc:	10800817 	ldw	r2,32(r2)
1000ead0:	10000726 	beq	r2,zero,1000eaf0 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
1000ead4:	e0bffd17 	ldw	r2,-12(fp)
1000ead8:	10800017 	ldw	r2,0(r2)
1000eadc:	10800817 	ldw	r2,32(r2)
1000eae0:	e13ffd17 	ldw	r4,-12(fp)
1000eae4:	e17fff17 	ldw	r5,-4(fp)
1000eae8:	103ee83a 	callr	r2
1000eaec:	00000a06 	br	1000eb18 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1000eaf0:	e0bfff17 	ldw	r2,-4(fp)
1000eaf4:	00c80004 	movi	r3,8192
1000eaf8:	10c00115 	stw	r3,4(r2)
      return 0;
1000eafc:	0005883a 	mov	r2,zero
1000eb00:	00000506 	br	1000eb18 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000eb04:	000ea240 	call	1000ea24 <alt_get_errno>
1000eb08:	1007883a 	mov	r3,r2
1000eb0c:	00801444 	movi	r2,81
1000eb10:	18800015 	stw	r2,0(r3)
    return -1;
1000eb14:	00bfffc4 	movi	r2,-1
  }
}
1000eb18:	e037883a 	mov	sp,fp
1000eb1c:	dfc00117 	ldw	ra,4(sp)
1000eb20:	df000017 	ldw	fp,0(sp)
1000eb24:	dec00204 	addi	sp,sp,8
1000eb28:	f800283a 	ret

1000eb2c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000eb2c:	defffe04 	addi	sp,sp,-8
1000eb30:	dfc00115 	stw	ra,4(sp)
1000eb34:	df000015 	stw	fp,0(sp)
1000eb38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000eb3c:	00840074 	movhi	r2,4097
1000eb40:	10836104 	addi	r2,r2,3460
1000eb44:	10800017 	ldw	r2,0(r2)
1000eb48:	10000526 	beq	r2,zero,1000eb60 <alt_get_errno+0x34>
1000eb4c:	00840074 	movhi	r2,4097
1000eb50:	10836104 	addi	r2,r2,3460
1000eb54:	10800017 	ldw	r2,0(r2)
1000eb58:	103ee83a 	callr	r2
1000eb5c:	00000206 	br	1000eb68 <alt_get_errno+0x3c>
1000eb60:	00840074 	movhi	r2,4097
1000eb64:	10860a04 	addi	r2,r2,6184
}
1000eb68:	e037883a 	mov	sp,fp
1000eb6c:	dfc00117 	ldw	ra,4(sp)
1000eb70:	df000017 	ldw	fp,0(sp)
1000eb74:	dec00204 	addi	sp,sp,8
1000eb78:	f800283a 	ret

1000eb7c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1000eb7c:	deffed04 	addi	sp,sp,-76
1000eb80:	dfc01215 	stw	ra,72(sp)
1000eb84:	df001115 	stw	fp,68(sp)
1000eb88:	df001104 	addi	fp,sp,68
1000eb8c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000eb90:	e0bfff17 	ldw	r2,-4(fp)
1000eb94:	10000816 	blt	r2,zero,1000ebb8 <isatty+0x3c>
1000eb98:	e13fff17 	ldw	r4,-4(fp)
1000eb9c:	01400304 	movi	r5,12
1000eba0:	000c0ac0 	call	1000c0ac <__mulsi3>
1000eba4:	1007883a 	mov	r3,r2
1000eba8:	00840074 	movhi	r2,4097
1000ebac:	1082f604 	addi	r2,r2,3032
1000ebb0:	1885883a 	add	r2,r3,r2
1000ebb4:	00000106 	br	1000ebbc <isatty+0x40>
1000ebb8:	0005883a 	mov	r2,zero
1000ebbc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1000ebc0:	e0bfef17 	ldw	r2,-68(fp)
1000ebc4:	10000e26 	beq	r2,zero,1000ec00 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1000ebc8:	e0bfef17 	ldw	r2,-68(fp)
1000ebcc:	10800017 	ldw	r2,0(r2)
1000ebd0:	10800817 	ldw	r2,32(r2)
1000ebd4:	1000021e 	bne	r2,zero,1000ebe0 <isatty+0x64>
    {
      return 1;
1000ebd8:	00800044 	movi	r2,1
1000ebdc:	00000d06 	br	1000ec14 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1000ebe0:	e0bff004 	addi	r2,fp,-64
1000ebe4:	e13fff17 	ldw	r4,-4(fp)
1000ebe8:	100b883a 	mov	r5,r2
1000ebec:	000ea740 	call	1000ea74 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1000ebf0:	e0bff117 	ldw	r2,-60(fp)
1000ebf4:	10880020 	cmpeqi	r2,r2,8192
1000ebf8:	10803fcc 	andi	r2,r2,255
1000ebfc:	00000506 	br	1000ec14 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000ec00:	000eb2c0 	call	1000eb2c <alt_get_errno>
1000ec04:	1007883a 	mov	r3,r2
1000ec08:	00801444 	movi	r2,81
1000ec0c:	18800015 	stw	r2,0(r3)
    return 0;
1000ec10:	0005883a 	mov	r2,zero
  }
}
1000ec14:	e037883a 	mov	sp,fp
1000ec18:	dfc00117 	ldw	ra,4(sp)
1000ec1c:	df000017 	ldw	fp,0(sp)
1000ec20:	dec00204 	addi	sp,sp,8
1000ec24:	f800283a 	ret

1000ec28 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1000ec28:	defffc04 	addi	sp,sp,-16
1000ec2c:	df000315 	stw	fp,12(sp)
1000ec30:	df000304 	addi	fp,sp,12
1000ec34:	e13ffd15 	stw	r4,-12(fp)
1000ec38:	e17ffe15 	stw	r5,-8(fp)
1000ec3c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1000ec40:	e0fffe17 	ldw	r3,-8(fp)
1000ec44:	e0bffd17 	ldw	r2,-12(fp)
1000ec48:	18800c26 	beq	r3,r2,1000ec7c <alt_load_section+0x54>
  {
    while( to != end )
1000ec4c:	00000806 	br	1000ec70 <alt_load_section+0x48>
    {
      *to++ = *from++;
1000ec50:	e0bffe17 	ldw	r2,-8(fp)
1000ec54:	10c00104 	addi	r3,r2,4
1000ec58:	e0fffe15 	stw	r3,-8(fp)
1000ec5c:	e0fffd17 	ldw	r3,-12(fp)
1000ec60:	19000104 	addi	r4,r3,4
1000ec64:	e13ffd15 	stw	r4,-12(fp)
1000ec68:	18c00017 	ldw	r3,0(r3)
1000ec6c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1000ec70:	e0fffe17 	ldw	r3,-8(fp)
1000ec74:	e0bfff17 	ldw	r2,-4(fp)
1000ec78:	18bff51e 	bne	r3,r2,1000ec50 <__alt_data_end+0xf800ec50>
    {
      *to++ = *from++;
    }
  }
}
1000ec7c:	e037883a 	mov	sp,fp
1000ec80:	df000017 	ldw	fp,0(sp)
1000ec84:	dec00104 	addi	sp,sp,4
1000ec88:	f800283a 	ret

1000ec8c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1000ec8c:	defffe04 	addi	sp,sp,-8
1000ec90:	dfc00115 	stw	ra,4(sp)
1000ec94:	df000015 	stw	fp,0(sp)
1000ec98:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1000ec9c:	01040074 	movhi	r4,4097
1000eca0:	21036304 	addi	r4,r4,3468
1000eca4:	01440074 	movhi	r5,4097
1000eca8:	2940c304 	addi	r5,r5,780
1000ecac:	01840074 	movhi	r6,4097
1000ecb0:	31836304 	addi	r6,r6,3468
1000ecb4:	000ec280 	call	1000ec28 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1000ecb8:	01040034 	movhi	r4,4096
1000ecbc:	21000804 	addi	r4,r4,32
1000ecc0:	01440034 	movhi	r5,4096
1000ecc4:	29400804 	addi	r5,r5,32
1000ecc8:	01840034 	movhi	r6,4096
1000eccc:	31800804 	addi	r6,r6,32
1000ecd0:	000ec280 	call	1000ec28 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1000ecd4:	01040074 	movhi	r4,4097
1000ecd8:	213e2f04 	addi	r4,r4,-1860
1000ecdc:	01440074 	movhi	r5,4097
1000ece0:	297e2f04 	addi	r5,r5,-1860
1000ece4:	01840074 	movhi	r6,4097
1000ece8:	3180c304 	addi	r6,r6,780
1000ecec:	000ec280 	call	1000ec28 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1000ecf0:	000f4840 	call	1000f484 <alt_dcache_flush_all>
  alt_icache_flush_all();
1000ecf4:	000f5580 	call	1000f558 <alt_icache_flush_all>
}
1000ecf8:	e037883a 	mov	sp,fp
1000ecfc:	dfc00117 	ldw	ra,4(sp)
1000ed00:	df000017 	ldw	fp,0(sp)
1000ed04:	dec00204 	addi	sp,sp,8
1000ed08:	f800283a 	ret

1000ed0c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000ed0c:	defffe04 	addi	sp,sp,-8
1000ed10:	dfc00115 	stw	ra,4(sp)
1000ed14:	df000015 	stw	fp,0(sp)
1000ed18:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000ed1c:	00840074 	movhi	r2,4097
1000ed20:	10836104 	addi	r2,r2,3460
1000ed24:	10800017 	ldw	r2,0(r2)
1000ed28:	10000526 	beq	r2,zero,1000ed40 <alt_get_errno+0x34>
1000ed2c:	00840074 	movhi	r2,4097
1000ed30:	10836104 	addi	r2,r2,3460
1000ed34:	10800017 	ldw	r2,0(r2)
1000ed38:	103ee83a 	callr	r2
1000ed3c:	00000206 	br	1000ed48 <alt_get_errno+0x3c>
1000ed40:	00840074 	movhi	r2,4097
1000ed44:	10860a04 	addi	r2,r2,6184
}
1000ed48:	e037883a 	mov	sp,fp
1000ed4c:	dfc00117 	ldw	ra,4(sp)
1000ed50:	df000017 	ldw	fp,0(sp)
1000ed54:	dec00204 	addi	sp,sp,8
1000ed58:	f800283a 	ret

1000ed5c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1000ed5c:	defff904 	addi	sp,sp,-28
1000ed60:	dfc00615 	stw	ra,24(sp)
1000ed64:	df000515 	stw	fp,20(sp)
1000ed68:	df000504 	addi	fp,sp,20
1000ed6c:	e13ffd15 	stw	r4,-12(fp)
1000ed70:	e17ffe15 	stw	r5,-8(fp)
1000ed74:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1000ed78:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000ed7c:	e0bffd17 	ldw	r2,-12(fp)
1000ed80:	10000816 	blt	r2,zero,1000eda4 <lseek+0x48>
1000ed84:	e13ffd17 	ldw	r4,-12(fp)
1000ed88:	01400304 	movi	r5,12
1000ed8c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000ed90:	1007883a 	mov	r3,r2
1000ed94:	00840074 	movhi	r2,4097
1000ed98:	1082f604 	addi	r2,r2,3032
1000ed9c:	1885883a 	add	r2,r3,r2
1000eda0:	00000106 	br	1000eda8 <lseek+0x4c>
1000eda4:	0005883a 	mov	r2,zero
1000eda8:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1000edac:	e0bffc17 	ldw	r2,-16(fp)
1000edb0:	10001026 	beq	r2,zero,1000edf4 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1000edb4:	e0bffc17 	ldw	r2,-16(fp)
1000edb8:	10800017 	ldw	r2,0(r2)
1000edbc:	10800717 	ldw	r2,28(r2)
1000edc0:	10000926 	beq	r2,zero,1000ede8 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1000edc4:	e0bffc17 	ldw	r2,-16(fp)
1000edc8:	10800017 	ldw	r2,0(r2)
1000edcc:	10800717 	ldw	r2,28(r2)
1000edd0:	e13ffc17 	ldw	r4,-16(fp)
1000edd4:	e17ffe17 	ldw	r5,-8(fp)
1000edd8:	e1bfff17 	ldw	r6,-4(fp)
1000eddc:	103ee83a 	callr	r2
1000ede0:	e0bffb15 	stw	r2,-20(fp)
1000ede4:	00000506 	br	1000edfc <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1000ede8:	00bfde84 	movi	r2,-134
1000edec:	e0bffb15 	stw	r2,-20(fp)
1000edf0:	00000206 	br	1000edfc <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
1000edf4:	00bfebc4 	movi	r2,-81
1000edf8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1000edfc:	e0bffb17 	ldw	r2,-20(fp)
1000ee00:	1000070e 	bge	r2,zero,1000ee20 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
1000ee04:	000ed0c0 	call	1000ed0c <alt_get_errno>
1000ee08:	1007883a 	mov	r3,r2
1000ee0c:	e0bffb17 	ldw	r2,-20(fp)
1000ee10:	0085c83a 	sub	r2,zero,r2
1000ee14:	18800015 	stw	r2,0(r3)
    rc = -1;
1000ee18:	00bfffc4 	movi	r2,-1
1000ee1c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1000ee20:	e0bffb17 	ldw	r2,-20(fp)
}
1000ee24:	e037883a 	mov	sp,fp
1000ee28:	dfc00117 	ldw	ra,4(sp)
1000ee2c:	df000017 	ldw	fp,0(sp)
1000ee30:	dec00204 	addi	sp,sp,8
1000ee34:	f800283a 	ret

1000ee38 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1000ee38:	defffd04 	addi	sp,sp,-12
1000ee3c:	dfc00215 	stw	ra,8(sp)
1000ee40:	df000115 	stw	fp,4(sp)
1000ee44:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1000ee48:	0009883a 	mov	r4,zero
1000ee4c:	000f2d80 	call	1000f2d8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1000ee50:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1000ee54:	000f30c0 	call	1000f30c <alt_sys_init>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1000ee58:	000f4a00 	call	1000f4a0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1000ee5c:	01040074 	movhi	r4,4097
1000ee60:	213d3f04 	addi	r4,r4,-2820
1000ee64:	000f5940 	call	1000f594 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1000ee68:	d122b517 	ldw	r4,-29996(gp)
1000ee6c:	d0e2b617 	ldw	r3,-29992(gp)
1000ee70:	d0a2b717 	ldw	r2,-29988(gp)
1000ee74:	180b883a 	mov	r5,r3
1000ee78:	100d883a 	mov	r6,r2
1000ee7c:	00001340 	call	10000134 <main>
1000ee80:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1000ee84:	01000044 	movi	r4,1
1000ee88:	000e9200 	call	1000e920 <close>
  exit (result);
1000ee8c:	e13fff17 	ldw	r4,-4(fp)
1000ee90:	000f5a80 	call	1000f5a8 <exit>

1000ee94 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1000ee94:	defffe04 	addi	sp,sp,-8
1000ee98:	df000115 	stw	fp,4(sp)
1000ee9c:	df000104 	addi	fp,sp,4
1000eea0:	e13fff15 	stw	r4,-4(fp)
}
1000eea4:	e037883a 	mov	sp,fp
1000eea8:	df000017 	ldw	fp,0(sp)
1000eeac:	dec00104 	addi	sp,sp,4
1000eeb0:	f800283a 	ret

1000eeb4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1000eeb4:	defffe04 	addi	sp,sp,-8
1000eeb8:	df000115 	stw	fp,4(sp)
1000eebc:	df000104 	addi	fp,sp,4
1000eec0:	e13fff15 	stw	r4,-4(fp)
}
1000eec4:	e037883a 	mov	sp,fp
1000eec8:	df000017 	ldw	fp,0(sp)
1000eecc:	dec00104 	addi	sp,sp,4
1000eed0:	f800283a 	ret

1000eed4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000eed4:	defffe04 	addi	sp,sp,-8
1000eed8:	dfc00115 	stw	ra,4(sp)
1000eedc:	df000015 	stw	fp,0(sp)
1000eee0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000eee4:	00840074 	movhi	r2,4097
1000eee8:	10836104 	addi	r2,r2,3460
1000eeec:	10800017 	ldw	r2,0(r2)
1000eef0:	10000526 	beq	r2,zero,1000ef08 <alt_get_errno+0x34>
1000eef4:	00840074 	movhi	r2,4097
1000eef8:	10836104 	addi	r2,r2,3460
1000eefc:	10800017 	ldw	r2,0(r2)
1000ef00:	103ee83a 	callr	r2
1000ef04:	00000206 	br	1000ef10 <alt_get_errno+0x3c>
1000ef08:	00840074 	movhi	r2,4097
1000ef0c:	10860a04 	addi	r2,r2,6184
}
1000ef10:	e037883a 	mov	sp,fp
1000ef14:	dfc00117 	ldw	ra,4(sp)
1000ef18:	df000017 	ldw	fp,0(sp)
1000ef1c:	dec00204 	addi	sp,sp,8
1000ef20:	f800283a 	ret

1000ef24 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1000ef24:	defff904 	addi	sp,sp,-28
1000ef28:	dfc00615 	stw	ra,24(sp)
1000ef2c:	df000515 	stw	fp,20(sp)
1000ef30:	df000504 	addi	fp,sp,20
1000ef34:	e13ffd15 	stw	r4,-12(fp)
1000ef38:	e17ffe15 	stw	r5,-8(fp)
1000ef3c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000ef40:	e0bffd17 	ldw	r2,-12(fp)
1000ef44:	10000816 	blt	r2,zero,1000ef68 <read+0x44>
1000ef48:	e13ffd17 	ldw	r4,-12(fp)
1000ef4c:	01400304 	movi	r5,12
1000ef50:	000c0ac0 	call	1000c0ac <__mulsi3>
1000ef54:	1007883a 	mov	r3,r2
1000ef58:	00840074 	movhi	r2,4097
1000ef5c:	1082f604 	addi	r2,r2,3032
1000ef60:	1885883a 	add	r2,r3,r2
1000ef64:	00000106 	br	1000ef6c <read+0x48>
1000ef68:	0005883a 	mov	r2,zero
1000ef6c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1000ef70:	e0bffb17 	ldw	r2,-20(fp)
1000ef74:	10002226 	beq	r2,zero,1000f000 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1000ef78:	e0bffb17 	ldw	r2,-20(fp)
1000ef7c:	10800217 	ldw	r2,8(r2)
1000ef80:	108000cc 	andi	r2,r2,3
1000ef84:	10800060 	cmpeqi	r2,r2,1
1000ef88:	1000181e 	bne	r2,zero,1000efec <read+0xc8>
        (fd->dev->read))
1000ef8c:	e0bffb17 	ldw	r2,-20(fp)
1000ef90:	10800017 	ldw	r2,0(r2)
1000ef94:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1000ef98:	10001426 	beq	r2,zero,1000efec <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1000ef9c:	e0bffb17 	ldw	r2,-20(fp)
1000efa0:	10800017 	ldw	r2,0(r2)
1000efa4:	10800517 	ldw	r2,20(r2)
1000efa8:	e0ffff17 	ldw	r3,-4(fp)
1000efac:	e13ffb17 	ldw	r4,-20(fp)
1000efb0:	e17ffe17 	ldw	r5,-8(fp)
1000efb4:	180d883a 	mov	r6,r3
1000efb8:	103ee83a 	callr	r2
1000efbc:	e0bffc15 	stw	r2,-16(fp)
1000efc0:	e0bffc17 	ldw	r2,-16(fp)
1000efc4:	1000070e 	bge	r2,zero,1000efe4 <read+0xc0>
        {
          ALT_ERRNO = -rval;
1000efc8:	000eed40 	call	1000eed4 <alt_get_errno>
1000efcc:	1007883a 	mov	r3,r2
1000efd0:	e0bffc17 	ldw	r2,-16(fp)
1000efd4:	0085c83a 	sub	r2,zero,r2
1000efd8:	18800015 	stw	r2,0(r3)
          return -1;
1000efdc:	00bfffc4 	movi	r2,-1
1000efe0:	00000c06 	br	1000f014 <read+0xf0>
        }
        return rval;
1000efe4:	e0bffc17 	ldw	r2,-16(fp)
1000efe8:	00000a06 	br	1000f014 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
1000efec:	000eed40 	call	1000eed4 <alt_get_errno>
1000eff0:	1007883a 	mov	r3,r2
1000eff4:	00800344 	movi	r2,13
1000eff8:	18800015 	stw	r2,0(r3)
1000effc:	00000406 	br	1000f010 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1000f000:	000eed40 	call	1000eed4 <alt_get_errno>
1000f004:	1007883a 	mov	r3,r2
1000f008:	00801444 	movi	r2,81
1000f00c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1000f010:	00bfffc4 	movi	r2,-1
}
1000f014:	e037883a 	mov	sp,fp
1000f018:	dfc00117 	ldw	ra,4(sp)
1000f01c:	df000017 	ldw	fp,0(sp)
1000f020:	dec00204 	addi	sp,sp,8
1000f024:	f800283a 	ret

1000f028 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1000f028:	defffc04 	addi	sp,sp,-16
1000f02c:	dfc00315 	stw	ra,12(sp)
1000f030:	df000215 	stw	fp,8(sp)
1000f034:	dc000115 	stw	r16,4(sp)
1000f038:	df000204 	addi	fp,sp,8
1000f03c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
1000f040:	e0bffe17 	ldw	r2,-8(fp)
1000f044:	108000d0 	cmplti	r2,r2,3
1000f048:	1000111e 	bne	r2,zero,1000f090 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
1000f04c:	04040074 	movhi	r16,4097
1000f050:	8402f604 	addi	r16,r16,3032
1000f054:	e0bffe17 	ldw	r2,-8(fp)
1000f058:	1009883a 	mov	r4,r2
1000f05c:	01400304 	movi	r5,12
1000f060:	000c0ac0 	call	1000c0ac <__mulsi3>
1000f064:	8085883a 	add	r2,r16,r2
1000f068:	10800204 	addi	r2,r2,8
1000f06c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1000f070:	04040074 	movhi	r16,4097
1000f074:	8402f604 	addi	r16,r16,3032
1000f078:	e0bffe17 	ldw	r2,-8(fp)
1000f07c:	1009883a 	mov	r4,r2
1000f080:	01400304 	movi	r5,12
1000f084:	000c0ac0 	call	1000c0ac <__mulsi3>
1000f088:	8085883a 	add	r2,r16,r2
1000f08c:	10000015 	stw	zero,0(r2)
  }
}
1000f090:	e6ffff04 	addi	sp,fp,-4
1000f094:	dfc00217 	ldw	ra,8(sp)
1000f098:	df000117 	ldw	fp,4(sp)
1000f09c:	dc000017 	ldw	r16,0(sp)
1000f0a0:	dec00304 	addi	sp,sp,12
1000f0a4:	f800283a 	ret

1000f0a8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1000f0a8:	defff904 	addi	sp,sp,-28
1000f0ac:	df000615 	stw	fp,24(sp)
1000f0b0:	df000604 	addi	fp,sp,24
1000f0b4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1000f0b8:	0005303a 	rdctl	r2,status
1000f0bc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1000f0c0:	e0fffc17 	ldw	r3,-16(fp)
1000f0c4:	00bfff84 	movi	r2,-2
1000f0c8:	1884703a 	and	r2,r3,r2
1000f0cc:	1001703a 	wrctl	status,r2
  
  return context;
1000f0d0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1000f0d4:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1000f0d8:	d0a00c17 	ldw	r2,-32720(gp)
1000f0dc:	10c000c4 	addi	r3,r2,3
1000f0e0:	00bfff04 	movi	r2,-4
1000f0e4:	1884703a 	and	r2,r3,r2
1000f0e8:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1000f0ec:	d0e00c17 	ldw	r3,-32720(gp)
1000f0f0:	e0bfff17 	ldw	r2,-4(fp)
1000f0f4:	1887883a 	add	r3,r3,r2
1000f0f8:	00860034 	movhi	r2,6144
1000f0fc:	10800004 	addi	r2,r2,0
1000f100:	10c0062e 	bgeu	r2,r3,1000f11c <sbrk+0x74>
1000f104:	e0bffa17 	ldw	r2,-24(fp)
1000f108:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1000f10c:	e0bffd17 	ldw	r2,-12(fp)
1000f110:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1000f114:	00bfffc4 	movi	r2,-1
1000f118:	00000b06 	br	1000f148 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1000f11c:	d0a00c17 	ldw	r2,-32720(gp)
1000f120:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
1000f124:	d0e00c17 	ldw	r3,-32720(gp)
1000f128:	e0bfff17 	ldw	r2,-4(fp)
1000f12c:	1885883a 	add	r2,r3,r2
1000f130:	d0a00c15 	stw	r2,-32720(gp)
1000f134:	e0bffa17 	ldw	r2,-24(fp)
1000f138:	e0bffe15 	stw	r2,-8(fp)
1000f13c:	e0bffe17 	ldw	r2,-8(fp)
1000f140:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1000f144:	e0bffb17 	ldw	r2,-20(fp)
} 
1000f148:	e037883a 	mov	sp,fp
1000f14c:	df000017 	ldw	fp,0(sp)
1000f150:	dec00104 	addi	sp,sp,4
1000f154:	f800283a 	ret

1000f158 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
1000f158:	defffd04 	addi	sp,sp,-12
1000f15c:	dfc00215 	stw	ra,8(sp)
1000f160:	df000115 	stw	fp,4(sp)
1000f164:	df000104 	addi	fp,sp,4
1000f168:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
1000f16c:	e13fff17 	ldw	r4,-4(fp)
1000f170:	000f32c0 	call	1000f32c <alt_busy_sleep>
}
1000f174:	e037883a 	mov	sp,fp
1000f178:	dfc00117 	ldw	ra,4(sp)
1000f17c:	df000017 	ldw	fp,0(sp)
1000f180:	dec00204 	addi	sp,sp,8
1000f184:	f800283a 	ret

1000f188 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000f188:	defffe04 	addi	sp,sp,-8
1000f18c:	dfc00115 	stw	ra,4(sp)
1000f190:	df000015 	stw	fp,0(sp)
1000f194:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000f198:	00840074 	movhi	r2,4097
1000f19c:	10836104 	addi	r2,r2,3460
1000f1a0:	10800017 	ldw	r2,0(r2)
1000f1a4:	10000526 	beq	r2,zero,1000f1bc <alt_get_errno+0x34>
1000f1a8:	00840074 	movhi	r2,4097
1000f1ac:	10836104 	addi	r2,r2,3460
1000f1b0:	10800017 	ldw	r2,0(r2)
1000f1b4:	103ee83a 	callr	r2
1000f1b8:	00000206 	br	1000f1c4 <alt_get_errno+0x3c>
1000f1bc:	00840074 	movhi	r2,4097
1000f1c0:	10860a04 	addi	r2,r2,6184
}
1000f1c4:	e037883a 	mov	sp,fp
1000f1c8:	dfc00117 	ldw	ra,4(sp)
1000f1cc:	df000017 	ldw	fp,0(sp)
1000f1d0:	dec00204 	addi	sp,sp,8
1000f1d4:	f800283a 	ret

1000f1d8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1000f1d8:	defff904 	addi	sp,sp,-28
1000f1dc:	dfc00615 	stw	ra,24(sp)
1000f1e0:	df000515 	stw	fp,20(sp)
1000f1e4:	df000504 	addi	fp,sp,20
1000f1e8:	e13ffd15 	stw	r4,-12(fp)
1000f1ec:	e17ffe15 	stw	r5,-8(fp)
1000f1f0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000f1f4:	e0bffd17 	ldw	r2,-12(fp)
1000f1f8:	10000816 	blt	r2,zero,1000f21c <write+0x44>
1000f1fc:	e13ffd17 	ldw	r4,-12(fp)
1000f200:	01400304 	movi	r5,12
1000f204:	000c0ac0 	call	1000c0ac <__mulsi3>
1000f208:	1007883a 	mov	r3,r2
1000f20c:	00840074 	movhi	r2,4097
1000f210:	1082f604 	addi	r2,r2,3032
1000f214:	1885883a 	add	r2,r3,r2
1000f218:	00000106 	br	1000f220 <write+0x48>
1000f21c:	0005883a 	mov	r2,zero
1000f220:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1000f224:	e0bffb17 	ldw	r2,-20(fp)
1000f228:	10002126 	beq	r2,zero,1000f2b0 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1000f22c:	e0bffb17 	ldw	r2,-20(fp)
1000f230:	10800217 	ldw	r2,8(r2)
1000f234:	108000cc 	andi	r2,r2,3
1000f238:	10001826 	beq	r2,zero,1000f29c <write+0xc4>
1000f23c:	e0bffb17 	ldw	r2,-20(fp)
1000f240:	10800017 	ldw	r2,0(r2)
1000f244:	10800617 	ldw	r2,24(r2)
1000f248:	10001426 	beq	r2,zero,1000f29c <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1000f24c:	e0bffb17 	ldw	r2,-20(fp)
1000f250:	10800017 	ldw	r2,0(r2)
1000f254:	10800617 	ldw	r2,24(r2)
1000f258:	e0ffff17 	ldw	r3,-4(fp)
1000f25c:	e13ffb17 	ldw	r4,-20(fp)
1000f260:	e17ffe17 	ldw	r5,-8(fp)
1000f264:	180d883a 	mov	r6,r3
1000f268:	103ee83a 	callr	r2
1000f26c:	e0bffc15 	stw	r2,-16(fp)
1000f270:	e0bffc17 	ldw	r2,-16(fp)
1000f274:	1000070e 	bge	r2,zero,1000f294 <write+0xbc>
      {
        ALT_ERRNO = -rval;
1000f278:	000f1880 	call	1000f188 <alt_get_errno>
1000f27c:	1007883a 	mov	r3,r2
1000f280:	e0bffc17 	ldw	r2,-16(fp)
1000f284:	0085c83a 	sub	r2,zero,r2
1000f288:	18800015 	stw	r2,0(r3)
        return -1;
1000f28c:	00bfffc4 	movi	r2,-1
1000f290:	00000c06 	br	1000f2c4 <write+0xec>
      }
      return rval;
1000f294:	e0bffc17 	ldw	r2,-16(fp)
1000f298:	00000a06 	br	1000f2c4 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
1000f29c:	000f1880 	call	1000f188 <alt_get_errno>
1000f2a0:	1007883a 	mov	r3,r2
1000f2a4:	00800344 	movi	r2,13
1000f2a8:	18800015 	stw	r2,0(r3)
1000f2ac:	00000406 	br	1000f2c0 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1000f2b0:	000f1880 	call	1000f188 <alt_get_errno>
1000f2b4:	1007883a 	mov	r3,r2
1000f2b8:	00801444 	movi	r2,81
1000f2bc:	18800015 	stw	r2,0(r3)
  }
  return -1;
1000f2c0:	00bfffc4 	movi	r2,-1
}
1000f2c4:	e037883a 	mov	sp,fp
1000f2c8:	dfc00117 	ldw	ra,4(sp)
1000f2cc:	df000017 	ldw	fp,0(sp)
1000f2d0:	dec00204 	addi	sp,sp,8
1000f2d4:	f800283a 	ret

1000f2d8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1000f2d8:	defffd04 	addi	sp,sp,-12
1000f2dc:	dfc00215 	stw	ra,8(sp)
1000f2e0:	df000115 	stw	fp,4(sp)
1000f2e4:	df000104 	addi	fp,sp,4
1000f2e8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1000f2ec:	000f5740 	call	1000f574 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1000f2f0:	00800044 	movi	r2,1
1000f2f4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1000f2f8:	e037883a 	mov	sp,fp
1000f2fc:	dfc00117 	ldw	ra,4(sp)
1000f300:	df000017 	ldw	fp,0(sp)
1000f304:	dec00204 	addi	sp,sp,8
1000f308:	f800283a 	ret

1000f30c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1000f30c:	deffff04 	addi	sp,sp,-4
1000f310:	df000015 	stw	fp,0(sp)
1000f314:	d839883a 	mov	fp,sp
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
1000f318:	0001883a 	nop
}
1000f31c:	e037883a 	mov	sp,fp
1000f320:	df000017 	ldw	fp,0(sp)
1000f324:	dec00104 	addi	sp,sp,4
1000f328:	f800283a 	ret

1000f32c <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
1000f32c:	defffa04 	addi	sp,sp,-24
1000f330:	dfc00515 	stw	ra,20(sp)
1000f334:	df000415 	stw	fp,16(sp)
1000f338:	df000404 	addi	fp,sp,16
1000f33c:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
1000f340:	00800244 	movi	r2,9
1000f344:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
1000f348:	e13ffd17 	ldw	r4,-12(fp)
1000f34c:	014003f4 	movhi	r5,15
1000f350:	29509004 	addi	r5,r5,16960
1000f354:	000c0ac0 	call	1000c0ac <__mulsi3>
1000f358:	0100bef4 	movhi	r4,763
1000f35c:	213c2004 	addi	r4,r4,-3968
1000f360:	100b883a 	mov	r5,r2
1000f364:	000c09c0 	call	1000c09c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
1000f368:	01200034 	movhi	r4,32768
1000f36c:	213fffc4 	addi	r4,r4,-1
1000f370:	100b883a 	mov	r5,r2
1000f374:	000c09c0 	call	1000c09c <__udivsi3>
1000f378:	e13fff17 	ldw	r4,-4(fp)
1000f37c:	100b883a 	mov	r5,r2
1000f380:	000c09c0 	call	1000c09c <__udivsi3>
1000f384:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
1000f388:	e0bffe17 	ldw	r2,-8(fp)
1000f38c:	10002a26 	beq	r2,zero,1000f438 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
1000f390:	e03ffc15 	stw	zero,-16(fp)
1000f394:	00001706 	br	1000f3f4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
1000f398:	00a00034 	movhi	r2,32768
1000f39c:	10bfffc4 	addi	r2,r2,-1
1000f3a0:	10bfffc4 	addi	r2,r2,-1
1000f3a4:	103ffe1e 	bne	r2,zero,1000f3a0 <__alt_data_end+0xf800f3a0>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
1000f3a8:	e13ffd17 	ldw	r4,-12(fp)
1000f3ac:	014003f4 	movhi	r5,15
1000f3b0:	29509004 	addi	r5,r5,16960
1000f3b4:	000c0ac0 	call	1000c0ac <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
1000f3b8:	0100bef4 	movhi	r4,763
1000f3bc:	213c2004 	addi	r4,r4,-3968
1000f3c0:	100b883a 	mov	r5,r2
1000f3c4:	000c09c0 	call	1000c09c <__udivsi3>
1000f3c8:	01200034 	movhi	r4,32768
1000f3cc:	213fffc4 	addi	r4,r4,-1
1000f3d0:	100b883a 	mov	r5,r2
1000f3d4:	000c09c0 	call	1000c09c <__udivsi3>
1000f3d8:	1007883a 	mov	r3,r2
1000f3dc:	e0bfff17 	ldw	r2,-4(fp)
1000f3e0:	10c5c83a 	sub	r2,r2,r3
1000f3e4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
1000f3e8:	e0bffc17 	ldw	r2,-16(fp)
1000f3ec:	10800044 	addi	r2,r2,1
1000f3f0:	e0bffc15 	stw	r2,-16(fp)
1000f3f4:	e0fffc17 	ldw	r3,-16(fp)
1000f3f8:	e0bffe17 	ldw	r2,-8(fp)
1000f3fc:	18bfe616 	blt	r3,r2,1000f398 <__alt_data_end+0xf800f398>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
1000f400:	e13ffd17 	ldw	r4,-12(fp)
1000f404:	014003f4 	movhi	r5,15
1000f408:	29509004 	addi	r5,r5,16960
1000f40c:	000c0ac0 	call	1000c0ac <__mulsi3>
1000f410:	0100bef4 	movhi	r4,763
1000f414:	213c2004 	addi	r4,r4,-3968
1000f418:	100b883a 	mov	r5,r2
1000f41c:	000c09c0 	call	1000c09c <__udivsi3>
1000f420:	1009883a 	mov	r4,r2
1000f424:	e17fff17 	ldw	r5,-4(fp)
1000f428:	000c0ac0 	call	1000c0ac <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
1000f42c:	10bfffc4 	addi	r2,r2,-1
1000f430:	103ffe1e 	bne	r2,zero,1000f42c <__alt_data_end+0xf800f42c>
1000f434:	00000d06 	br	1000f46c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
1000f438:	e13ffd17 	ldw	r4,-12(fp)
1000f43c:	014003f4 	movhi	r5,15
1000f440:	29509004 	addi	r5,r5,16960
1000f444:	000c0ac0 	call	1000c0ac <__mulsi3>
1000f448:	0100bef4 	movhi	r4,763
1000f44c:	213c2004 	addi	r4,r4,-3968
1000f450:	100b883a 	mov	r5,r2
1000f454:	000c09c0 	call	1000c09c <__udivsi3>
1000f458:	1009883a 	mov	r4,r2
1000f45c:	e17fff17 	ldw	r5,-4(fp)
1000f460:	000c0ac0 	call	1000c0ac <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
1000f464:	10bfffc4 	addi	r2,r2,-1
1000f468:	00bffe16 	blt	zero,r2,1000f464 <__alt_data_end+0xf800f464>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
1000f46c:	0005883a 	mov	r2,zero
}
1000f470:	e037883a 	mov	sp,fp
1000f474:	dfc00117 	ldw	ra,4(sp)
1000f478:	df000017 	ldw	fp,0(sp)
1000f47c:	dec00204 	addi	sp,sp,8
1000f480:	f800283a 	ret

1000f484 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1000f484:	deffff04 	addi	sp,sp,-4
1000f488:	df000015 	stw	fp,0(sp)
1000f48c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1000f490:	e037883a 	mov	sp,fp
1000f494:	df000017 	ldw	fp,0(sp)
1000f498:	dec00104 	addi	sp,sp,4
1000f49c:	f800283a 	ret

1000f4a0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1000f4a0:	defffd04 	addi	sp,sp,-12
1000f4a4:	dfc00215 	stw	ra,8(sp)
1000f4a8:	df000115 	stw	fp,4(sp)
1000f4ac:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1000f4b0:	00840074 	movhi	r2,4097
1000f4b4:	10be2e04 	addi	r2,r2,-1864
1000f4b8:	e0bfff15 	stw	r2,-4(fp)
1000f4bc:	00000606 	br	1000f4d8 <_do_ctors+0x38>
        (*ctor) (); 
1000f4c0:	e0bfff17 	ldw	r2,-4(fp)
1000f4c4:	10800017 	ldw	r2,0(r2)
1000f4c8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1000f4cc:	e0bfff17 	ldw	r2,-4(fp)
1000f4d0:	10bfff04 	addi	r2,r2,-4
1000f4d4:	e0bfff15 	stw	r2,-4(fp)
1000f4d8:	e0ffff17 	ldw	r3,-4(fp)
1000f4dc:	00840074 	movhi	r2,4097
1000f4e0:	10be2f04 	addi	r2,r2,-1860
1000f4e4:	18bff62e 	bgeu	r3,r2,1000f4c0 <__alt_data_end+0xf800f4c0>
        (*ctor) (); 
}
1000f4e8:	e037883a 	mov	sp,fp
1000f4ec:	dfc00117 	ldw	ra,4(sp)
1000f4f0:	df000017 	ldw	fp,0(sp)
1000f4f4:	dec00204 	addi	sp,sp,8
1000f4f8:	f800283a 	ret

1000f4fc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1000f4fc:	defffd04 	addi	sp,sp,-12
1000f500:	dfc00215 	stw	ra,8(sp)
1000f504:	df000115 	stw	fp,4(sp)
1000f508:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1000f50c:	00840074 	movhi	r2,4097
1000f510:	10be2e04 	addi	r2,r2,-1864
1000f514:	e0bfff15 	stw	r2,-4(fp)
1000f518:	00000606 	br	1000f534 <_do_dtors+0x38>
        (*dtor) (); 
1000f51c:	e0bfff17 	ldw	r2,-4(fp)
1000f520:	10800017 	ldw	r2,0(r2)
1000f524:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1000f528:	e0bfff17 	ldw	r2,-4(fp)
1000f52c:	10bfff04 	addi	r2,r2,-4
1000f530:	e0bfff15 	stw	r2,-4(fp)
1000f534:	e0ffff17 	ldw	r3,-4(fp)
1000f538:	00840074 	movhi	r2,4097
1000f53c:	10be2f04 	addi	r2,r2,-1860
1000f540:	18bff62e 	bgeu	r3,r2,1000f51c <__alt_data_end+0xf800f51c>
        (*dtor) (); 
}
1000f544:	e037883a 	mov	sp,fp
1000f548:	dfc00117 	ldw	ra,4(sp)
1000f54c:	df000017 	ldw	fp,0(sp)
1000f550:	dec00204 	addi	sp,sp,8
1000f554:	f800283a 	ret

1000f558 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1000f558:	deffff04 	addi	sp,sp,-4
1000f55c:	df000015 	stw	fp,0(sp)
1000f560:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
1000f564:	e037883a 	mov	sp,fp
1000f568:	df000017 	ldw	fp,0(sp)
1000f56c:	dec00104 	addi	sp,sp,4
1000f570:	f800283a 	ret

1000f574 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1000f574:	deffff04 	addi	sp,sp,-4
1000f578:	df000015 	stw	fp,0(sp)
1000f57c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1000f580:	000170fa 	wrctl	ienable,zero
}
1000f584:	e037883a 	mov	sp,fp
1000f588:	df000017 	ldw	fp,0(sp)
1000f58c:	dec00104 	addi	sp,sp,4
1000f590:	f800283a 	ret

1000f594 <atexit>:
1000f594:	200b883a 	mov	r5,r4
1000f598:	000d883a 	mov	r6,zero
1000f59c:	0009883a 	mov	r4,zero
1000f5a0:	000f883a 	mov	r7,zero
1000f5a4:	000f5e01 	jmpi	1000f5e0 <__register_exitproc>

1000f5a8 <exit>:
1000f5a8:	defffe04 	addi	sp,sp,-8
1000f5ac:	000b883a 	mov	r5,zero
1000f5b0:	dc000015 	stw	r16,0(sp)
1000f5b4:	dfc00115 	stw	ra,4(sp)
1000f5b8:	2021883a 	mov	r16,r4
1000f5bc:	000f6f40 	call	1000f6f4 <__call_exitprocs>
1000f5c0:	00840074 	movhi	r2,4097
1000f5c4:	10835604 	addi	r2,r2,3416
1000f5c8:	11000017 	ldw	r4,0(r2)
1000f5cc:	20800f17 	ldw	r2,60(r4)
1000f5d0:	10000126 	beq	r2,zero,1000f5d8 <exit+0x30>
1000f5d4:	103ee83a 	callr	r2
1000f5d8:	8009883a 	mov	r4,r16
1000f5dc:	000f8880 	call	1000f888 <_exit>

1000f5e0 <__register_exitproc>:
1000f5e0:	00840074 	movhi	r2,4097
1000f5e4:	defffa04 	addi	sp,sp,-24
1000f5e8:	10835604 	addi	r2,r2,3416
1000f5ec:	dc000315 	stw	r16,12(sp)
1000f5f0:	14000017 	ldw	r16,0(r2)
1000f5f4:	dc400415 	stw	r17,16(sp)
1000f5f8:	dfc00515 	stw	ra,20(sp)
1000f5fc:	80805217 	ldw	r2,328(r16)
1000f600:	2023883a 	mov	r17,r4
1000f604:	10003626 	beq	r2,zero,1000f6e0 <__register_exitproc+0x100>
1000f608:	10c00117 	ldw	r3,4(r2)
1000f60c:	010007c4 	movi	r4,31
1000f610:	20c00e16 	blt	r4,r3,1000f64c <__register_exitproc+0x6c>
1000f614:	1a400044 	addi	r9,r3,1
1000f618:	8800211e 	bne	r17,zero,1000f6a0 <__register_exitproc+0xc0>
1000f61c:	18c00084 	addi	r3,r3,2
1000f620:	18c7883a 	add	r3,r3,r3
1000f624:	18c7883a 	add	r3,r3,r3
1000f628:	12400115 	stw	r9,4(r2)
1000f62c:	10c7883a 	add	r3,r2,r3
1000f630:	19400015 	stw	r5,0(r3)
1000f634:	0005883a 	mov	r2,zero
1000f638:	dfc00517 	ldw	ra,20(sp)
1000f63c:	dc400417 	ldw	r17,16(sp)
1000f640:	dc000317 	ldw	r16,12(sp)
1000f644:	dec00604 	addi	sp,sp,24
1000f648:	f800283a 	ret
1000f64c:	00800034 	movhi	r2,0
1000f650:	10800004 	addi	r2,r2,0
1000f654:	10002526 	beq	r2,zero,1000f6ec <__register_exitproc+0x10c>
1000f658:	01006404 	movi	r4,400
1000f65c:	d9400015 	stw	r5,0(sp)
1000f660:	d9800115 	stw	r6,4(sp)
1000f664:	d9c00215 	stw	r7,8(sp)
1000f668:	00000000 	call	10000000 <__alt_mem_sdram>
1000f66c:	d9400017 	ldw	r5,0(sp)
1000f670:	d9800117 	ldw	r6,4(sp)
1000f674:	d9c00217 	ldw	r7,8(sp)
1000f678:	10001c26 	beq	r2,zero,1000f6ec <__register_exitproc+0x10c>
1000f67c:	80c05217 	ldw	r3,328(r16)
1000f680:	10000115 	stw	zero,4(r2)
1000f684:	02400044 	movi	r9,1
1000f688:	10c00015 	stw	r3,0(r2)
1000f68c:	80805215 	stw	r2,328(r16)
1000f690:	10006215 	stw	zero,392(r2)
1000f694:	10006315 	stw	zero,396(r2)
1000f698:	0007883a 	mov	r3,zero
1000f69c:	883fdf26 	beq	r17,zero,1000f61c <__alt_data_end+0xf800f61c>
1000f6a0:	18d1883a 	add	r8,r3,r3
1000f6a4:	4211883a 	add	r8,r8,r8
1000f6a8:	1211883a 	add	r8,r2,r8
1000f6ac:	41802215 	stw	r6,136(r8)
1000f6b0:	01000044 	movi	r4,1
1000f6b4:	11806217 	ldw	r6,392(r2)
1000f6b8:	20c8983a 	sll	r4,r4,r3
1000f6bc:	310cb03a 	or	r6,r6,r4
1000f6c0:	11806215 	stw	r6,392(r2)
1000f6c4:	41c04215 	stw	r7,264(r8)
1000f6c8:	01800084 	movi	r6,2
1000f6cc:	89bfd31e 	bne	r17,r6,1000f61c <__alt_data_end+0xf800f61c>
1000f6d0:	11806317 	ldw	r6,396(r2)
1000f6d4:	3108b03a 	or	r4,r6,r4
1000f6d8:	11006315 	stw	r4,396(r2)
1000f6dc:	003fcf06 	br	1000f61c <__alt_data_end+0xf800f61c>
1000f6e0:	80805304 	addi	r2,r16,332
1000f6e4:	80805215 	stw	r2,328(r16)
1000f6e8:	003fc706 	br	1000f608 <__alt_data_end+0xf800f608>
1000f6ec:	00bfffc4 	movi	r2,-1
1000f6f0:	003fd106 	br	1000f638 <__alt_data_end+0xf800f638>

1000f6f4 <__call_exitprocs>:
1000f6f4:	00840074 	movhi	r2,4097
1000f6f8:	10835604 	addi	r2,r2,3416
1000f6fc:	10800017 	ldw	r2,0(r2)
1000f700:	defff404 	addi	sp,sp,-48
1000f704:	dd800815 	stw	r22,32(sp)
1000f708:	d8800015 	stw	r2,0(sp)
1000f70c:	10805204 	addi	r2,r2,328
1000f710:	dd000615 	stw	r20,24(sp)
1000f714:	dc800415 	stw	r18,16(sp)
1000f718:	dfc00b15 	stw	ra,44(sp)
1000f71c:	df000a15 	stw	fp,40(sp)
1000f720:	ddc00915 	stw	r23,36(sp)
1000f724:	dd400715 	stw	r21,28(sp)
1000f728:	dcc00515 	stw	r19,20(sp)
1000f72c:	dc400315 	stw	r17,12(sp)
1000f730:	dc000215 	stw	r16,8(sp)
1000f734:	2025883a 	mov	r18,r4
1000f738:	2829883a 	mov	r20,r5
1000f73c:	d8800115 	stw	r2,4(sp)
1000f740:	05bfffc4 	movi	r22,-1
1000f744:	d8800017 	ldw	r2,0(sp)
1000f748:	14c05217 	ldw	r19,328(r2)
1000f74c:	98001d26 	beq	r19,zero,1000f7c4 <__call_exitprocs+0xd0>
1000f750:	dd400117 	ldw	r21,4(sp)
1000f754:	98800117 	ldw	r2,4(r19)
1000f758:	173fffc4 	addi	fp,r2,-1
1000f75c:	e0000d16 	blt	fp,zero,1000f794 <__call_exitprocs+0xa0>
1000f760:	14000044 	addi	r16,r2,1
1000f764:	8421883a 	add	r16,r16,r16
1000f768:	8421883a 	add	r16,r16,r16
1000f76c:	84402004 	addi	r17,r16,128
1000f770:	9c63883a 	add	r17,r19,r17
1000f774:	9c21883a 	add	r16,r19,r16
1000f778:	a0001e26 	beq	r20,zero,1000f7f4 <__call_exitprocs+0x100>
1000f77c:	80804017 	ldw	r2,256(r16)
1000f780:	15001c26 	beq	r2,r20,1000f7f4 <__call_exitprocs+0x100>
1000f784:	e73fffc4 	addi	fp,fp,-1
1000f788:	843fff04 	addi	r16,r16,-4
1000f78c:	8c7fff04 	addi	r17,r17,-4
1000f790:	e5bff91e 	bne	fp,r22,1000f778 <__alt_data_end+0xf800f778>
1000f794:	00800034 	movhi	r2,0
1000f798:	10800004 	addi	r2,r2,0
1000f79c:	10000926 	beq	r2,zero,1000f7c4 <__call_exitprocs+0xd0>
1000f7a0:	98800117 	ldw	r2,4(r19)
1000f7a4:	1000311e 	bne	r2,zero,1000f86c <__call_exitprocs+0x178>
1000f7a8:	98800017 	ldw	r2,0(r19)
1000f7ac:	10003426 	beq	r2,zero,1000f880 <__call_exitprocs+0x18c>
1000f7b0:	9809883a 	mov	r4,r19
1000f7b4:	a8800015 	stw	r2,0(r21)
1000f7b8:	00000000 	call	10000000 <__alt_mem_sdram>
1000f7bc:	acc00017 	ldw	r19,0(r21)
1000f7c0:	983fe41e 	bne	r19,zero,1000f754 <__alt_data_end+0xf800f754>
1000f7c4:	dfc00b17 	ldw	ra,44(sp)
1000f7c8:	df000a17 	ldw	fp,40(sp)
1000f7cc:	ddc00917 	ldw	r23,36(sp)
1000f7d0:	dd800817 	ldw	r22,32(sp)
1000f7d4:	dd400717 	ldw	r21,28(sp)
1000f7d8:	dd000617 	ldw	r20,24(sp)
1000f7dc:	dcc00517 	ldw	r19,20(sp)
1000f7e0:	dc800417 	ldw	r18,16(sp)
1000f7e4:	dc400317 	ldw	r17,12(sp)
1000f7e8:	dc000217 	ldw	r16,8(sp)
1000f7ec:	dec00c04 	addi	sp,sp,48
1000f7f0:	f800283a 	ret
1000f7f4:	98800117 	ldw	r2,4(r19)
1000f7f8:	80c00017 	ldw	r3,0(r16)
1000f7fc:	10bfffc4 	addi	r2,r2,-1
1000f800:	17001526 	beq	r2,fp,1000f858 <__call_exitprocs+0x164>
1000f804:	80000015 	stw	zero,0(r16)
1000f808:	183fde26 	beq	r3,zero,1000f784 <__alt_data_end+0xf800f784>
1000f80c:	00800044 	movi	r2,1
1000f810:	1708983a 	sll	r4,r2,fp
1000f814:	98806217 	ldw	r2,392(r19)
1000f818:	9dc00117 	ldw	r23,4(r19)
1000f81c:	2084703a 	and	r2,r4,r2
1000f820:	1000061e 	bne	r2,zero,1000f83c <__call_exitprocs+0x148>
1000f824:	183ee83a 	callr	r3
1000f828:	98800117 	ldw	r2,4(r19)
1000f82c:	15ffc51e 	bne	r2,r23,1000f744 <__alt_data_end+0xf800f744>
1000f830:	a8800017 	ldw	r2,0(r21)
1000f834:	14ffd326 	beq	r2,r19,1000f784 <__alt_data_end+0xf800f784>
1000f838:	003fc206 	br	1000f744 <__alt_data_end+0xf800f744>
1000f83c:	98806317 	ldw	r2,396(r19)
1000f840:	2084703a 	and	r2,r4,r2
1000f844:	1000061e 	bne	r2,zero,1000f860 <__call_exitprocs+0x16c>
1000f848:	89400017 	ldw	r5,0(r17)
1000f84c:	9009883a 	mov	r4,r18
1000f850:	183ee83a 	callr	r3
1000f854:	003ff406 	br	1000f828 <__alt_data_end+0xf800f828>
1000f858:	9f000115 	stw	fp,4(r19)
1000f85c:	003fea06 	br	1000f808 <__alt_data_end+0xf800f808>
1000f860:	89000017 	ldw	r4,0(r17)
1000f864:	183ee83a 	callr	r3
1000f868:	003fef06 	br	1000f828 <__alt_data_end+0xf800f828>
1000f86c:	98800017 	ldw	r2,0(r19)
1000f870:	982b883a 	mov	r21,r19
1000f874:	1027883a 	mov	r19,r2
1000f878:	983fb61e 	bne	r19,zero,1000f754 <__alt_data_end+0xf800f754>
1000f87c:	003fd106 	br	1000f7c4 <__alt_data_end+0xf800f7c4>
1000f880:	0005883a 	mov	r2,zero
1000f884:	003ffa06 	br	1000f870 <__alt_data_end+0xf800f870>

1000f888 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1000f888:	defffd04 	addi	sp,sp,-12
1000f88c:	df000215 	stw	fp,8(sp)
1000f890:	df000204 	addi	fp,sp,8
1000f894:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1000f898:	0001883a 	nop
1000f89c:	e0bfff17 	ldw	r2,-4(fp)
1000f8a0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1000f8a4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1000f8a8:	10000226 	beq	r2,zero,1000f8b4 <_exit+0x2c>
    ALT_SIM_FAIL();
1000f8ac:	002af070 	cmpltui	zero,zero,43969
1000f8b0:	00000106 	br	1000f8b8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1000f8b4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1000f8b8:	003fff06 	br	1000f8b8 <__alt_data_end+0xf800f8b8>
